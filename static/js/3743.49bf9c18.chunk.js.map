{"version":3,"file":"static/js/3743.49bf9c18.chunk.js","mappings":"4OAEO,MAAMA,EAAc,WAAyB,IAAxBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAASC,EAAOC,MACZ,KAAKC,EAAAA,EAAMC,MAAO,MAAO,IAAKH,EAAOI,QAASC,QAAQ,GACtD,KAAKH,EAAAA,EAAMI,OAAQ,MAAO,CAAED,QAAQ,GACpC,QAAS,OAAOT,EAExB,E,aCJA,MAAMW,GAAYC,EAAAA,EAAAA,MAAK,IAAM,qDAEvBC,EAAOA,IAAeC,KAAKC,MAAMC,aAAaC,QAAQ,UAAa,CAAER,QAAQ,GAEtES,EAAMC,IAAe,IAAd,KAAEC,GAAMD,EAC1B,MAAQE,EAAMC,IAAaC,EAAAA,EAAAA,YAAYxB,EAAa,CAAC,EAAGc,IAChDW,EAAOC,GCROC,MACpB,MAAMC,EAAOC,SAASC,eAAe,QAC/BC,EAAgBd,aAAaC,QAAQ,UACnCO,EAAOO,IAAaC,EAAAA,EAAAA,UAAUF,GAAgCH,EAAKM,QAAQT,OAgBnF,OAdIM,IAAkBH,EAAKM,QAAQT,MAAQM,GAcpC,CAAEN,EAXWC,KAChB,MAAMS,EAASN,SAASC,eAAe,UAG9B,UADAL,GACSG,EAAKM,QAAQT,MAAM,OAAQU,EAAOD,QAAQT,MAAM,OAAQR,aAAamB,QAAQ,QAAS,QAASJ,EAAS,UAE7GJ,EAAKM,QAAQT,MAAM,QAASU,EAAOD,QAAQT,MAAM,QAASR,aAAamB,QAAQ,QAAS,SAAUJ,EAAS,aDN/FL,GAO/B,OALAU,EAAAA,EAAAA,WAAU,KACJf,GACJL,aAAamB,QAAQ,OAAQrB,KAAKuB,UAAUhB,KAC3C,CAACA,KAGFiB,EAAAA,EAAAA,KAACC,EAAAA,EAAYC,SAAQ,CAACC,MAAO,CAAEpB,OAAKC,YAAWoB,UAC7CJ,EAAAA,EAAAA,KAAC3B,EAAS,CAACS,KAAMA,EAAMI,MAAOA,EAAOC,YAAaA,OAKxD,G,kCEtBO,MAAMc,GAAcI,E,QAAAA,gB,kCCFpB,MAAMrC,EAAQ,CACjBC,MAAO,eACPG,OAAQ,gB","sources":["auth/authReducer.js","App.js","hooks/useTheme.js","auth/authContext.js","types/types.js"],"sourcesContent":["import { types } from \"../types/types.js\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch ( action.type ) {\r\n        case types.login: return { ...action.payload, logged: true }\r\n        case types.logout: return { logged: false }\r\n        default: return state;\r\n    }\r\n}","import { lazy, useEffect, useReducer } from 'react';\r\nimport { AuthContext } from './auth/authContext.js';\r\nimport { authReducer } from './auth/authReducer.js';\r\nimport { useTheme } from './hooks/useTheme.js';\r\nconst AppRouter = lazy(() => import('./routers/AppRouter.js'));\r\n\r\nconst init = () => { return JSON.parse(localStorage.getItem('user') ) || { logged: false}; }\r\n\r\nexport const App = ({ Logo }) => {\r\n  const [ user, dispatch ] = useReducer( authReducer, {}, init );\r\n  const [ theme, handleTheme ] = useTheme();                        // App theme\r\n\r\n  useEffect(() => {\r\n    if(!user) return;\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }, [user] );\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user,dispatch }}>\r\n      <AppRouter Logo={Logo} theme={theme} handleTheme={handleTheme} />\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;","import { useState } from 'react';\n\nexport const useTheme = () => {\n    const body = document.getElementById('body');\n    const storagedTheme = localStorage.getItem('theme');                                        // Check localstorage for theme preferences stored\n    const [ theme, setTheme ] = useState( storagedTheme ? storagedTheme : body.dataset.theme ); // Theme: Light or Dark\n    \n    if( storagedTheme ) { body.dataset.theme = storagedTheme }                                  // If exist assign any localstoraged theme\n\n    /****** Body and Navbar Theme ******/\n    const handleTheme = () => {\n        const navbar = document.getElementById('navbar');\n\n        switch ( theme ) {\n            case 'light': body.dataset.theme='dark'; navbar.dataset.theme='dark'; localStorage.setItem('theme', 'dark'); setTheme('dark'); break;\n            case 'dark': body.dataset.theme='light'; navbar.dataset.theme='light'; localStorage.setItem('theme', 'light'); setTheme('light'); break;\n            default: body.dataset.theme='light'; navbar.dataset.theme='light'; localStorage.setItem('theme', 'light'); setTheme('light'); break;\n        }\n        // document.getElementById('collapsibleNavbar').classList.remove('show');\n    }\n\n    return [ theme, handleTheme ]\n}","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n}"],"names":["authReducer","state","arguments","length","undefined","action","type","types","login","payload","logged","logout","AppRouter","lazy","init","JSON","parse","localStorage","getItem","App","_ref","Logo","user","dispatch","useReducer","theme","handleTheme","useTheme","body","document","getElementById","storagedTheme","setTheme","useState","dataset","navbar","setItem","useEffect","stringify","_jsx","AuthContext","Provider","value","children","createContext"],"sourceRoot":""}