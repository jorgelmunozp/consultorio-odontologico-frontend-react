{"version":3,"file":"static/js/5237.d663c261.chunk.js","mappings":"iPAGA,MAAMA,GAAYC,EAAAA,EAAAA,MAAK,IAAM,gCACvBC,GAAYD,EAAAA,EAAAA,MAAK,IAAM,gCACvBE,GAAgBF,EAAAA,EAAAA,MAAK,IAAM,gCAEpBG,EAAYC,IAA8C,IAA7C,UAAEC,EAAS,MAAEC,EAAK,MAAEC,EAAK,WAAEC,GAAYJ,EAC/D,MAAMK,GAAaC,EAAAA,EAAAA,GAAe,CAAEL,UAAUA,IAExCM,EAASF,EAAWG,IACpBC,EAAOJ,EAAWI,MAClB,QAAEC,EAAO,WAACC,EAAU,cAACC,EAAa,UAACC,EAAS,aAACC,EAAY,YAACC,EAAW,WAACC,EAAU,aAACC,EAAY,eAACC,GAAmBb,EAAWc,MAC5H,eAAEC,EAAc,UAAEC,GAAchB,EAAWiB,MAE1CC,EAAOC,IAAYC,EAAAA,EAAAA,UAASb,IACnCc,EAAAA,EAAAA,WAAU,IAAMF,EAASZ,GAAiB,IAAK,CAACA,IAYhD,OACEe,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAW,4CAA8CxB,EAAa,gBAAgB,UAAUyB,SAAA,EACnGF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAG1B,KAC1CwB,EAAAA,EAAAA,KAAChC,EAAS,CAACoC,KAAM7B,EAAMD,GAAW+B,WAAYT,MAAOd,EAAMC,QAASA,EAASC,WAAYA,EAAYiB,UAAW,8BAAgCxB,EAAa,gBAAgB,aAC7KuB,EAAAA,EAAAA,KAACM,EAAAA,SAAQ,CAACC,UAAWP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAqBC,UACvDF,EAAAA,EAAAA,KAAC9B,EAAS,CAACI,UAAWA,EAAWC,MAAOA,EAAOO,KAAMA,EAAMF,OAAQA,EAAQ4B,MAAOZ,EAAOH,eAAgBA,EAAgBC,UAAWA,EAAWR,UAAWA,EAAWuB,YAhBzJA,CAACC,EAAQC,EAAIrC,KAC/BuB,EAASZ,IACP,OAAQyB,GACN,IAAK,SAAU,OAAOzB,EAAc2B,OAAOC,GAAQA,EAAKC,MAAQH,GAChE,IAAK,SAAU,OAAO1B,EAAc8B,IAAIF,GAAQA,EAAKC,MAAQH,EAAK,IAAKE,EAAM,CAACvC,GAAY,IAAKuC,EAAKvC,KAAiBuC,GACrH,QAAS,OAAO5B,WAahBe,EAAAA,EAAAA,KAAC7B,EAAa,CAACqC,MAAOvB,EAAeE,aAAcA,EAAcD,UAAWA,EAAWE,YAAaA,EAAaC,WAAYA,EAAYC,aAAcA,EAAcC,eAAgBA,UAM7L,G","sources":["components/crud/QueryItem.js"],"sourcesContent":["import { Suspense, lazy, useState, useEffect } from 'react';\r\nimport { useCrudFactory } from '../../hooks/useCrudFactory.js';\r\n\r\nconst SearchBar = lazy(() => import('../search/SearchBar.js'));\r\nconst ItemsList = lazy(() => import('./items/ItemsList.js'));\r\nconst PaginationBar = lazy(() => import('../pagination/PaginationBar.js'));\r\n\r\nexport const QueryItem = ({ classType, Icons, title, isMenuOpen }) => {\r\n  const objectHook = useCrudFactory({ classType:classType });\r\n\r\n  const urlApi = objectHook.api;\r\n  const keys = objectHook.keys;\r\n  const { queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages } = objectHook.data;\r\n  const { SortByProperty, setSortBy } = objectHook.sort;\r\n\r\n  const [items, setItems] = useState(arrayFiltered);\r\n  useEffect(() => setItems(arrayFiltered || []), [arrayFiltered]);     // Si initialArray cambia desde fuera, se sincroniza\r\n  \r\n  const handleItems = (action, id, classType) => {\r\n    setItems(arrayFiltered => {\r\n      switch (action) {\r\n        case 'delete': return arrayFiltered.filter(item => item._id !== id);\r\n        case 'update': return arrayFiltered.map(item => item._id === id ? { ...item, [classType]: { ...item[classType] } } : item);\r\n        default: return arrayFiltered;\r\n      }\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className={'container-fluid mt-4 mt-sm-5 me-0 smooth' + (isMenuOpen ? ' w-responsive':' w-100')}>\r\n        <h5 className='main-color fs-sm-2 mb-4'>{ title }</h5>\r\n        <SearchBar Icon={Icons[classType].IconSearch} items={keys} queries={queries} setQueries={setQueries} className={'float-end pb-3 me-0 smooth' + (isMenuOpen ? ' w-responsive':' w-100')} />\r\n        <Suspense fallback={ <div className=\"loaderSpin\"></div> }>\r\n          <ItemsList classType={classType} Icons={Icons} keys={keys} urlApi={urlApi} array={items} SortByProperty={SortByProperty} setSortBy={setSortBy} indexPage={indexPage} handleItems={handleItems} />\r\n        </Suspense>\r\n        <PaginationBar array={arrayFiltered} itemsPerPage={itemsPerPage} indexPage={indexPage} activePages={activePages} indexPages={indexPages} setIndexPage={setIndexPage} setActivePages={setActivePages} /> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryItem;"],"names":["SearchBar","lazy","ItemsList","PaginationBar","QueryItem","_ref","classType","Icons","title","isMenuOpen","objectHook","useCrudFactory","urlApi","api","keys","queries","setQueries","arrayFiltered","indexPage","itemsPerPage","activePages","indexPages","setIndexPage","setActivePages","data","SortByProperty","setSortBy","sort","items","setItems","useState","useEffect","_jsx","className","children","_jsxs","Icon","IconSearch","Suspense","fallback","array","handleItems","action","id","filter","item","_id","map"],"sourceRoot":""}