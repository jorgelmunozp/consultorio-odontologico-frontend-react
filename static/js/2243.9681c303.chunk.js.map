{"version":3,"file":"static/js/2243.9681c303.chunk.js","mappings":"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","sources":["components/menu/Navbar.js"],"sourcesContent":["import '../views/login/login.css';\r\nimport { lazy, memo, useContext, useCallback } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/authContext.js';\r\nimport { types } from '../../types/types.js';\r\nimport { useThemeContext } from \"../../theme/ThemeContext.js\";\r\nimport { myColor, myTitle } from \"../../global.js\";\r\n\r\nconst Logo = memo( lazy(() => import('../icons/logo/Logo.js')) );\r\nconst User = memo( lazy(() => import('../icons/user/User.js')) );\r\nconst Moon = memo( lazy(() => import('../icons/theme/Moon.js')) );\r\nconst Sun = memo( lazy(() => import('../icons/theme/Sun.js')) );\r\nconst HomeMenu = memo( lazy(() => import('../icons/home/HomeMenu.js')) );\r\nconst Login = memo( lazy(() => import('../views/login/Login.js')) );\r\n\r\nconst urlBaseFrontend = process.env.REACT_APP_URL_BASE_FRONTEND;\r\n\r\nexport const Navbar = ({ setIsMenuOpen }) => {\r\n    const { user, dispatch } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const { theme, handleTheme } = useThemeContext();       // ðŸ‘ˆ Call the global theme\r\n\r\n    // const handleLogout = () => {\r\n    //     dispatch({ type: types.logout });\r\n    //     navigate((urlBaseFrontend), { replace: true });\r\n    // }\r\n    const handleLogout = useCallback(() => {\r\n        dispatch({ type: types.logout });\r\n        navigate(urlBaseFrontend, { replace: true });\r\n    }, [dispatch, navigate, urlBaseFrontend]);\r\n\r\n    const handleMenu = useCallback(() => { setIsMenuOpen(prev => !prev) }, [setIsMenuOpen]);\r\n\r\n    if( process.env.NODE_ENV === 'development' ) { console.log('[Nav bar]') }\r\n\r\n    return (\r\n        <>\r\n            <nav id=\"navbar\" className=\"navbar navbar-expand-sm navbar-light fixed-top shadow-lg user-select-none z-10000\" data-theme={theme} >\r\n                <div className=\"container-fluid\">\r\n                    <NavLink className=\"navbar-brand main-color d-flex bg-transparent\" to={\"/\" + urlBaseFrontend}>\r\n                        <Logo color={myColor} width={1.25} height={1.25} strokeWidth={1.2} className='ms-0 ms-sm-4 me-0 me-sm-2 mt-logo'/>\r\n                        <span className='main-color'>{ myTitle }</span>\r\n                    </NavLink>\r\n                    {\r\n                        ( user.logged )\r\n                            ?   <>\r\n                                    <NavLink className={ ({ isActive }) => 'nav-item nav-link' } onClick={ handleLogout } to={ urlBaseFrontend }>{ user.logged ? 'Salir' : '' }</NavLink>\r\n                                </>\r\n                            :   <>\r\n                                    <div className=\"row justify-content-end me-0 me-sm-1\">\r\n                                        <ul className=\"navbar-nav col\">\r\n                                            <NavLink className={ ({ isActive }) => 'nav-item nav-link' } data-bs-toggle=\"modal\" data-bs-target=\"#login\" aria-controls=\"modalBody\">\r\n                                                <User color={myColor} height={1.3} width={1.3} strokeWidth={1.5}/>\r\n                                            </NavLink>\r\n                                        </ul>\r\n                                        <ul className=\"navbar-nav col\">\r\n                                            <NavLink onClick={ handleTheme } className={ ({ isActive }) => 'nav-item nav-link' } >\r\n                                                { (theme ==='light') ? <Moon className='main-color' strokeWidth={1.5} height={1.25} width={1.25} /> : <Sun className='main-color' strokeWidth={10} height={1.25} width={1.25} /> }\r\n                                            </NavLink>\r\n                                        </ul>\r\n                                        <ul className=\"navbar-nav col\">\r\n                                            <NavLink onClick={ handleMenu } className={ ({ isActive }) => 'nav-item nav-link' } data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasBody\" aria-controls=\"offcanvasBody\">\r\n                                                <HomeMenu color={myColor} height={1.3} width={1.3} strokeWidth={5}/>\r\n                                            </NavLink>\r\n                                        </ul>\r\n                                    </div>\r\n                                </>\r\n                    }\r\n                </div>\r\n            </nav>\r\n            <Login Icon={User} user={user} />\r\n        </>\r\n    )\r\n}\r\nexport default memo(Navbar);\r\n"],"names":["Logo","memo","lazy","User","Moon","Sun","HomeMenu","Login","urlBaseFrontend","process","Navbar","_ref","setIsMenuOpen","user","dispatch","useContext","AuthContext","navigate","useNavigate","theme","handleTheme","useThemeContext","handleLogout","useCallback","type","types","logout","replace","handleMenu","prev","_jsxs","_Fragment","children","_jsx","id","className","NavLink","to","color","myColor","width","height","strokeWidth","myTitle","logged","_ref2","isActive","onClick","_ref3","_ref4","_ref5","Icon"],"sourceRoot":""}