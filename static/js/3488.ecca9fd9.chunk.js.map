{"version":3,"file":"static/js/3488.ecca9fd9.chunk.js","mappings":"kPAGO,MAAMA,EAAaC,IAAmE,IAAlE,QAAEC,EAAO,MAACC,EAAK,OAACC,EAAM,QAACC,EAAO,kBAACC,EAAiB,UAACC,GAAWN,EAMrF,OAASO,EAAAA,EAAAA,MAAA,UAAQC,QALGC,KACK,IAAnBL,EAAQM,QAAiBC,EAAAA,EAAAA,GAAM,CAAEC,KAAK,UAAWV,MAAM,mCAAoCW,UACxFC,EAAAA,EAAAA,GAAYX,EAAOC,EAAQC,IAGKC,UAAYA,EAAWS,SAAA,CAAC,IAAGb,EAAO,IAAGD,EAAS,QAEzF,G,0ICXO,MAAMa,YAAcA,CAAEX,OAAOC,QAAQC,qBACxCW,MAAMb,OAAQ,CACZc,OAAQ,OACRC,KAAMC,KAAMf,SACZgB,QAAS,CAAE,eAAgB,sBAC1BC,KAAMC,IACPA,EAASC,OACN,KAAOD,EAASE,QAAUF,EAASE,QAAU,KAC9CC,QAAQC,IAAI,QAAUJ,EAASE,OAAS,qBACxCnB,kBAAkBiB,EAASE,SACnB,KAAOF,EAASE,QAAUF,EAASE,QAAU,KACrDC,QAAQC,IAAI,QAAUJ,EAASE,OAAnB,oDACZnB,kBAAkBiB,EAASE,SACnB,KAAOF,EAASE,QAAUF,EAASE,QAAU,MACrDC,QAAQC,IAAI,QAAUJ,EAASE,OAAnB,kDACZnB,kBAAkBiB,EAASE,WAE5BG,MAAOC,IACR,MAAMC,EAAeD,EAAME,WAAWC,MAAM,KAAK,GAAGC,OAChC,oBAAjBH,GACDJ,QAAQC,IAAIE,EAAMJ,OAAQ,qBAC1BnB,kBAAkB,8DAElBA,kBAAkB,qBAAuBwB,K","sources":["components/forms/buttons/BotonFetch.js","helpers/fetchCreate.js"],"sourcesContent":["import { Alert } from '../../alert/Alert.js';\r\nimport { fetchCreate } from '../../../helpers/fetchCreate.js';\r\n\r\nexport const BotonFetch = ({ endIcon,title,urlApi,dataApi,setResponseStatus,className }) => {\r\n  const handleClick = () => {\r\n    if( dataApi.length === 0 ) { Alert({ type:'warning', title:'Debes ingresar todos los datos' }).launch() }\r\n    else { fetchCreate(urlApi,dataApi,setResponseStatus) }\r\n  }\r\n\r\n  return ( <button onClick={ handleClick } className={ className }> { title } { endIcon } </button> )\r\n}\r\nexport default BotonFetch;","export const fetchCreate = ( urlApi,dataApi,setResponseStatus ) => {\r\n    fetch(urlApi, {\r\n      method: \"POST\",\r\n      body: eval( dataApi ),\r\n      headers: { \"Content-type\": \"application/json\" }\r\n    }).then((response) => {\r\n      response.json();\r\n      if(200 <= response.status && response.status <= 299){\r\n        console.log('POST ' + response.status + ' Registro exitoso')\r\n        setResponseStatus(response.status);\r\n      } else if(400 <= response.status && response.status <= 499){\r\n        console.log('POST ' + response.status + ' Registro fallido: ' + 'Error en el envío de datos')\r\n        setResponseStatus(response.status);\r\n      } else if(500 <= response.status && response.status <= 599){\r\n        console.log('POST ' + response.status + ' Registro fallido: ' + 'Error en el servidor remoto')\r\n        setResponseStatus(response.status);\r\n      }\r\n    }).catch((error) => {\r\n      const errorMessage = error.toString().split(':')[1].trim();\r\n      if(errorMessage === 'Failed to fetch') {\r\n        console.log(error.status +' Registro fallido')\r\n        setResponseStatus('Registro fallido: ' + 'No hay conexión con la base de datos');\r\n      } else {\r\n        setResponseStatus('Registro fallido: ' + errorMessage);\r\n      }     \r\n    });\r\n}"],"names":["BotonFetch","_ref","endIcon","title","urlApi","dataApi","setResponseStatus","className","_jsxs","onClick","handleClick","length","Alert","type","launch","fetchCreate","children","fetch","method","body","eval","headers","then","response","json","status","console","log","catch","error","errorMessage","toString","split","trim"],"sourceRoot":""}