{"version":3,"file":"static/js/1107.6fcb01bb.chunk.js","mappings":"uQAKA,MAAMA,GAAQC,EAAAA,EAAAA,MAAK,IAAM,gCACnBC,GAAgBD,EAAAA,EAAAA,MAAK,IAAM,gCAMpBE,EAAcC,IAA+C,IAA9C,gBAAEC,EAAe,aAAEC,EAAY,MAAEC,GAAOH,EAClE,MAAQI,EAAUC,IAAiBC,EAAAA,EAAAA,UAAS,KACpCC,EAAcC,IAAqBF,EAAAA,EAAAA,UAAS,IAE9CG,GAAWC,EAAAA,EAAAA,OACX,KAAEC,EAAI,SAACC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAqBrC,OACEC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,cAAcC,UAAU,8CAA8C,aAAYd,EAAMe,UAC5FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDH,EAAAA,EAAAA,KAACnB,EAAK,CAACwB,YAAa,UAAWC,MAAOjB,EAAWkB,KAAM,OAAQC,SAAWC,GAAWnB,EAAamB,EAAOA,OAAOH,OAAQJ,UAAU,4FAClIF,EAAAA,EAAAA,KAACjB,EAAa,CAACsB,YAAa,gBAAcC,MAAOd,EAAegB,SAAWC,GAAWhB,EAAiBgB,EAAOA,OAAOH,OAAQJ,UAAU,4FAEvIF,EAAAA,EAAAA,KAAA,UAAQE,UAAU,4CAA4C,kBAAgB,QAAQ,iBAAe,QAAQ,iBAAgBN,EAAKc,OAAS,GAAK,kBAAmB,gBAAc,YAAYC,QAzBjLC,KAClB,GAZcC,QAYVxB,GAXSwB,QAWkBrB,EAA6B,CAC1DN,EAAgB,IAChBC,EAAa,IACb,MAAM2B,EAAS,CAAEP,KAAMQ,EAAAA,EAAMC,MAAOC,QAAS,CAAEC,KAbpCL,UAcXhB,EAASiB,GAET,MAAMK,EAAWC,aAAaC,QAAQ,aAAe,IACrD3B,EAASyB,EAAU,CAAEG,SAAS,GAChC,KAAyB,KAAdjC,GAAsC,KAAlBG,GAC7BN,EAAgB,0CAChBC,EAAa,aAEbG,EAAa,IACbG,EAAiB,IACjBP,EAAgB,yCAChBC,EAAa,WAS2MgB,SAAC,cACrNH,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASL,UAAU,wCAAwC,kBAAgB,QAAOC,SAAC,mBAK1G,G","sources":["components/views/login/LoginScreen.js"],"sourcesContent":["import { lazy, useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../../auth/authContext.js';\r\nimport { types } from '../../../types/types.js';\r\n\r\nconst Input = lazy(() => import('../../forms/inputs/Input.js'));\r\nconst InputPassword = lazy(() => import('../../forms/inputs/InputPassword.js'));\r\n\r\nconst superuser = process.env.REACT_APP_SUPERUSER;\r\nconst password = process.env.REACT_APP_SUPERPASSWORD;\r\nconst username = process.env.REACT_APP_USERNAME;\r\n\r\nexport const LoginScreen = ({ setAlertMessage, setAlertType, theme }) => {\r\n  const [ userInput,setUserInput ] = useState(\"\");\r\n  const [ passwordInput,setPasswordInput ] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const { user,dispatch } = useContext(AuthContext);\r\n\r\n  const handleLogin = () => {\r\n    if( userInput === superuser && passwordInput === password ) {\r\n      setAlertMessage(\"\");\r\n      setAlertType(\"\");\r\n      const action = { type: types.login, payload: { name: username } }\r\n      dispatch(action);\r\n  \r\n      const lastPath = localStorage.getItem('lastPath') || '/';\r\n      navigate(lastPath, { replace: true });\r\n    } else if( userInput === \"\" && passwordInput === \"\" ) {\r\n      setAlertMessage(\"Debes ingresar usuario y contrase침a\");\r\n      setAlertType(\"warning\");\r\n    } else {\r\n      setUserInput(\"\");\r\n      setPasswordInput(\"\");\r\n      setAlertMessage(\"Usuario o contrase침a no v치lidos\");\r\n      setAlertType(\"error\");\r\n    }\r\n  }\r\n  return (\r\n    <div id='loginScreen' className='container mt-1 text-center user-select-none' data-theme={theme}>\r\n        <div className=\"d-grid gap-2 col mx-auto pb-3 w-100\">\r\n          <Input placeholder={'Usuario'} value={userInput} type={'text'} onChange={(target) => setUserInput(target.target.value)} className='input form-control rounded border-muted border-1 text-muted text-center my-1 shadow-sm' />\r\n          <InputPassword placeholder={'Contrase침a'} value={passwordInput} onChange={(target) => setPasswordInput(target.target.value)} className='input form-control rounded border-muted border-1 text-muted text-center my-1 shadow-sm' />\r\n          \r\n          <button className='btn btn-login my-1 py-3 rounded shadow-sm' data-bs-dismiss=\"modal\" data-bs-toggle=\"modal\" data-bs-target={user.logged ? \"\" : \"#loginModalFail\"} aria-controls=\"modalBody\" onClick={ handleLogin }>Ingresar</button>\r\n          <button type=\"button\" className=\"btn btn-outline-danger py-3 shadow-sm\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\nexport default LoginScreen;"],"names":["Input","lazy","InputPassword","LoginScreen","_ref","setAlertMessage","setAlertType","theme","userInput","setUserInput","useState","passwordInput","setPasswordInput","navigate","useNavigate","user","dispatch","useContext","AuthContext","_jsx","id","className","children","_jsxs","placeholder","value","type","onChange","target","logged","onClick","handleLogin","process","action","types","login","payload","name","lastPath","localStorage","getItem","replace"],"sourceRoot":""}