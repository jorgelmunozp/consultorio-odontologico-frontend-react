{"version":3,"file":"static/js/5687.33085f3b.chunk.js","mappings":"yQAMA,MAAMA,GAAgBC,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,iCAEzBC,EAAmBC,IASzB,IAT0B,UAC/BC,EAAS,MACTC,EAAQ,GAAE,YACVC,EAAc,GAAE,aAChBC,EAAY,OACZC,EAAM,SACNC,EAAQ,UACRC,EAAY,GAAE,aACdC,EAAe,GAChBR,EACC,MAAM,MAAES,IAAUC,EAAAA,EAAAA,OACZ,MAAEC,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,GAAY,CAAEZ,YAAWa,oBAAqBN,IAGtEO,GAAkBC,EAAAA,EAAAA,SAAQ,IAC9BT,GAA8B,IAAjBL,EAAMe,OACf,0EACA,4EACJ,CAACV,EAAWL,IAIRgB,GAAUF,EAAAA,EAAAA,SAAQ,IACjBJ,EAAWO,cAAmD,IAAnCP,EAAWO,aAAaF,OAQjDL,EAAWO,aAAaC,IAAI,CAACC,EAAQC,KAC1C,MAAMC,EAAa,OAANF,QAAM,IAANA,OAAM,EAANA,EAASpB,GACtB,IAAIuB,EAAe,GAEnB,GAAID,EACF,OAAQtB,GACN,IAAK,WACL,IAAK,SACHuB,EAAe,GAAGD,EAAKE,QAAU,MAAMF,EAAKG,UAAY,KAAKC,OAC7D,MACF,IAAK,cACHH,EAAe,GAAGD,EAAKK,QAAU,MAAML,EAAKE,QAAU,KAAKE,OAC3D,MACF,IAAK,cACL,IAAK,MACL,IAAK,SACL,IAAK,eACHH,EAAeD,EAAKE,QAAUF,EAAKM,cAAgB,GACnD,MACF,QACEL,EAAe,GAIrB,OACEM,EAAAA,EAAAA,KAACC,EAAM,CAEL7B,MAAOsB,EACPpB,aAAcA,EACd4B,cAAeA,IAAM1B,GAAS,GAC9BG,MAAOA,GAJF,GAAGR,UAAkBqB,QAhC5BQ,EAAAA,EAAAA,KAAA,MAAIvB,UAAU,oCAAmC0B,SAC7B,IAAjBtB,EAAMM,OAAe,cAAgB,sBAuC3C,CAACL,EAAWO,aAAcR,EAAMM,OAAQhB,EAAWG,EAAcE,EAAUG,IAE9E,OACEyB,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,yDAAwD0B,SAAA,EACrEH,EAAAA,EAAAA,KAAA,UACEK,QAAS7B,EACTC,UAAWQ,EACXqB,KAAK,SACLC,GAAI,eAAiBpC,EACrB,gBAAe,eAAiBA,EAChC,gBAAeI,EACf,aAAYI,EAAMwB,SAEA,IAAjB/B,EAAMe,OAAed,EAAcD,KAGtCgC,EAAAA,EAAAA,MAAA,MACEG,GAAI,eAAiBpC,EACrBM,UAAW,0EAA4EF,EAAS,iBAAmB,IACnHiC,MAAwB,IAAjB3B,EAAMM,OAAe,CAAEsB,UAAW,QAAW,CAAEA,UAAW,SACjE,kBAAiB,eAAiBtC,EAClC,aAAYQ,EAAMwB,SAAA,CAEjBf,EAEAN,EAAW4B,WAAa,IACvBV,EAAAA,EAAAA,KAAClC,EAAa,CACZ6C,YAAa7B,EAAW6B,YACxBD,WAAY5B,EAAW4B,WACvBE,SAAU9B,EAAW8B,SACrBC,OAAQ/B,EAAW+B,OACnBC,OAAQhC,EAAWgC,gBAQzBb,GAASlC,EAAAA,EAAAA,MAAKgD,IAAoD,IAAnD,MAAE3C,EAAK,aAAEE,EAAY,cAAE4B,EAAa,MAAEvB,GAAOoC,EAChE,MAAMC,GAAcC,EAAAA,EAAAA,aAAY,KAC9B3C,EAAaF,GACb8B,KACC,CAAC5B,EAAc4B,EAAe9B,IAEjC,OACE4B,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAAA,UACE5B,MAAOA,EACPiC,QAASW,EACTvC,UAAU,+BACV,aAAYE,EAAMwB,SAEjB/B,QAMT,GAAeL,EAAAA,EAAAA,MAAKE,E","sources":["components/forms/dropdown/DropdownSelector.js"],"sourcesContent":["import '../forms.css';\r\nimport { memo, useMemo, useCallback } from 'react';\r\nimport { useThemeContext } from \"../../../theme/ThemeContext.js\";\r\nimport { useDropdown } from './useDropdown.js';\r\nimport { lazy } from 'react';\r\n\r\nconst PaginationBar = memo(lazy(() => import('../../pagination/PaginationBar.js')));\r\n\r\nexport const DropdownSelector = ({\r\n  classType,\r\n  value = '',\r\n  placeholder = '',\r\n  handleChange,\r\n  isOpen,\r\n  onToggle,\r\n  className = '',\r\n  itemsPerPage = 5\r\n}) => {\r\n  const { theme } = useThemeContext();\r\n  const { array, pagination } = useDropdown({ classType, itemsPerPageInitial: itemsPerPage });\r\n\r\n  // Botón de toggle\r\n  const buttonClassName = useMemo(() =>\r\n    className + (value.length === 0\r\n      ? \" dropdown-toggle text-start pt-2 ps-2 ps-sm-3 pe-5 w-100 bg-transparent\"\r\n      : \" dropdown-toggle text-center pt-4 ps-2 ps-sm-3 pe-5 w-100 bg-transparent\"),\r\n    [className, value]\r\n  );\r\n\r\n  // Opciones seguras: si no hay datos, mostramos \"Cargando...\"\r\n  const options = useMemo(() => {\r\n    if (!pagination.currentItems || pagination.currentItems.length === 0) {\r\n      return (\r\n        <li className=\"dropdown-item disabled text-muted\">\r\n          {array.length === 0 ? \"Cargando...\" : \"No hay resultados\"}\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return pagination.currentItems.map((option, index) => {\r\n      const item = option?.[classType]; // protección contra undefined\r\n      let displayValue = \"\";\r\n\r\n      if (item) {\r\n        switch (classType) {\r\n          case \"paciente\":\r\n          case \"doctor\":\r\n            displayValue = `${item.nombre || \"\"} ${item.apellido || \"\"}`.trim();\r\n            break;\r\n          case \"consultorio\":\r\n            displayValue = `${item.numero || \"\"} ${item.nombre || \"\"}`.trim();\r\n            break;\r\n          case \"tratamiento\":\r\n          case \"eps\":\r\n          case \"genero\":\r\n          case \"especialidad\":\r\n            displayValue = item.nombre || item.especialidad || \"\";\r\n            break;\r\n          default:\r\n            displayValue = \"\";\r\n        }\r\n      }\r\n\r\n      return (\r\n        <Option\r\n          key={`${classType}Option${index}`}\r\n          value={displayValue}\r\n          handleChange={handleChange}\r\n          closeDropdown={() => onToggle(false)}\r\n          theme={theme}\r\n        />\r\n      );\r\n    });\r\n  }, [pagination.currentItems, array.length, classType, handleChange, onToggle, theme]);\r\n\r\n  return (\r\n    <div className=\"dropdown form-floating w-100 min-width-10 py-sm-0 px-0\">\r\n      <button\r\n        onClick={onToggle}\r\n        className={buttonClassName}\r\n        type=\"button\"\r\n        id={\"selectButton\" + classType}\r\n        aria-controls={\"dropdownMenu\" + classType}\r\n        aria-expanded={isOpen}\r\n        data-theme={theme}\r\n      >\r\n        {value.length === 0 ? placeholder : value}\r\n      </button>\r\n\r\n      <ul\r\n        id={\"dropdownMenu\" + classType}\r\n        className={\"dropdown-menu text-center shadow-sm w-100 overflow-auto slideIn smooth\" + (isOpen ? \" collapse show\" : \"\")}\r\n        style={array.length === 0 ? { maxHeight: \"0rem\" } : { maxHeight: \"12rem\" }}\r\n        aria-labelledby={\"selectButton\" + classType}\r\n        data-theme={theme}\r\n      >\r\n        {options}\r\n\r\n        {pagination.totalPages > 1 && (\r\n          <PaginationBar\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            goToPage={pagination.goToPage}\r\n            goPrev={pagination.goPrev}\r\n            goNext={pagination.goNext}\r\n          />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Option = memo(({ value, handleChange, closeDropdown, theme }) => {\r\n  const handleClick = useCallback(() => {\r\n    handleChange(value);\r\n    closeDropdown();\r\n  }, [handleChange, closeDropdown, value]);\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        value={value}\r\n        onClick={handleClick}\r\n        className=\"dropdown-item bg-transparent\"\r\n        data-theme={theme}\r\n      >\r\n        {value}\r\n      </button>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default memo(DropdownSelector);\r\n"],"names":["PaginationBar","memo","lazy","DropdownSelector","_ref","classType","value","placeholder","handleChange","isOpen","onToggle","className","itemsPerPage","theme","useThemeContext","array","pagination","useDropdown","itemsPerPageInitial","buttonClassName","useMemo","length","options","currentItems","map","option","index","item","displayValue","nombre","apellido","trim","numero","especialidad","_jsx","Option","closeDropdown","children","_jsxs","onClick","type","id","style","maxHeight","totalPages","currentPage","goToPage","goPrev","goNext","_ref2","handleClick","useCallback"],"sourceRoot":""}