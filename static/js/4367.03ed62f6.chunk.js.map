{"version":3,"file":"static/js/4367.03ed62f6.chunk.js","mappings":"8PAKA,MAAMA,EAAWC,IAAyC,IAAxC,UAAEC,EAAS,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAASJ,EAClD,MAAM,MAAEK,IAAUC,EAAAA,EAAAA,OAEZ,KAAEC,EAAI,WAAEC,IAAeC,EAAAA,EAAAA,SAAQ,KAAO,IAADC,EACzC,MAAMC,EAAqB,QAAlBD,EAAGP,EAAKF,UAAU,IAAAS,EAAAA,EAAI,CAAC,EAGhC,MAAO,CAAEH,KAFCK,OAAOL,KAAKI,GAEJH,WADRI,OAAOC,OAAOF,GAAKG,IAAIC,GAA0B,kBAAVA,EAAqB,GAAGH,OAAOC,OAAOE,GAAO,MAAMH,OAAOC,OAAOE,GAAO,KAAOA,KAE/H,CAACZ,EAAMF,IAEJe,GAAcC,EAAAA,EAAAA,aAAY,IAAMb,GAAQ,GAAQ,CAACA,IAEvD,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCF,UAClDF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAW,aAAYjB,EAAMe,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,UAAAD,UAAQC,EAAAA,EAAAA,KAACnB,EAAI,CAACqB,MAAOC,EAAAA,GAASC,OAAQ,IAAKC,MAAO,IAAKC,YAAa,GAAKL,UAAU,cACnFD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CF,SACrDnB,EAAU2B,OAAO,GAAGC,cAAgB5B,EAAU6B,MAAM,SAG1DT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcF,UAC3BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,gDAA+CF,SAAA,EAC5DF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kCAAiCF,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,SAAC,kBACvBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,SAAC,cAEzBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCF,SAAC,eACjDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCF,SAAEjB,EAAK4B,SAEvDvB,EAAWM,IAAI,CAACkB,EAAMC,KACrBf,EAAAA,EAAAA,MAAA,OAAqCI,UAAU,yBAAwBF,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCF,SAAGb,EAAK0B,GAAOL,OAAO,GAAGC,cAAgBtB,EAAK0B,GAAOH,MAAM,MAC3GT,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCF,SAAGY,MAF3C,GAAGzB,EAAK0B,MAAUA,YAOnCZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,wBAAwBY,QAASlB,EAAYI,SAAC,sBAKxEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBY,QAASlB,QAK/C,GAAemB,EAAAA,EAAAA,MAAKpC,E","sources":["components/crud/ReadItem.js"],"sourcesContent":["import '../../alerts/modal/modal.css';\r\nimport { useThemeContext } from \"../../theme/ThemeContext.js\";\r\nimport { myColor } from '../../global.js';\r\nimport { useMemo, useCallback, memo } from \"react\";\r\n\r\nconst ReadItem = ({ classType, Icon, item, setOpen }) => {\r\n  const { theme } = useThemeContext();\r\n\r\n  const { keys, valuesData } = useMemo(() => {                       // ðŸ‘ˆ Preprocesa solo si cambian item o classType\r\n    const obj = item[classType] ?? {};\r\n    const k = Object.keys(obj);\r\n    const v = Object.values(obj).map(value => typeof value === \"object\" ? `${Object.values(value)[0]} ${Object.values(value)[1]}` : value );\r\n    return { keys: k, valuesData: v };\r\n  }, [item, classType]);\r\n\r\n  const handleClose = useCallback(() => setOpen(false), [setOpen]);  // ðŸ‘ˆ Memorized handler\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modalContainer justify-items-center\">\r\n        <div className=\"modalBox\" data-theme={theme}>\r\n          <div className=\"modalHeader\">\r\n            <center><Icon color={myColor} height={2.5} width={2.5} strokeWidth={0.6} className=\"center\" /></center>\r\n            <h6 className=\"modalTitle century-gothic main-color pt-2\">\r\n              { classType.charAt(0).toUpperCase() + classType.slice(1) }\r\n            </h6>\r\n          </div>\r\n          <div className=\"modalContent\">\r\n            <div className=\"container-fluid modalTable mt-2 overflow-auto\">\r\n              <div className=\"row modalTableTitle flex-nowrap\">\r\n                <div className=\"col-6\">ParÃ¡metro</div>\r\n                <div className=\"col-6\">Datos</div>\r\n              </div>\r\n              <div className=\"row bg-row flex-nowrap\">\r\n                <div className=\"col-6 modalTableData text-start\">CÃ³digo</div>\r\n                <div className=\"col-6 modalTableData text-start\">{item._id}</div>\r\n              </div>\r\n              { valuesData.map((data, index) => (\r\n                 <div key={`${keys[index]}-${index}`} className=\"row bg-row flex-nowrap\">\r\n                   <div className=\"col-6 modalTableData text-start\">{ keys[index].charAt(0).toUpperCase() + keys[index].slice(1) }</div>\r\n                   <div className=\"col-6 modalTableData text-start\">{ data }</div>\r\n                 </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"modalFooter\">\r\n            <div className=\"d-grid mt-2 w-100\">\r\n              <button className=\"aceptBtn mx-auto w-50\" onClick={handleClose}>Aceptar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"darkBackground\" onClick={handleClose}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(ReadItem);\r\n"],"names":["ReadItem","_ref","classType","Icon","item","setOpen","theme","useThemeContext","keys","valuesData","useMemo","_item$classType","obj","Object","values","map","value","handleClose","useCallback","_jsxs","_Fragment","children","_jsx","className","color","myColor","height","width","strokeWidth","charAt","toUpperCase","slice","_id","data","index","onClick","memo"],"sourceRoot":""}