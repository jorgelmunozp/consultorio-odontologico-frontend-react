{"version":3,"file":"static/js/9947.7b51ccab.chunk.js","mappings":"kLAAA,MAEaA,GAFA,IAAIC,MAGdC,mBAAmB,QAAS,CAC3BC,cAAe,QACfC,KAAM,UACNC,MAAO,UACPC,IAAK,YAENC,MAAM,I,6DCTF,MCIMC,EAAaC,IACtB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,OAAQ,IAOvE,OANAC,EAAAA,EAAAA,WAAW,KDNQC,WACnB,IAAIN,EAAgB,CAAEG,KAAM,CAAC,EAAGC,OAAQ,GAQxC,aAPMG,MAAOR,GACRS,KAAKC,IAAcT,EAAcI,OAASK,EAASL,OAAeK,EAASC,SAC3EF,KAAKL,GAAQH,EAAcG,KAAOA,GAClCQ,MAAOC,IACiB,oBAAlBA,EAAMC,UAAiCb,EAAcI,OAAS,OAGlEJ,GCFHc,CAASf,GACJS,KAAMO,GAASd,EAAiB,CAAEE,KAAMY,EAAMZ,KAAMC,OAAQW,EAAMX,UAClEO,MAAOC,GAAUI,QAAQC,IAAI,mBAAqBL,EAAMC,WAC9D,IAEIb,E,+CCZX,MAEakB,GAFC,IAAI3B,MAEW4B,eAAe,QAAS,CACjDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,G,6GCDZ,MAAMC,EAAYC,IAASC,EAAAA,EAAAA,MAAK,IAAM,QAAO,KAAeD,SAGtDE,EAAY,CAChBC,SAAU,CACRC,OAAQL,EAAS,2BACjBM,OAAQN,EAAS,yBACjBO,KAAMP,EAAS,0BACfQ,OAAQR,EAAS,yBACjBS,OAAQT,EAAS,4BAEnBU,KAAM,CACJL,OAAQL,EAAS,mBACjBM,OAAQN,EAAS,iBACjBO,KAAMP,EAAS,aACfQ,OAAQR,EAAS,iBACjBS,OAAQT,EAAS,oBAEnBW,KAAM,CACJN,OAAQL,EAAS,mBACjBM,OAAQN,EAAS,iBACjBO,KAAMP,EAAS,kBACfQ,OAAQR,EAAS,iBACjBS,OAAQT,EAAS,oBAEnBY,OAAQ,CACNP,OAAQL,EAAS,uBACjBM,OAAQN,EAAS,qBACjBQ,OAAQR,EAAS,qBACjBS,OAAQT,EAAS,wBAEnBa,OAAQ,CACNR,OAAQL,EAAS,uBACjBM,OAAQN,EAAS,qBACjBQ,OAAQR,EAAS,qBACjBS,OAAQT,EAAS,wBAEnBc,QAAS,CAAEP,KAAKP,EAAS,yBACzBe,aAAc,CAAER,KAAKP,EAAS,8BAG1BgB,GAAad,EAAAA,EAAAA,MAAK,IAAM,gCACxBe,GAAYf,EAAAA,EAAAA,MAAK,IAAM,gCAEhBgB,EAAYC,IAAyC,IAAxC,UAAEC,EAAS,MAAEC,EAAQ,aAAaF,EAC1D,MAAOG,EAAMC,IAAW5C,EAAAA,EAAAA,WAAS,GAE3B6C,GAAaC,EAAAA,EAAAA,GAAe,CAAEL,cAG9BM,GAAYC,EAAAA,EAAAA,SAAS,MACvBC,KAAM,CACJC,WAAW1B,EAAUC,SAASC,OAC9ByB,WAAW3B,EAAUC,SAASE,OAC9ByB,SAAS5B,EAAUC,SAASG,KAC5ByB,WAAW7B,EAAUC,SAASI,OAC9ByB,WAAW9B,EAAUC,SAASK,QAEhCyB,SAAS,CACPL,WAAW1B,EAAUO,KAAKL,OAC1ByB,WAAW3B,EAAUO,KAAKJ,OAC1ByB,SAAS5B,EAAUO,KAAKH,KACxByB,WAAW7B,EAAUO,KAAKF,OAC1ByB,WAAW9B,EAAUO,KAAKD,QAE5B0B,OAAO,CACLN,WAAW1B,EAAUO,KAAKL,OAC1ByB,WAAW3B,EAAUO,KAAKJ,OAC1ByB,SAAS5B,EAAUO,KAAKH,KACxByB,WAAW7B,EAAUO,KAAKF,OAC1ByB,WAAW9B,EAAUO,KAAKD,QAE5B2B,YAAY,CACVP,WAAW1B,EAAUQ,KAAKN,OAC1ByB,WAAW3B,EAAUQ,KAAKL,OAC1ByB,SAAS5B,EAAUQ,KAAKJ,KACxByB,WAAW7B,EAAUQ,KAAKH,OAC1ByB,WAAW9B,EAAUQ,KAAKF,QAE5B4B,YAAY,CACVR,WAAW1B,EAAUU,OAAOR,OAC5ByB,WAAW3B,EAAUU,OAAOP,OAC5ByB,SAAS5B,EAAUW,QAAQP,KAC3ByB,WAAW7B,EAAUU,OAAOL,OAC5ByB,WAAW9B,EAAUU,OAAOJ,QAE9BM,aAAa,CACXc,WAAW1B,EAAUS,OAAOP,OAC5ByB,WAAW3B,EAAUS,OAAON,OAC5ByB,SAAS5B,EAAUY,aAAaR,KAChCyB,WAAW7B,EAAUS,OAAOJ,OAC5ByB,WAAW9B,EAAUS,OAAOH,UAE9B,IAEEqB,EAAaJ,EAAUN,GAAWU,WAExC,OACEQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,SAAU,KAAKH,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+BAA8BC,SAAEnB,KAE9CiB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8CAA8CK,QAASA,IAAIrB,EAAQ,UAAUiB,UAACF,EAAAA,EAAAA,KAACR,EAAU,CAACe,MAAO,MAAOC,OAAQ,WAElIR,EAAAA,EAAAA,KAACrB,EAAS,CACRG,UAAWA,EACX2B,MAAOrB,EACPF,WAAYA,IAEZF,IAAQgB,EAAAA,EAAAA,KAACtB,EAAU,CAACI,UAAWA,EAAW4B,KAAMlB,EAAYN,WAAYA,EAAYD,QAASA,UAMvG,G,iBCvHA,IAAI0B,EAAM,CACT,mBAAoB,CACnB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,+BAAgC,CAC/B,KACA,MAED,6BAA8B,CAC7B,KACA,MAED,gCAAiC,CAChC,KACA,MAED,6BAA8B,CAC7B,KACA,MAED,+BAAgC,CAC/B,KACA,MAED,8BAA+B,CAC9B,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,yBAA0B,CACzB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,IACA,KAED,yBAA0B,CACzB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,KACA,MAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,KACA,MAED,wBAAyB,CACxB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,iBAAkB,CACjB,MAED,sBAAuB,CACtB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,gCAAiC,CAChC,IACA,KAED,uBAAwB,CACvB,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,iBAAkB,CACjB,IACA,KAED,0BAA2B,CAC1B,KACA,MAED,wBAAyB,CACxB,KACA,MAED,wBAAyB,CACxB,KACA,MAED,sBAAuB,CACtB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,KACA,MAED,wBAAyB,CACxB,KACA,MAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,KACA,MAED,uBAAwB,CACvB,KACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUtE,KAAK,KAC7B,IAAIuE,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,IAIR,IAAIG,EAAMV,EAAIE,GAAMS,EAAKD,EAAI,GAC7B,OAAOL,QAAQO,IAAIF,EAAIG,MAAM,GAAGb,IAAIG,EAAoBI,IAAIvE,KAAK,IACzDmE,EAAoBQ,GAE7B,CACAV,EAAoBa,KAAO,IAAOC,OAAOD,KAAKd,GAC9CC,EAAoBU,GAAK,KACzBK,EAAOC,QAAUhB,C,mGCjNV,MCOD1E,EAAS2F,mFAEFC,EAAUjD,IAAmF,IAAlF,cAAEkD,EAAc,CAAEnC,SAAS,GAAIE,YAAY,GAAID,OAAO,GAAIE,YAAY,KAAMlB,EAClG,MAAM,MAAEmD,IAAUC,EAAAA,EAAAA,MAGXrC,EAAUsC,IAAe7F,EAAAA,EAAAA,UAAS0F,EAAcnC,UAAY,KAC5DuC,EAAOC,IAAY/F,EAAAA,EAAAA,UAASZ,EAAAA,EAAQ,GAAK,IAAMA,EAAAA,EAAQ,GAAK,IAAMA,EAAAA,EAAQ,KAC1E4G,EAAMC,IAAWjG,EAAAA,EAAAA,UAASgB,EAAAA,IAC1ByC,EAAayC,IAAkBlG,EAAAA,EAAAA,UAAS0F,EAAcjC,aAAe,KACrED,EAAQ2C,IAAanG,EAAAA,EAAAA,UAAS0F,EAAclC,QAAU,KACtDE,EAAa0C,IAAkBpG,EAAAA,EAAAA,UAAS0F,EAAchC,aAAe,IAGtE2C,GAAaC,EAAAA,EAAAA,aAAY,KAC7BT,EAAY,IACZE,EAAS3G,EAAAA,EAAQ,GAAK,IAAMA,EAAAA,EAAQ,GAAK,IAAMA,EAAAA,EAAQ,IACvD6G,EAAQjF,EAAAA,GACRkF,EAAe,IACfC,EAAU,IACVC,EAAe,KACd,IAGGG,GAAQvD,EAAAA,EAAAA,SAAQ,IAAM,CAC1B,CAAEwD,IAAI,WAAYC,MAAMlD,EAAUmD,KAAK,WAAYC,aAAcF,GAAUZ,EAAYY,GAAQG,YAAY,YAC3G,CAAEJ,IAAI,QAASC,MAAMX,EAAOY,KAAK,OAAQC,aAAcF,GAAUV,EAASU,GAAQG,YAAY,SAC9F,CAAEJ,IAAI,OAAQC,MAAMT,EAAMU,KAAK,OAAQC,aAAcF,GAAUR,EAAQQ,GAAQG,YAAY,QAC3F,CAAEJ,IAAI,cAAeC,MAAMhD,EAAaiD,KAAK,WAAYC,aAAcF,GAAUP,EAAeO,GAAQG,YAAY,eACpH,CAAEJ,IAAI,SAAUC,MAAMjD,EAAQkD,KAAK,WAAYC,aAAcF,GAAUN,EAAUM,GAAQG,YAAY,UACrG,CAAEJ,IAAI,cAAeC,MAAM/C,EAAagD,KAAK,WAAYC,aAAcF,GAAUL,EAAeK,GAAQG,YAAY,gBACnH,CAACrD,EAAUuC,EAAOE,EAAMvC,EAAaD,EAAQE,IAM1C0B,GAAOpC,EAAAA,EAAAA,SAAQ,IAAMuD,EAAMjC,IAAIuC,IAAA,IAAC,YAAED,EAAW,KAAEF,GAAMG,EAAA,MAAM,CAAEL,IAAKI,EAAaF,UAAU,CAACH,IAC1FO,GAAe9D,EAAAA,EAAAA,SAAQ,IAAMoC,EAAKd,IAAKyC,GAAMA,EAAEP,KAAM,CAACpB,IAItD4B,GAAapH,EAAAA,EAAAA,GAASC,IAC5BM,EAAAA,EAAAA,WAAU,KACJ6G,EAAW9G,QAAU,KACvByF,EAAM,CAAEe,KAAM,QAAShE,MAAO,+CAA6CuE,QAAS,KAErF,CAACD,EAAW9G,OAAQyF,IAEvB,MAAMuB,GAAQlE,EAAAA,EAAAA,SAAQ,IAAMgE,EAAW/G,MAAQ,GAAI,CAAC+G,EAAW/G,QAGxDkH,EAASC,IAAcpH,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzDqH,EAAWC,EAAcC,EAAWC,EAAWC,EAAqBC,EAAaC,GAAkBR,EAEpGS,GAAe5E,EAAAA,EAAAA,SAAQ,ID9DCR,KAA+F,IAA9F,MAAE0E,EAAM,GAAE,KAACnC,EAAK,GAAE,QAAC8C,EAAQ,GAAE,KAACC,EAAK,GAAE,KAACC,EAAK,GAAE,eAACC,EAAe,GAAE,OAACxE,EAAO,GAAE,UAACyE,EAAU,IAAIzF,EACrH,OAAO0E,EAAMhF,OAAQgG,GAAQA,EAAKC,IAAIC,WAAWC,SAAStD,IAASmD,EAAKjF,KAAKM,SAAS+E,cAAcD,SAASR,EAAQS,gBAAkBJ,EAAKjF,KAAK6C,MAAMwC,cAAcD,SAASP,EAAKQ,gBAAkBJ,EAAKjF,KAAK+C,KAAKsC,cAAcD,SAASN,EAAKO,gBAAkBJ,EAAKjF,KAAKQ,YAAY6E,cAAcD,SAASL,EAAeM,gBAAmBJ,EAAKjF,KAAKO,OAAO8E,cAAcD,SAAS7E,EAAO8E,gBAAkBJ,EAAKjF,KAAKS,YAAY4E,cAAcD,SAASJ,EAAUK,iBC8DlcC,CAAiB,CAAErB,QAAOnC,KAAKsC,EAAWQ,QAAQP,EAAcQ,KAAKP,EAAWQ,KAAKP,EAAWQ,eAAeP,EAAqBjE,OAAOkE,EAAaO,UAAUN,IACxK,CAACT,EAAOG,EAAWC,EAAcC,EAAWC,EAAWC,EAAqBC,EAAaC,KAErFa,EAAeC,IAAoBzI,EAAAA,EAAAA,UAAS4H,IACnDzH,EAAAA,EAAAA,WAAU,KAAQsI,EAAiBb,IAAkB,CAACA,IAGtD,MAAOc,EAAQC,IAAa3I,EAAAA,EAAAA,UAAS,GAE/B4I,GAAa5F,EAAAA,EAAAA,SAAQ,IACTuD,EAAMjC,IAAIuE,IAAA,IAAC,IAAErC,GAAKqC,EAAA,OAAKrC,IACzBsC,QAAQC,GAAS,CAAC,CAAEvC,IAAKuC,EAAOC,MAAO,OAAS,CAAExC,IAAKuC,EAAOC,MAAO,UAClF,CAACzC,IAEE0C,GAAiB3C,EAAAA,EAAAA,aAAY,CAAC4C,EAAGC,KACrC,MAAMC,EAASR,EAAWF,EAAS,GACnC,IAAKU,EAAQ,OAAO,EAEpB,MAAMC,EAASH,EAAEjG,KAAKmG,EAAO5C,KACvB8C,EAASH,EAAElG,KAAKmG,EAAO5C,KAE7B,MAAwB,QAAjB4C,EAAOJ,MAAkBK,EAAOE,cAAcD,GAAUA,EAAOC,cAAcF,IACnF,CAACX,EAAQE,IAEN3I,GAAO+C,EAAAA,EAAAA,SAAQ,MAASmE,UAASC,aAAYoB,gBAAeC,qBAAqB,CAACtB,EAASqB,IAC3FgB,GAAOxG,EAAAA,EAAAA,SAAQ,MAASiG,iBAAgBN,cAAc,CAACM,IAEvDQ,GAAcnD,EAAAA,EAAAA,aAAY,CAACoD,EAAQxB,KACxB,WAAXwB,GACF5I,QAAQC,IAAImH,GACZO,EAAiBkB,GAAQ,IAAIA,EAAMzB,KACf,WAAXwB,EACTjB,EAAiBkB,GAAQA,EAAKrF,IAAIsF,GAAMA,EAAEzB,MAAQD,EAAKC,IAAMD,EAAO0B,IAChD,WAAXF,GACTjB,EAAiBkB,GAAQA,EAAKzH,OAAO0H,GAAKA,EAAEzB,MAAQD,KAErD,IAEH,MAAO,CACL2B,IAAIhK,EACJiK,WA9DiB,CAAEvG,SAAS,GAAIuC,MAAM,GAAIE,KAAK,GAAIvC,YAAY,GAAID,OAAO,GAAIE,YAAY,IA+D1F0B,OACA0B,eACAP,QACAF,aACApG,OACAuJ,OACAC,gBCzGE5J,EAAS2F,uFAEFuE,EAAcvH,IAAyF,IAAxF,cAAEkD,EAAc,CAAEsE,OAAO,GAAIC,SAAS,GAAIC,eAAe,GAAIC,OAAO,GAAIC,IAAI,KAAM5H,EAC5G,MAAM,MAAEmD,IAAUC,EAAAA,EAAAA,MAGXoE,EAAQK,IAAarK,EAAAA,EAAAA,UAAS0F,EAAcsE,QAAU,KACtDC,EAAUK,IAAetK,EAAAA,EAAAA,UAAS0F,EAAcuE,UAAY,KAC5DC,EAAgBK,IAAqBvK,EAAAA,EAAAA,UAAS0F,EAAcwE,gBAAkB,KAC9EC,EAAQK,IAAaxK,EAAAA,EAAAA,UAAS0F,EAAcyE,QAAU,KACtDC,EAAKK,IAAUzK,EAAAA,EAAAA,UAAS0F,EAAc0E,KAAO,IAG9C/D,GAAaC,EAAAA,EAAAA,aAAY,KAC7B+D,EAAU,IACVC,EAAY,IACZC,EAAkB,IAClBC,EAAU,IACVC,EAAO,KACN,IAGGlE,GAAQvD,EAAAA,EAAAA,SAAQ,IAAM,CAC1B,CAAEwD,IAAI,SAAUC,MAAMuD,EAAQtD,KAAK,SAAUC,aAAcF,GAAU4D,EAAU5D,GAAQG,YAAY,UACnG,CAAEJ,IAAI,WAAYC,MAAMwD,EAAUvD,KAAK,SAAUC,aAAcF,GAAU6D,EAAY7D,GAAQG,YAAY,YACzG,CAAEJ,IAAI,iBAAkBC,MAAMyD,EAAgBxD,KAAK,SAAUC,aAAcF,GAAU8D,EAAkB9D,GAAQG,YAAY,qBAC3H,CAAEJ,IAAI,SAAUC,MAAM0D,EAAQzD,KAAK,WAAYC,aAAcF,GAAU+D,EAAU/D,GAAQG,YAAY,aACrG,CAAEJ,IAAI,MAAOC,MAAM2D,EAAK1D,KAAK,WAAYC,aAAcF,GAAUgE,EAAOhE,GAAQG,YAAY,QAC3F,CAACoD,EAAQC,EAAUC,EAAgBC,EAAQC,IAMxChF,GAAOpC,EAAAA,EAAAA,SAAQ,IAAMuD,EAAMjC,IAAIuC,IAAA,IAAC,YAAED,EAAW,KAAEF,GAAMG,EAAA,MAAM,CAAEL,IAAKI,EAAaF,UAAU,CAACH,IAC1FO,GAAe9D,EAAAA,EAAAA,SAAQ,IAAMoC,EAAKd,IAAKyC,GAAMA,EAAEP,KAAM,CAACpB,IAItD4B,GAAapH,EAAAA,EAAAA,GAASC,IAC5BM,EAAAA,EAAAA,WAAU,KACJ6G,EAAW9G,QAAU,KACvByF,EAAM,CAAEe,KAAK,QAAShE,MAAM,+CAA6CuE,QAAQ,KAElF,CAACD,EAAWrB,IAEf,MAAMuB,GAAQlE,EAAAA,EAAAA,SAAQ,IAAMgE,EAAW/G,MAAQ,GAAI,CAAC+G,EAAW/G,QAGxDkH,EAASC,IAAcpH,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MACrDqH,EAAWqD,EAAWC,EAAeC,EAAqBC,EAAaC,GAAY3D,EAEpFS,GAAe5E,EAAAA,EAAAA,SAAQ,ICzDKR,KAAkF,IAAjF,MAAE0E,EAAM,GAAE,KAACnC,EAAK,GAAE,KAACgG,EAAK,GAAE,SAACC,EAAS,GAAE,eAACC,EAAe,GAAE,OAACC,EAAO,GAAE,IAACd,EAAI,IAAI5H,EAC5G,OAAO0E,EAAMhF,OAAQgG,GAAQA,EAAKC,IAAIC,WAAWC,SAAStD,IAASmD,EAAK3E,SAASyG,OAAO1B,cAAcD,SAAS0C,EAAKzC,gBAAkBJ,EAAK3E,SAAS0G,SAAS3B,cAAcD,SAAS2C,EAAS1C,gBAAkBJ,EAAK3E,SAAS2G,eAAe5B,cAAcD,SAAS4C,EAAe3C,gBAAkBJ,EAAK3E,SAAS4G,OAAO7B,cAAcD,SAAS6C,EAAO5C,gBAAkBJ,EAAK3E,SAAS6G,IAAI9B,cAAcD,SAAS+B,EAAI9B,iBDyD/Y6C,CAAqB,CAAEjE,QAAOnC,KAAKsC,EAAW0D,KAAKL,EAAWM,SAASL,EAAeM,eAAeL,EAAqBM,OAAOL,EAAaT,IAAIU,IACxJ,CAAC5D,EAAOG,EAAWqD,EAAWC,EAAeC,EAAqBC,EAAaC,KAE3EtC,EAAeC,IAAoBzI,EAAAA,EAAAA,UAAS4H,IACnDzH,EAAAA,EAAAA,WAAU,KAAQsI,EAAiBb,IAAkB,CAACA,IAGtD,MAAOc,EAAQC,IAAa3I,EAAAA,EAAAA,UAAS,GAE/B4I,GAAa5F,EAAAA,EAAAA,SAAQ,IACTuD,EAAMjC,IAAIuE,IAAA,IAAC,IAAErC,GAAKqC,EAAA,OAAKrC,IACzBsC,QAAQC,GAAS,CAAC,CAAEvC,IAAKuC,EAAOC,MAAO,OAAS,CAAExC,IAAKuC,EAAOC,MAAO,UAClF,CAACzC,IAEE0C,GAAiB3C,EAAAA,EAAAA,aAAY,CAAC4C,EAAGC,KACrC,MAAMC,EAASR,EAAWF,EAAS,GACnC,IAAKU,EAAQ,OAAO,EAEpB,MAAMC,EAASH,EAAE3F,SAAS6F,EAAO5C,KAC3B8C,EAASH,EAAE5F,SAAS6F,EAAO5C,KAEjC,MAAwB,QAAjB4C,EAAOJ,MAAkBK,EAAOE,cAAcD,GAAUA,EAAOC,cAAcF,IACnF,CAACX,EAAQE,IAEN3I,GAAO+C,EAAAA,EAAAA,SAAQ,MAASmE,UAASC,aAAYoB,gBAAeC,qBAAqB,CAACtB,EAASqB,IAC3FgB,GAAOxG,EAAAA,EAAAA,SAAQ,MAASiG,iBAAgBN,cAAc,CAACM,IAErDQ,GAAcnD,EAAAA,EAAAA,aAAY,CAACoD,EAAQxB,KAC1B,WAAXwB,EACFjB,EAAiBkB,GAAQ,CAACzB,KAASyB,IACf,WAAXD,EACTjB,EAAiBkB,GAAQA,EAAKrF,IAAIsF,GAAMA,EAAEzB,MAAQD,EAAKC,IAAMD,EAAO0B,IAChD,WAAXF,GACTjB,EAAiBkB,GAAQA,EAAKzH,OAAO0H,GAAKA,EAAEzB,MAAQD,KAErD,IAEH,MAAO,CACL2B,IAAIhK,EACJiK,WA7DiB,CAAEE,OAAO,GAAIC,SAAS,GAAIC,eAAe,GAAIC,OAAO,GAAIC,IAAI,IA8D7EhF,OACA0B,eACAP,QACAF,aACApG,OACAuJ,OACAC,gBEnGE5J,EAAS2F,sFAEF4F,EAAY5I,IAAkG,IAAjG,cAAEkD,EAAc,CAAEsE,OAAO,GAAIC,SAAS,GAAIC,eAAe,GAAIC,OAAO,GAAI/H,aAAa,KAAMI,EACnH,MAAM,MAAEmD,IAAUC,EAAAA,EAAAA,MAGXoE,EAAQK,IAAarK,EAAAA,EAAAA,UAAS0F,EAAcsE,QAAU,KACtDC,EAAUK,IAAetK,EAAAA,EAAAA,UAAS0F,EAAcuE,UAAY,KAC5DC,EAAgBK,IAAqBvK,EAAAA,EAAAA,UAAS0F,EAAcwE,gBAAkB,KAC9EC,EAAQK,IAAaxK,EAAAA,EAAAA,UAAS0F,EAAcyE,QAAU,KACtD/H,EAAciJ,IAAmBrL,EAAAA,EAAAA,UAAS0F,EAActD,cAAgB,IAGzEiE,GAAaC,EAAAA,EAAAA,aAAY,KAC7B+D,EAAU,IACVC,EAAY,IACZC,EAAkB,IAClBC,EAAU,IACVa,EAAgB,KACf,IAGG9E,GAAQvD,EAAAA,EAAAA,SAAQ,IAAM,CAC1B,CAAEwD,IAAI,SAAUC,MAAMuD,EAAQtD,KAAK,SAAUC,aAAcF,GAAU4D,EAAU5D,GAAQG,YAAY,UACnG,CAAEJ,IAAI,WAAYC,MAAMwD,EAAUvD,KAAK,SAAUC,aAAcF,GAAU6D,EAAY7D,GAAQG,YAAY,YACzG,CAAEJ,IAAI,iBAAkBC,MAAMyD,EAAgBxD,KAAK,SAAUC,aAAcF,GAAU8D,EAAkB9D,GAASG,YAAY,qBAC5H,CAAEJ,IAAI,SAAUC,MAAM0D,EAAQzD,KAAK,WAAYC,aAAcF,GAAU+D,EAAU/D,GAAQG,YAAY,aACrG,CAAEJ,IAAI,eAAgBC,MAAMrE,EAAcsE,KAAK,WAAYC,aAAcF,GAAU4E,EAAgB5E,GAAQG,YAAY,iBACtH,CAACoD,EAAQC,EAAUC,EAAgBC,EAAQ/H,IAMxCgD,GAAOpC,EAAAA,EAAAA,SAAQ,IAAMuD,EAAMjC,IAAIuC,IAAA,IAAC,YAAED,EAAW,KAAEF,GAAMG,EAAA,MAAM,CAAEL,IAAKI,EAAaF,UAAU,CAACH,IAC1FO,GAAe9D,EAAAA,EAAAA,SAAQ,IAAMoC,EAAKd,IAAKyC,GAAMA,EAAEP,KAAM,CAACpB,IAItD4B,GAAapH,EAAAA,EAAAA,GAASC,IAC5BM,EAAAA,EAAAA,WAAU,KACJ6G,EAAW9G,QAAU,KACvByF,EAAM,CAAEe,KAAK,QAAShE,MAAM,+CAA6CuE,QAAQ,KAElF,CAACD,EAAWrB,IAEf,MAAMuB,GAAQlE,EAAAA,EAAAA,SAAQ,IAAMgE,EAAW/G,MAAQ,GAAI,CAAC+G,EAAW/G,QAGxDkH,EAASC,IAAcpH,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MACrDqH,EAAWqD,EAAWC,EAAeC,EAAqBC,EAAaS,GAAmBnE,EAE3FS,GAAe5E,EAAAA,EAAAA,SAAQ,ICzDIR,KAAyF,IAAxF,MAAE0E,EAAM,GAAE,KAACnC,EAAK,GAAE,KAACgG,EAAK,GAAE,SAACC,EAAS,GAAE,eAACC,EAAe,GAAE,OAACC,EAAO,GAAE,WAACK,EAAW,IAAI/I,EAClH,OAAO0E,EAAMhF,OAAQgG,GAAQA,EAAKC,IAAIC,WAAWC,SAAStD,IAASmD,EAAK1E,OAAOwG,OAAO1B,cAAcD,SAAS0C,EAAKzC,gBAAkBJ,EAAK1E,OAAOyG,SAAS3B,cAAcD,SAAS2C,EAAS1C,gBAAkBJ,EAAK1E,OAAO0G,eAAe5B,cAAcD,SAAS4C,EAAe3C,gBAAkBJ,EAAK1E,OAAO2G,OAAO7B,cAAcD,SAAS6C,EAAO5C,gBAAkBJ,EAAK1E,OAAOpB,aAAakG,cAAcD,SAASkD,EAAWjD,iBDyDrZkD,CAAoB,CAAEtE,QAAOnC,KAAKsC,EAAW0D,KAAKL,EAAWM,SAASL,EAAeM,eAAeL,EAAqBM,OAAOL,EAAaU,WAAWD,IAC9J,CAACpE,EAAOG,EAAWqD,EAAWC,EAAeC,EAAqBC,EAAaS,KAE3E9C,EAAeC,IAAoBzI,EAAAA,EAAAA,UAAS4H,IACnDzH,EAAAA,EAAAA,WAAU,KAAQsI,EAAiBb,IAAkB,CAACA,IAGtD,MAAOc,EAAQC,IAAa3I,EAAAA,EAAAA,UAAS,GAE/B4I,GAAa5F,EAAAA,EAAAA,SAAQ,IACTuD,EAAMjC,IAAIuE,IAAA,IAAC,IAAErC,GAAKqC,EAAA,OAAKrC,IACzBsC,QAAQC,GAAS,CAAC,CAAEvC,IAAKuC,EAAOC,MAAO,OAAS,CAAExC,IAAKuC,EAAOC,MAAO,UAClF,CAACzC,IAEE0C,GAAiB3C,EAAAA,EAAAA,aAAY,CAAC4C,EAAGC,KACrC,MAAMC,EAASR,EAAWF,EAAS,GACnC,IAAKU,EAAQ,OAAO,EAEpB,MAAMC,EAASH,EAAE1F,OAAO4F,EAAO5C,KACzB8C,EAASH,EAAE3F,OAAO4F,EAAO5C,KAE/B,MAAwB,QAAjB4C,EAAOJ,MAAkBK,EAAOE,cAAcD,GAAUA,EAAOC,cAAcF,IACnF,CAACX,EAAQE,IAEN3I,GAAO+C,EAAAA,EAAAA,SAAQ,MAASmE,UAASC,aAAYoB,gBAAeC,qBAAqB,CAACtB,EAASqB,IAC3FgB,GAAOxG,EAAAA,EAAAA,SAAQ,MAASiG,iBAAgBN,cAAc,CAACM,IAEvDQ,GAAcnD,EAAAA,EAAAA,aAAY,CAACoD,EAAQxB,KACxB,WAAXwB,EACFjB,EAAiBkB,GAAQ,CAACzB,KAASyB,IACf,WAAXD,EACTjB,EAAiBkB,GAAQA,EAAKrF,IAAIsF,GAAMA,EAAEzB,MAAQD,EAAKC,IAAMD,EAAO0B,IAChD,WAAXF,GACTjB,EAAiBkB,GAAQA,EAAKzH,OAAO0H,GAAKA,EAAEzB,MAAQD,KAErD,IAEH,MAAO,CACL2B,IAAIhK,EACJiK,WA7DiB,CAAEE,OAAO,GAAIC,SAAS,GAAIC,eAAe,GAAIC,OAAO,GAAI/H,aAAa,IA8DtFgD,OACA0B,eACAP,QACAF,aACApG,OACAuJ,OACAC,gBEnGE5J,EAAS2F,4FAEFiG,EAAkBjJ,IAAsC,IAArC,cAAEkD,EAAc,CAAEsE,OAAO,KAAMxH,EAC7D,MAAM,MAAEmD,IAAUC,EAAAA,EAAAA,MAGXoE,EAAQK,IAAarK,EAAAA,EAAAA,UAAS0F,EAAcsE,QAAU,IAGvD3D,GAAaC,EAAAA,EAAAA,aAAY,KAC7B+D,EAAU,KACT,IAGG9D,GAAQvD,EAAAA,EAAAA,SAAQ,IAAM,CAC1B,CAAEwD,IAAI,SAAUC,MAAMuD,EAAQtD,KAAK,SAAUC,aAAcF,GAAU4D,EAAU5D,GAAQG,YAAY,WAClG,CAACoD,IAME5E,GAAOpC,EAAAA,EAAAA,SAAQ,IAAMuD,EAAMjC,IAAIuC,IAAA,IAAC,YAAED,EAAW,KAAEF,GAAMG,EAAA,MAAM,CAAEL,IAAKI,EAAaF,UAAU,CAACH,IAC1FO,GAAe9D,EAAAA,EAAAA,SAAQ,IAAMoC,EAAKd,IAAKyC,GAAMA,EAAEP,KAAM,CAACpB,IAItD4B,GAAapH,EAAAA,EAAAA,GAASC,IAC5BM,EAAAA,EAAAA,WAAU,KACJ6G,EAAW9G,QAAU,KACvByF,EAAM,CAAEe,KAAK,QAAShE,MAAM,+CAA6CuE,QAAQ,KAElF,CAACD,EAAWrB,IAEf,MAAMuB,GAAQlE,EAAAA,EAAAA,SAAQ,IAAMgE,EAAW/G,MAAQ,GAAI,CAAC+G,EAAW/G,QAGxDkH,EAASC,IAAcpH,EAAAA,EAAAA,UAAS,CAAC,GAAI,MACrCqH,EAAWqD,GAAavD,EAEzBS,GAAe5E,EAAAA,EAAAA,SAAQ,IC7CUR,KAAmC,IAAlC,MAAE0E,EAAM,GAAE,KAACnC,EAAK,GAAE,KAACgG,EAAK,IAAIvI,EAClE,OAAO0E,EAAMhF,OAAQgG,GAAQA,EAAKC,IAAIC,WAAWC,SAAStD,IAASmD,EAAK9F,aAAa4H,OAAO1B,cAAcD,SAAS0C,EAAKzC,iBD6CjHoD,CAA0B,CAAExE,QAAOnC,KAAKsC,EAAW0D,KAAKL,IAC9D,CAACxD,EAAOG,EAAWqD,KAEflC,EAAeC,IAAoBzI,EAAAA,EAAAA,UAAS4H,IACnDzH,EAAAA,EAAAA,WAAU,KAAQsI,EAAiBb,IAAkB,CAACA,IAGtD,MAAOc,EAAQC,IAAa3I,EAAAA,EAAAA,UAAS,GAE/B4I,GAAa5F,EAAAA,EAAAA,SAAQ,IACTuD,EAAMjC,IAAIuE,IAAA,IAAC,IAAErC,GAAKqC,EAAA,OAAKrC,IACzBsC,QAAQC,GAAS,CAAC,CAAEvC,IAAKuC,EAAOC,MAAO,OAAS,CAAExC,IAAKuC,EAAOC,MAAO,UAClF,CAACzC,IAEE0C,GAAiB3C,EAAAA,EAAAA,aAAY,CAAC4C,EAAGC,KACrC,MAAMC,EAASR,EAAWF,EAAS,GACnC,IAAKU,EAAQ,OAAO,EAEpB,MAAMC,EAASH,EAAE9G,aAAagH,EAAO5C,KAC/B8C,EAASH,EAAE/G,aAAagH,EAAO5C,KAErC,MAAwB,QAAjB4C,EAAOJ,MAAkBK,EAAOE,cAAcD,GAAUA,EAAOC,cAAcF,IACnF,CAACX,EAAQE,IAEN3I,GAAO+C,EAAAA,EAAAA,SAAQ,MAASmE,UAASC,aAAYoB,gBAAeC,qBAAqB,CAACtB,EAASqB,IAC3FgB,GAAOxG,EAAAA,EAAAA,SAAQ,MAASiG,iBAAgBN,cAAc,CAACM,IAEvDQ,GAAcnD,EAAAA,EAAAA,aAAY,CAACoD,EAAQxB,KACxB,WAAXwB,EACFjB,EAAiBkB,GAAQ,CAACzB,KAASyB,IACf,WAAXD,EACTjB,EAAiBkB,GAAQA,EAAKrF,IAAIsF,GAAMA,EAAEzB,MAAQD,EAAKC,IAAMD,EAAO0B,IAChD,WAAXF,GACTjB,EAAiBkB,GAAQA,EAAKzH,OAAO0H,GAAKA,EAAEzB,MAAQD,KAErD,IAEH,MAAO,CACL2B,IAAIhK,EACJiK,WA7DiB,CAAEE,OAAO,IA8D1B5E,OACA0B,eACAP,QACAF,aACApG,OACAuJ,OACAC,gBEvFE5J,EAAS2F,0FAEFmG,EAAiBnJ,IAAiD,IAAhD,cAAEkD,EAAc,CAAEkG,OAAO,GAAI5B,OAAO,KAAMxH,EACvE,MAAM,MAAEmD,IAAUC,EAAAA,EAAAA,MAGXgG,EAAQC,IAAa7L,EAAAA,EAAAA,UAAS0F,EAAckG,QAAU,KACtD5B,EAAQK,IAAarK,EAAAA,EAAAA,UAAS0F,EAAcsE,QAAU,IAGvD3D,GAAaC,EAAAA,EAAAA,aAAY,KAC7BuF,EAAU,IACVxB,EAAU,KACT,IAGG9D,GAAQvD,EAAAA,EAAAA,SAAQ,IAAM,CAC1B,CAAEwD,IAAI,SAAUC,MAAMmF,EAAQlF,KAAK,SAAUC,aAAcF,GAAUoF,EAAUpF,GAAQG,YAAY,aACnG,CAAEJ,IAAI,SAAUC,MAAMuD,EAAQtD,KAAK,SAAUC,aAAcF,GAAU4D,EAAU5D,GAAQG,YAAY,WAClG,CAACgF,EAAQ5B,IAMN5E,GAAOpC,EAAAA,EAAAA,SAAQ,IAAMuD,EAAMjC,IAAIuC,IAAA,IAAC,YAAED,EAAW,KAAEF,GAAMG,EAAA,MAAM,CAAEL,IAAKI,EAAaF,UAAU,CAACH,IAC1FO,GAAe9D,EAAAA,EAAAA,SAAQ,IAAMoC,EAAKd,IAAKyC,GAAMA,EAAEP,KAAM,CAACpB,IAItD4B,GAAapH,EAAAA,EAAAA,GAASC,IAC5BM,EAAAA,EAAAA,WAAU,KACJ6G,EAAW9G,QAAU,KACvByF,EAAM,CAAEe,KAAK,QAAShE,MAAM,+CAA6CuE,QAAQ,KAElF,CAACD,EAAWrB,IAEf,MAAMuB,GAAQlE,EAAAA,EAAAA,SAAQ,IAAMgE,EAAW/G,MAAQ,GAAI,CAAC+G,EAAW/G,QAGxDkH,EAASC,IAAcpH,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,MACzCqH,EAAWyE,EAAapB,GAAavD,EAEtCS,GAAe5E,EAAAA,EAAAA,SAAQ,IChDQR,KAA6C,IAA5C,MAAE0E,EAAM,GAAE,KAACnC,EAAK,GAAE,OAACgH,EAAO,GAAE,KAAChB,EAAK,IAAIvI,EAC1E,OAAO0E,EAAMhF,OAAQgG,GAAQA,EAAKC,IAAIC,WAAWC,SAAStD,IAASmD,EAAKzE,YAAYmI,OAAOxD,WAAWC,SAAS0D,IAAW7D,EAAKzE,YAAYuG,OAAO1B,cAAcD,SAAS0C,EAAKzC,iBDgDvK0D,CAAwB,CAAE9E,QAAOnC,KAAKsC,EAAW0E,OAAOD,EAAaf,KAAKL,IAChF,CAACxD,EAAOG,EAAWyE,EAAapB,KAE5BlC,EAAeC,IAAoBzI,EAAAA,EAAAA,UAAS4H,IACnDzH,EAAAA,EAAAA,WAAU,KAAQsI,EAAiBb,IAAkB,CAACA,IAItD,MAAOc,EAAQC,IAAa3I,EAAAA,EAAAA,UAAS,GAE/B4I,GAAa5F,EAAAA,EAAAA,SAAQ,IACTuD,EAAMjC,IAAIuE,IAAA,IAAC,IAAErC,GAAKqC,EAAA,OAAKrC,IACzBsC,QAAQC,GAAS,CAAC,CAAEvC,IAAKuC,EAAOC,MAAO,OAAS,CAAExC,IAAKuC,EAAOC,MAAO,UAClF,CAACzC,IAEE0C,GAAiB3C,EAAAA,EAAAA,aAAY,CAAC4C,EAAGC,KACrC,MAAMC,EAASR,EAAWF,EAAS,GACnC,IAAKU,EAAQ,OAAO,EAEpB,MAAMC,EAASH,EAAEzF,YAAY2F,EAAO5C,KAC9B8C,EAASH,EAAE1F,YAAY2F,EAAO5C,KAEpC,MAAwB,QAAjB4C,EAAOJ,MAAkBK,EAAOE,cAAcD,GAAUA,EAAOC,cAAcF,IACnF,CAACX,EAAQE,IAEN3I,GAAO+C,EAAAA,EAAAA,SAAQ,MAASmE,UAASC,aAAYoB,gBAAeC,qBAAqB,CAACtB,EAASqB,IAC3FgB,GAAOxG,EAAAA,EAAAA,SAAQ,MAASiG,iBAAgBN,cAAc,CAACM,IAEvDQ,GAAcnD,EAAAA,EAAAA,aAAY,CAACoD,EAAQxB,KACxB,WAAXwB,EACFjB,EAAiBkB,GAAQ,CAACzB,KAASyB,IACf,WAAXD,EACTjB,EAAiBkB,GAAQA,EAAKrF,IAAIsF,GAAMA,EAAEzB,MAAQD,EAAKC,IAAMD,EAAO0B,IAChD,WAAXF,GACTjB,EAAiBkB,GAAQA,EAAKzH,OAAO0H,GAAKA,EAAEzB,MAAQD,KAErD,IAEH,MAAO,CACL2B,IAAIhK,EACJiK,WA9DiB,CAAE8B,OAAO,GAAI5B,OAAO,IA+DrC5E,OACA0B,eACAP,QACAF,aACApG,OACAuJ,OACAC,gBE3FE5J,EAAS2F,0FAEFyG,EAAiBzJ,IAAuE,IAAtE,cAAEkD,EAAc,CAAEtD,aAAa,GAAIqB,YAAY,GAAID,OAAO,KAAMhB,EAC7F,MAAM,MAAEmD,IAAUC,EAAAA,EAAAA,MAGXxD,EAAciJ,IAAmBrL,EAAAA,EAAAA,UAAS0F,EAActD,cAAgB,KACxEqB,EAAayC,IAAkBlG,EAAAA,EAAAA,UAAS0F,EAAcjC,aAAe,KACrED,EAAQ2C,IAAanG,EAAAA,EAAAA,UAAS0F,EAAclC,QAAU,IAGvD6C,GAAaC,EAAAA,EAAAA,aAAY,KAC7B+E,EAAgB,IAChBnF,EAAe,IACfC,EAAU,KACT,IAGGI,GAAQvD,EAAAA,EAAAA,SAAQ,IAAM,CAC1B,CAAEwD,IAAI,eAAgBC,MAAMrE,EAAcsE,KAAK,WAAYC,aAAcF,GAAU4E,EAAgB5E,GAAQG,YAAY,gBACvH,CAAEJ,IAAI,cAAeC,MAAMhD,EAAaiD,KAAK,WAAYC,aAAcF,GAAUP,EAAeO,GAAQG,YAAY,eACpH,CAAEJ,IAAI,SAAUC,MAAMjD,EAAQkD,KAAK,WAAYC,aAAcF,GAAUN,EAAUM,GAAQG,YAAY,WACpG,CAACxE,EAAcqB,EAAaD,IAMzB4B,GAAOpC,EAAAA,EAAAA,SAAQ,IAAMuD,EAAMjC,IAAIuC,IAAA,IAAC,YAAED,EAAW,KAAEF,GAAMG,EAAA,MAAM,CAAEL,IAAKI,EAAaF,UAAU,CAACH,IAC1FO,GAAe9D,EAAAA,EAAAA,SAAQ,IAAMoC,EAAKd,IAAKyC,GAAMA,EAAEP,KAAM,CAACpB,IAItD4B,GAAapH,EAAAA,EAAAA,GAASC,IAC5BM,EAAAA,EAAAA,WAAU,KACJ6G,EAAW9G,QAAU,KACvByF,EAAM,CAAEe,KAAK,QAAShE,MAAM,+CAA6CuE,QAAQ,KAElF,CAACD,EAAWrB,IAEf,MAAMuB,GAAQlE,EAAAA,EAAAA,SAAQ,IAAMgE,EAAW/G,MAAQ,GAAI,CAAC+G,EAAW/G,QAGxDkH,EAASC,IAAcpH,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,GAAI,MAC7CqH,EAAW6E,EAAgBzE,EAAqBC,GAAeP,EAEhES,GAAe5E,EAAAA,EAAAA,SAAQ,ICnDQR,KAAoE,IAAnE,MAAE0E,EAAM,GAAE,KAACnC,EAAK,GAAE,UAACoH,EAAU,GAAE,eAACnE,EAAe,GAAE,OAACxE,EAAO,IAAIhB,EACjG,OAAO0E,EAAMhF,OAAQgG,GAAQA,EAAKC,IAAIC,WAAWC,SAAStD,IAASmD,EAAKxE,YAAYtB,aAAakG,cAAcD,SAAS8D,EAAU7D,gBAAkBJ,EAAKxE,YAAYD,YAAY6E,cAAcD,SAASL,EAAeM,gBAAkBJ,EAAKxE,YAAYF,OAAO8E,cAAcD,SAAS7E,EAAO8E,iBDmDxR8D,CAAwB,CAAElF,QAAOnC,KAAKsC,EAAW8E,UAAUD,EAAgBlE,eAAeP,EAAqBjE,OAAOkE,IAC5H,CAACR,EAAOG,EAAW6E,EAAgBzE,EAAqBC,KAEpDc,EAAeC,IAAoBzI,EAAAA,EAAAA,UAAS4H,IACnDzH,EAAAA,EAAAA,WAAU,KAAQsI,EAAiBb,IAAkB,CAACA,IAGtD,MAAOc,EAAQC,IAAa3I,EAAAA,EAAAA,UAAS,GAE/B4I,GAAa5F,EAAAA,EAAAA,SAAQ,IACTuD,EAAMjC,IAAIuE,IAAA,IAAC,IAAErC,GAAKqC,EAAA,OAAKrC,IACzBsC,QAAQC,GAAS,CAAC,CAAEvC,IAAKuC,EAAOC,MAAO,OAAS,CAAExC,IAAKuC,EAAOC,MAAO,UAClF,CAACzC,IAEE0C,GAAiB3C,EAAAA,EAAAA,aAAY,CAAC4C,EAAGC,KACrC,MAAMC,EAASR,EAAWF,EAAS,GACnC,IAAKU,EAAQ,OAAO,EAEpB,MAAMC,EAASH,EAAExF,YAAY0F,EAAO5C,KAC9B8C,EAASH,EAAEzF,YAAY0F,EAAO5C,KAEpC,MAAwB,QAAjB4C,EAAOJ,MAAkBK,EAAOE,cAAcD,GAAUA,EAAOC,cAAcF,IACnF,CAACX,EAAQE,IAEN3I,GAAO+C,EAAAA,EAAAA,SAAQ,MAASmE,UAASC,aAAYoB,gBAAeC,qBAAqB,CAACtB,EAASqB,IAC3FgB,GAAOxG,EAAAA,EAAAA,SAAQ,MAASiG,iBAAgBN,cAAc,CAACM,IAEvDQ,GAAcnD,EAAAA,EAAAA,aAAY,CAACoD,EAAQxB,KACxB,WAAXwB,EACFjB,EAAiBkB,GAAQ,CAACzB,KAASyB,IACf,WAAXD,EACTjB,EAAiBkB,GAAQA,EAAKrF,IAAIsF,GAAMA,EAAEzB,MAAQD,EAAKC,IAAMD,EAAO0B,IAChD,WAAXF,GACTjB,EAAiBkB,GAAQA,EAAKzH,OAAO0H,GAAKA,EAAEzB,MAAQD,KAErD,IAEH,MAAO,CACL2B,IAAIhK,EACJiK,WA7DiB,CAAE1H,aAAa,GAAIqB,YAAY,GAAID,OAAO,IA8D3D4B,OACA0B,eACAP,QACAF,aACApG,OACAuJ,OACAC,gBE3FE4C,EAAU,CACdpJ,KAAMwC,EACNlC,SAAUwG,EACVvG,OAAQ4H,EACR3H,YAAakI,EACbjI,YAAauI,EACb7J,aAAcqJ,GAGH3I,EAAiBN,IAAsC,IAArC,UAAEC,EAAS,cAAEiD,EAAc,CAAC,GAAGlD,EAG5D,OAAO8J,EAFcD,EAAQ5J,IAET,CAAEiD,kB","sources":["helpers/getDate.js","helpers/getData.js","hooks/useFetch.js","helpers/getTime.js","components/crud/views/CrudItems.js","components/icons|lazy|/^/.*/.js$/|groupOptions: {}|namespace object","components/selectors/getCitasFiltered.js","hooks/crud/useCita.js","hooks/crud/usePaciente.js","components/selectors/getPacientesFiltered.js","hooks/crud/useDoctor.js","components/selectors/getDoctoresFiltered.js","hooks/crud/useEspecialidad.js","components/selectors/getEspecialidadesFiltered.js","hooks/crud/useConsultorio.js","components/selectors/getConsultoriosFiltered.js","hooks/crud/useTratamiento.js","components/selectors/getTratamientosFiltered.js","hooks/useCrudFactory.js"],"sourcesContent":["const date = new Date();\r\n\r\nexport const getDate = date\r\n  .toLocaleDateString(\"es-CO\", {\r\n    formatMatcher: \"basic\",\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  })\r\n  .split(\"/\");","export const getData = async( urlApi ) => {\r\n    let responseFetch = { data: {}, status: 0 };\r\n    await fetch( urlApi )\r\n        .then(response => { responseFetch.status = response.status; return response.json() })\r\n        .then(data => responseFetch.data = data)\r\n        .catch((error) =>{\r\n            if(error.message === 'Failed to fetch') { responseFetch.status = 500 }\r\n        });\r\n    \r\n    return responseFetch;\r\n}","\r\nimport { useState, useEffect } from 'react';\r\nimport { getData } from '../helpers/getData.js';\r\n\r\nexport const useFetch = ( urlApi ) => {\r\n    const [responseFetch, setResponseFetch] = useState({ data: [], status: 0 });\r\n    useEffect( () => { \r\n        getData( urlApi )\r\n            .then( datos => setResponseFetch({ data: datos.data, status: datos.status }) ) \r\n            .catch((error) => console.log(\"Error useFetch: \" + error.message));\r\n    }, []);\r\n\r\n    return responseFetch;\r\n}","const hours = new Date();\r\n\r\nexport const getTime = hours.toLocaleString(\"en-US\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hour12: false,\r\n});","import { Suspense, lazy, useState, useMemo } from \"react\";\r\nimport { useCrudFactory } from '../../../hooks/useCrudFactory.js';\r\n\r\n// helper para lazy-imports, DRY\r\nconst lazyIcon = (path) => lazy(() => import(`../../icons/${path}.js`));\r\n\r\n// centralizamos imports para que sean fáciles de leer\r\nconst IconsLazy = {\r\n  calendar: {\r\n    search: lazyIcon(\"calendar/CalendarSearch\"),\r\n    create: lazyIcon(\"calendar/CalendarPlus\"),\r\n    read: lazyIcon(\"calendar/CalendarSmile\"),\r\n    update: lazyIcon(\"calendar/CalendarEdit\"),\r\n    delete: lazyIcon(\"calendar/CalendarDelete\"),\r\n  },\r\n  user: {\r\n    search: lazyIcon(\"user/UserSearch\"),\r\n    create: lazyIcon(\"user/UserPlus\"),\r\n    read: lazyIcon(\"user/User\"),\r\n    update: lazyIcon(\"user/UserEdit\"),\r\n    delete: lazyIcon(\"user/UserDelete\"),\r\n  },\r\n  home: {\r\n    search: lazyIcon(\"home/HomeSearch\"),\r\n    create: lazyIcon(\"home/HomePlus\"),\r\n    read: lazyIcon(\"home/HomeIndex\"),\r\n    update: lazyIcon(\"home/HomeEdit\"),\r\n    delete: lazyIcon(\"home/HomeDelete\"),\r\n  },\r\n  hearth: {\r\n    search: lazyIcon(\"hearth/HearthSearch\"),\r\n    create: lazyIcon(\"hearth/HearthPlus\"),\r\n    update: lazyIcon(\"hearth/HearthEdit\"),\r\n    delete: lazyIcon(\"hearth/HearthDelete\"),\r\n  },\r\n  filter: {\r\n    search: lazyIcon(\"filter/FilterSearch\"),\r\n    create: lazyIcon(\"filter/FilterPlus\"),\r\n    update: lazyIcon(\"filter/FilterEdit\"),\r\n    delete: lazyIcon(\"filter/FilterDelete\"),\r\n  },\r\n  syringe: { read:lazyIcon(\"medical/SyringeLight\") }, \r\n  especialidad: { read:lazyIcon(\"medical/StethoscopeLight\") },\r\n};\r\n\r\nconst CreateItem = lazy(() => import(\"../CreateItem.js\"));\r\nconst QueryItem = lazy(() => import(\"../QueryItem.js\"));\r\n\r\nexport const CrudItems = ({ classType, title = \"Registros\" }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const objectHook = useCrudFactory({ classType });\r\n  \r\n  // usamos useMemo para no recrear este objeto en cada render\r\n  const IconsCrud = useMemo( () => ({\r\n      cita: {\r\n        IconSearch:IconsLazy.calendar.search,\r\n        IconCreate:IconsLazy.calendar.create,\r\n        IconRead:IconsLazy.calendar.read,\r\n        IconUpdate:IconsLazy.calendar.update,\r\n        IconDelete:IconsLazy.calendar.delete,\r\n      },\r\n      paciente:{\r\n        IconSearch:IconsLazy.user.search,\r\n        IconCreate:IconsLazy.user.create,\r\n        IconRead:IconsLazy.user.read,\r\n        IconUpdate:IconsLazy.user.update,\r\n        IconDelete:IconsLazy.user.delete,\r\n      },\r\n      doctor:{\r\n        IconSearch:IconsLazy.user.search,\r\n        IconCreate:IconsLazy.user.create,\r\n        IconRead:IconsLazy.user.read,\r\n        IconUpdate:IconsLazy.user.update,\r\n        IconDelete:IconsLazy.user.delete,\r\n      },\r\n      consultorio:{\r\n        IconSearch:IconsLazy.home.search,\r\n        IconCreate:IconsLazy.home.create,\r\n        IconRead:IconsLazy.home.read,\r\n        IconUpdate:IconsLazy.home.update,\r\n        IconDelete:IconsLazy.home.delete,\r\n      },\r\n      tratamiento:{\r\n        IconSearch:IconsLazy.filter.search,\r\n        IconCreate:IconsLazy.filter.create,\r\n        IconRead:IconsLazy.syringe.read,\r\n        IconUpdate:IconsLazy.filter.update,\r\n        IconDelete:IconsLazy.filter.delete,\r\n      },\r\n      especialidad:{\r\n        IconSearch:IconsLazy.hearth.search,\r\n        IconCreate:IconsLazy.hearth.create,\r\n        IconRead:IconsLazy.especialidad.read,\r\n        IconUpdate:IconsLazy.hearth.update,\r\n        IconDelete:IconsLazy.hearth.delete,\r\n      },\r\n  }), [] );\r\n\r\n  const IconCreate = IconsCrud[classType].IconCreate;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={null}>\r\n        <h5 className=\"main-color fs-sm-2 mt-4 mb-4\">{title}</h5>\r\n\r\n        <button className='border-0 bg-transparent queryBtn main-color' onClick={()=>setOpen('create')}><IconCreate width={'1.5'} height={'1.5'} /></button>\r\n\r\n        <QueryItem\r\n          classType={classType}\r\n          Icons={IconsCrud}\r\n          objectHook={objectHook}\r\n        />\r\n        { open && <CreateItem classType={classType} Icon={IconCreate} objectHook={objectHook} setOpen={setOpen} /> }\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrudItems;\r\n","var map = {\n\t\"./alert/Error.js\": [\n\t\t9635,\n\t\t9635\n\t],\n\t\"./alert/Success.js\": [\n\t\t5950,\n\t\t5950\n\t],\n\t\"./alert/Warning.js\": [\n\t\t7793,\n\t\t7793\n\t],\n\t\"./calendar/CalendarDelete.js\": [\n\t\t5994,\n\t\t5994\n\t],\n\t\"./calendar/CalendarEdit.js\": [\n\t\t9461,\n\t\t9461\n\t],\n\t\"./calendar/CalendarMedical.js\": [\n\t\t7126,\n\t\t7126\n\t],\n\t\"./calendar/CalendarPlus.js\": [\n\t\t2061,\n\t\t2061\n\t],\n\t\"./calendar/CalendarSearch.js\": [\n\t\t5385,\n\t\t5385\n\t],\n\t\"./calendar/CalendarSmile.js\": [\n\t\t3365,\n\t\t3365\n\t],\n\t\"./dentist/Tooth.js\": [\n\t\t4154,\n\t\t4154\n\t],\n\t\"./filter/Filter.js\": [\n\t\t4717,\n\t\t4717\n\t],\n\t\"./filter/FilterDelete.js\": [\n\t\t4854,\n\t\t4854\n\t],\n\t\"./filter/FilterEdit.js\": [\n\t\t2505,\n\t\t2505\n\t],\n\t\"./filter/FilterPlus.js\": [\n\t\t6681,\n\t\t6681\n\t],\n\t\"./filter/FilterSearch.js\": [\n\t\t6157,\n\t\t6157\n\t],\n\t\"./hearth/HearthDelete.js\": [\n\t\t622,\n\t\t622\n\t],\n\t\"./hearth/HearthEdit.js\": [\n\t\t7729,\n\t\t7729\n\t],\n\t\"./hearth/HearthPlus.js\": [\n\t\t1073,\n\t\t1073\n\t],\n\t\"./hearth/HearthSearch.js\": [\n\t\t885,\n\t\t885\n\t],\n\t\"./home/HomeDelete.js\": [\n\t\t4208,\n\t\t4208\n\t],\n\t\"./home/HomeEdit.js\": [\n\t\t355,\n\t\t355\n\t],\n\t\"./home/HomeIndex.js\": [\n\t\t8083,\n\t\t8083\n\t],\n\t\"./home/HomeMedical.js\": [\n\t\t7340,\n\t\t7340\n\t],\n\t\"./home/HomeMenu.js\": [\n\t\t6468,\n\t\t6468\n\t],\n\t\"./home/HomePlus.js\": [\n\t\t6335,\n\t\t6335\n\t],\n\t\"./home/HomeSearch.js\": [\n\t\t2043,\n\t\t2043\n\t],\n\t\"./logo/Logo.js\": [\n\t\t7087\n\t],\n\t\"./logo/LogoTooth.js\": [\n\t\t8273,\n\t\t8273\n\t],\n\t\"./medical/Stethoscope.js\": [\n\t\t3997,\n\t\t3997\n\t],\n\t\"./medical/StethoscopeLight.js\": [\n\t\t793,\n\t\t793\n\t],\n\t\"./medical/Syringe.js\": [\n\t\t1173,\n\t\t1173\n\t],\n\t\"./medical/SyringeLight.js\": [\n\t\t4001,\n\t\t4001\n\t],\n\t\"./menu/Menu.js\": [\n\t\t783,\n\t\t783\n\t],\n\t\"./sort/SortDownAlpha.js\": [\n\t\t9501,\n\t\t9501\n\t],\n\t\"./sort/SortDownNum.js\": [\n\t\t7421,\n\t\t7421\n\t],\n\t\"./sort/SortUpAlpha.js\": [\n\t\t8330,\n\t\t8330\n\t],\n\t\"./sort/SortUpNum.js\": [\n\t\t334,\n\t\t334\n\t],\n\t\"./theme/Language.js\": [\n\t\t426,\n\t\t426\n\t],\n\t\"./theme/Moon.js\": [\n\t\t4577,\n\t\t4577\n\t],\n\t\"./theme/Sun.js\": [\n\t\t4748,\n\t\t4748\n\t],\n\t\"./user/User.js\": [\n\t\t8155,\n\t\t8155\n\t],\n\t\"./user/UserDelete.js\": [\n\t\t6396,\n\t\t6396\n\t],\n\t\"./user/UserEdit.js\": [\n\t\t439,\n\t\t439\n\t],\n\t\"./user/UserInjured.js\": [\n\t\t3026,\n\t\t3026\n\t],\n\t\"./user/UserMedical.js\": [\n\t\t5888,\n\t\t5888\n\t],\n\t\"./user/UserNurse.js\": [\n\t\t938,\n\t\t938\n\t],\n\t\"./user/UserPlus.js\": [\n\t\t5435,\n\t\t5435\n\t],\n\t\"./user/UserSearch.js\": [\n\t\t3343,\n\t\t3343\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9955;\nmodule.exports = webpackAsyncContext;","export const getCitasFiltered = ({ array=[],code='',patient='',date='',time='',consultoryRoom='',doctor='',treatment='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.cita.paciente.toLowerCase().includes(patient.toLowerCase()) && item.cita.fecha.toLowerCase().includes(date.toLowerCase()) && item.cita.hora.toLowerCase().includes(time.toLowerCase()) && item.cita.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase())  && item.cita.doctor.toLowerCase().includes(doctor.toLowerCase()) && item.cita.tratamiento.toLowerCase().includes(treatment.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getDate } from '../../helpers/getDate.js';\r\nimport { getTime } from '../../helpers/getTime.js';\r\nimport { getCitasFiltered } from '../../components/selectors/getCitasFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_CITAS;\r\n\r\nexport const useCita = ({ initialValues={ paciente:'', consultorio:'', doctor:'', tratamiento:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n  \r\n  // 👇 State ---\r\n  const [paciente, setPaciente] = useState(initialValues.paciente || '');\r\n  const [fecha, setFecha] = useState(getDate[2] + \"-\" + getDate[1] + \"-\" + getDate[0]);\r\n  const [hora, setHora] = useState(getTime);\r\n  const [consultorio, setConsultorio] = useState(initialValues.consultorio || '');\r\n  const [doctor, setDoctor] = useState(initialValues.doctor || '');\r\n  const [tratamiento, setTratamiento] = useState(initialValues.tratamiento || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setPaciente('');\r\n    setFecha(getDate[2] + \"-\" + getDate[1] + \"-\" + getDate[0]);\r\n    setHora(getTime);\r\n    setConsultorio('');\r\n    setDoctor('');\r\n    setTratamiento('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'paciente', value:paciente, type:\"dropdown\", handleChange:(value) => setPaciente(value), placeholder:'Paciente' },\r\n    { key:'fecha', value:fecha, type:\"date\", handleChange:(value) => setFecha(value), placeholder:'Fecha' },\r\n    { key:'hora', value:hora, type:\"time\", handleChange:(value) => setHora(value), placeholder:'Hora' },\r\n    { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange:(value) => setConsultorio(value), placeholder:'Consultorio' },\r\n    { key:'doctor', value:doctor, type:\"dropdown\", handleChange:(value) => setDoctor(value), placeholder:'Doctor' },\r\n    { key:'tratamiento', value:tratamiento, type:\"dropdown\", handleChange:(value) => setTratamiento(value), placeholder:'Tratamiento' }\r\n  ], [paciente, fecha, hora, consultorio, doctor, tratamiento]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { paciente:'', fecha:'', hora:'', consultorio:'', doctor:'', tratamiento:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type: \"error\", title: \"Error en la conexión con la base de datos\", buttons: 1 });\r\n    }\r\n  }, [arrayFetch.status, alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment] = queries;\r\n  \r\n  const memoFiltered = useMemo(() => {\r\n    return getCitasFiltered({ array, code:queryCode, patient:queryPatient, date:queryDate, time:queryTime, consultoryRoom:queryConsultoryRoom, doctor:queryDoctor, treatment:queryTreatment });\r\n  }, [array, queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n\r\n  // --- Sort ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.cita[config.key];\r\n    const valueB = b.cita[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      console.log(item);\r\n      setArrayFiltered(prev => [...prev, item]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useCita;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from \"../useFetch.js\";\r\nimport { getPacientesFiltered } from \"../../components/selectors/getPacientesFiltered.js\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_PACIENTES;\r\n\r\nexport const usePaciente = ({ initialValues={ nombre:'', apellido:'', identificacion:'', genero:'', eps:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n  const [apellido, setApellido] = useState(initialValues.apellido || '');\r\n  const [identificacion, setIdentificacion] = useState(initialValues.identificacion || '');\r\n  const [genero, setGenero] = useState(initialValues.genero || '');\r\n  const [eps, setEps] = useState(initialValues.eps || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNombre('');\r\n    setApellido('');\r\n    setIdentificacion('');\r\n    setGenero('');\r\n    setEps('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:\"nombre\", value:nombre, type:\"search\", handleChange:(value) => setNombre(value), placeholder:'Nombre' },\r\n    { key:\"apellido\", value:apellido, type:\"search\", handleChange:(value) => setApellido(value), placeholder:'Apellido' },\r\n    { key:\"identificacion\", value:identificacion, type:\"number\", handleChange:(value) => setIdentificacion(value), placeholder:'Identificación' },\r\n    { key:\"genero\", value:genero, type:\"dropdown\", handleChange:(value) => setGenero(value), placeholder:'Género' },\r\n    { key:\"eps\", value:eps, type:\"dropdown\", handleChange:(value) => setEps(value), placeholder:'Eps' },\r\n  ], [nombre, apellido, identificacion, genero, eps]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'', apellido:'', identificacion:'', genero:'', eps:'' }\r\n  \r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [queryCode, queryName, queryLastname, queryIdentification, queryGender, queryEps] = queries;\r\n  \r\n  const memoFiltered = useMemo(() => {\r\n    return getPacientesFiltered({ array, code:queryCode, name:queryName, lastname:queryLastname, identification:queryIdentification, gender:queryGender, eps:queryEps });\r\n  }, [array, queryCode, queryName, queryLastname, queryIdentification, queryGender, queryEps]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.paciente[config.key];\r\n    const valueB = b.paciente[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n    const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default usePaciente;","export const getPacientesFiltered = ({ array=[],code='',name='',lastname='',identification='',gender='',eps='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.paciente.nombre.toLowerCase().includes(name.toLowerCase()) && item.paciente.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.paciente.identificacion.toLowerCase().includes(identification.toLowerCase()) && item.paciente.genero.toLowerCase().includes(gender.toLowerCase()) && item.paciente.eps.toLowerCase().includes(eps.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from \"../useFetch.js\";\r\nimport { getDoctoresFiltered } from \"../../components/selectors/getDoctoresFiltered.js\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_DOCTORES;\r\n\r\nexport const useDoctor = ({ initialValues={ nombre:'', apellido:'', identificacion:'', genero:'', especialidad:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n  \r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n  const [apellido, setApellido] = useState(initialValues.apellido || '');\r\n  const [identificacion, setIdentificacion] = useState(initialValues.identificacion || '');\r\n  const [genero, setGenero] = useState(initialValues.genero || '');\r\n  const [especialidad, setEspecialidad] = useState(initialValues.especialidad || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNombre('');\r\n    setApellido('');\r\n    setIdentificacion('');\r\n    setGenero('');\r\n    setEspecialidad('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:\"nombre\", value:nombre, type:\"search\", handleChange:(value) => setNombre(value), placeholder:'Nombre' },\r\n    { key:\"apellido\", value:apellido, type:\"search\", handleChange:(value) => setApellido(value), placeholder:'Apellido' },\r\n    { key:\"identificacion\", value:identificacion, type:\"number\", handleChange:(value) => setIdentificacion(value) , placeholder:'Identificación'},\r\n    { key:\"genero\", value:genero, type:\"dropdown\", handleChange:(value) => setGenero(value), placeholder:'Género' },\r\n    { key:\"especialidad\", value:especialidad, type:\"dropdown\", handleChange:(value) => setEspecialidad(value), placeholder:'Especialidad' },\r\n  ], [nombre, apellido, identificacion, genero, especialidad]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'', apellido:'', identificacion:'', genero:'', especialidad:'' }\r\n\r\n   // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [queryCode, queryName, queryLastname, queryIdentification, queryGender, querySpeciality] = queries;\r\n\r\n  const memoFiltered = useMemo(() => {\r\n    return getDoctoresFiltered({ array, code:queryCode, name:queryName, lastname:queryLastname, identification:queryIdentification, gender:queryGender, speciality:querySpeciality });\r\n  }, [array, queryCode, queryName, queryLastname, queryIdentification, queryGender, querySpeciality]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.doctor[config.key];\r\n    const valueB = b.doctor[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n  \r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useDoctor;","export const getDoctoresFiltered = ({ array=[],code='',name='',lastname='',identification='',gender='',speciality='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.doctor.nombre.toLowerCase().includes(name.toLowerCase()) && item.doctor.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.doctor.identificacion.toLowerCase().includes(identification.toLowerCase()) && item.doctor.genero.toLowerCase().includes(gender.toLowerCase()) && item.doctor.especialidad.toLowerCase().includes(speciality.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getEspecialidadesFiltered } from '../../components/selectors/getEspecialidadesFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_ESPECIALIDADES;\r\n\r\nexport const useEspecialidad = ({ initialValues={ nombre:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNombre('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'nombre', value:nombre, type:'search', handleChange:(value) => setNombre(value), placeholder:'Nombre' }\r\n  ], [nombre]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\"]);\r\n  const [queryCode, queryName] = queries;\r\n\r\n  const memoFiltered = useMemo(() => {\r\n    return getEspecialidadesFiltered({ array, code:queryCode, name:queryName });\r\n  }, [array, queryCode, queryName]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.especialidad[config.key];\r\n    const valueB = b.especialidad[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n  \r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n}\r\nexport default useEspecialidad;","export const getEspecialidadesFiltered = ({ array=[],code='',name='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.especialidad.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getConsultoriosFiltered } from '../../components/selectors/getConsultoriosFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_CONSULTORIOS;\r\n\r\nexport const useConsultorio = ({ initialValues={ numero:'', nombre:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [numero, setNumero] = useState(initialValues.numero || '');\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNumero('');\r\n    setNombre('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'numero', value:numero, type:'number', handleChange:(value) => setNumero(value), placeholder:'Número' },\r\n    { key:'nombre', value:nombre, type:'search', handleChange:(value) => setNombre(value), placeholder:'Nombre' }\r\n  ], [numero, nombre]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { numero:'', nombre:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\"]);\r\n  const [queryCode, queryNumber, queryName] = queries;\r\n  \r\n  const memoFiltered = useMemo(() => {\r\n    return getConsultoriosFiltered({ array, code:queryCode, number:queryNumber, name:queryName });\r\n  }, [array, queryCode, queryNumber, queryName]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.consultorio[config.key];\r\n    const valueB = b.consultorio[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useConsultorio;","export const getConsultoriosFiltered = ({ array=[],code='',number='',name='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.consultorio.numero.toString().includes(number) && item.consultorio.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getTratamientosFiltered } from '../../components/selectors/getTratamientosFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_TRATAMIENTOS;\r\n\r\nexport const useTratamiento = ({ initialValues={ especialidad:'', consultorio:'', doctor:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [especialidad, setEspecialidad] = useState(initialValues.especialidad || '');\r\n  const [consultorio, setConsultorio] = useState(initialValues.consultorio || '');\r\n  const [doctor, setDoctor] = useState(initialValues.doctor || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setEspecialidad('');\r\n    setConsultorio('');\r\n    setDoctor('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'especialidad', value:especialidad, type:\"dropdown\", handleChange:(value) => setEspecialidad(value), placeholder:'Especialidad' },\r\n    { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange:(value) => setConsultorio(value), placeholder:'Consultorio' },\r\n    { key:'doctor', value:doctor, type:\"dropdown\", handleChange:(value) => setDoctor(value), placeholder:'Doctor' },\r\n  ], [especialidad, consultorio, doctor]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { especialidad:'', consultorio:'', doctor:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [queryCode, querySpecialty, queryConsultoryRoom, queryDoctor] = queries;\r\n\r\n  const memoFiltered = useMemo(() => {\r\n    return getTratamientosFiltered({ array, code:queryCode, specialty:querySpecialty, consultoryRoom:queryConsultoryRoom, doctor:queryDoctor });\r\n  }, [array, queryCode, querySpecialty, queryConsultoryRoom, queryDoctor]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.tratamiento[config.key];\r\n    const valueB = b.tratamiento[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useTratamiento;","export const getTratamientosFiltered = ({ array=[],code='',specialty='',consultoryRoom='',doctor='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.tratamiento.especialidad.toLowerCase().includes(specialty.toLowerCase()) && item.tratamiento.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase()) && item.tratamiento.doctor.toLowerCase().includes(doctor.toLowerCase()) );\r\n}","import { useCita } from './crud/useCita.js';\r\nimport { usePaciente } from './crud/usePaciente.js';\r\nimport { useDoctor } from './crud/useDoctor.js';\r\nimport { useEspecialidad } from './crud/useEspecialidad.js';\r\nimport { useConsultorio } from './crud/useConsultorio.js';\r\nimport { useTratamiento } from './crud/useTratamiento.js';\r\n\r\nconst hookMap = {\r\n  cita: useCita,\r\n  paciente: usePaciente,\r\n  doctor: useDoctor,\r\n  consultorio: useConsultorio,\r\n  tratamiento: useTratamiento,\r\n  especialidad: useEspecialidad,\r\n};\r\n\r\nexport const useCrudFactory = ({ classType, initialValues={} }) => {\r\n  const selectedHook = hookMap[classType];\r\n\r\n  return selectedHook({ initialValues });\r\n}\r\n\r\nexport default useCrudFactory;"],"names":["getDate","Date","toLocaleDateString","formatMatcher","year","month","day","split","useFetch","urlApi","responseFetch","setResponseFetch","useState","data","status","useEffect","async","fetch","then","response","json","catch","error","message","getData","datos","console","log","getTime","toLocaleString","hour","minute","hour12","lazyIcon","path","lazy","IconsLazy","calendar","search","create","read","update","delete","user","home","hearth","filter","syringe","especialidad","CreateItem","QueryItem","CrudItems","_ref","classType","title","open","setOpen","objectHook","useCrudFactory","IconsCrud","useMemo","cita","IconSearch","IconCreate","IconRead","IconUpdate","IconDelete","paciente","doctor","consultorio","tratamiento","_jsx","className","children","_jsxs","Suspense","fallback","onClick","width","height","Icons","Icon","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","id","all","slice","keys","Object","module","exports","process","useCita","initialValues","alert","useAlertContext","setPaciente","fecha","setFecha","hora","setHora","setConsultorio","setDoctor","setTratamiento","resetState","useCallback","state","key","value","type","handleChange","placeholder","_ref2","placeholders","k","arrayFetch","buttons","array","queries","setQueries","queryCode","queryPatient","queryDate","queryTime","queryConsultoryRoom","queryDoctor","queryTreatment","memoFiltered","patient","date","time","consultoryRoom","treatment","item","_id","toString","includes","toLowerCase","getCitasFiltered","arrayFiltered","setArrayFiltered","sortBy","setSortBy","sortConfig","_ref3","flatMap","field","order","SortByProperty","a","b","config","valueA","valueB","localeCompare","sort","handleItems","action","prev","i","api","dataObject","usePaciente","nombre","apellido","identificacion","genero","eps","setNombre","setApellido","setIdentificacion","setGenero","setEps","queryName","queryLastname","queryIdentification","queryGender","queryEps","name","lastname","identification","gender","getPacientesFiltered","useDoctor","setEspecialidad","querySpeciality","speciality","getDoctoresFiltered","useEspecialidad","getEspecialidadesFiltered","useConsultorio","numero","setNumero","queryNumber","number","getConsultoriosFiltered","useTratamiento","querySpecialty","specialty","getTratamientosFiltered","hookMap","selectedHook"],"sourceRoot":""}