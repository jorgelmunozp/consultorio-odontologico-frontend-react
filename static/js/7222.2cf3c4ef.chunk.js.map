{"version":3,"file":"static/js/7222.2cf3c4ef.chunk.js","mappings":"8NAEO,MAAMA,EAAgBC,IAA+C,IAA9C,MAAEC,EAAQ,GAAE,oBAAEC,EAAsB,IAAIF,EACpE,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAASH,IAC1CI,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,GAEzCG,GAAaC,EAAAA,EAAAA,SAAQ,IAAMC,KAAKC,IAAI,EAAGD,KAAKE,KAAKX,EAAMY,OAASV,IAAgB,CAACF,EAAMY,OAAQV,IAE/FW,GAAaL,EAAAA,EAAAA,SAAQ,IAAMM,MAAMC,KAAK,CAAEH,OAAQL,GAAc,CAACS,EAAGC,IAAMA,GAAI,CAACV,IAE7EW,GAAeV,EAAAA,EAAAA,SAAQ,KAC3B,MAAMW,EAAQd,EAAcH,EACtBkB,EAAMD,EAAQjB,EACpB,OAAOF,EAAMqB,MAAMF,EAAOC,IACzB,CAACpB,EAAOK,EAAaH,IAUlBoB,GAAWC,EAAAA,EAAAA,aAAaC,IAC9BlB,EAAemB,GAAQhB,KAAKC,IAAI,EAAGD,KAAKiB,IAAIF,EAAWjB,EAAa,MACnE,CAACA,IAEEoB,GAASJ,EAAAA,EAAAA,aAAY,KACzBjB,EAAemB,GAAQhB,KAAKC,IAAI,EAAGe,EAAO,KACzC,IAEGG,GAASL,EAAAA,EAAAA,aAAY,KACzBjB,EAAemB,GAAQhB,KAAKiB,IAAID,EAAO,EAAGlB,EAAa,KACtD,CAACA,IAEF,MAAO,CAAEL,eAAcC,kBAAiBE,cAAaE,aAAYM,aAAYK,eAAcI,WAAUK,SAAQC,W,aChC/G,MAAMC,GAAYC,EAAAA,EAAAA,MAAK,IAAM,gCACvBC,GAAgBD,EAAAA,EAAAA,MAAK,IAAM,gCAEpBE,EAAYjC,IAAuC,IAAtC,UAAEkC,EAAS,MAAEC,EAAK,WAAEC,GAAYpC,EACxD,MAAQqC,IAAIC,EAAM,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,YAAEC,GAAgBN,GAChD,cAAEO,GAAkBH,GACpB,eAAEI,EAAc,UAAEC,GAAcJ,EAEhCK,GAAQrC,EAAAA,EAAAA,SAAQ,IAAmB,OAAbkC,QAAa,IAAbA,EAAAA,EAAiB,GAAI,CAACA,IAE5CI,EAAahD,EAAc,CAAEE,MAAO6C,EAAO5C,oBAAqB,KAGhEqB,GAAWC,EAAAA,EAAAA,aAAawB,GAASD,EAAWxB,SAASyB,GAAO,CAACD,IAC7DnB,GAASJ,EAAAA,EAAAA,aAAY,IAAMuB,EAAWnB,SAAU,CAACmB,IACjDlB,GAASL,EAAAA,EAAAA,aAAY,IAAMuB,EAAWlB,SAAU,CAACkB,IAIvD,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAoBC,UACrDC,EAAAA,EAAAA,KAACtB,EAAS,CAACI,UAAWA,EAAWC,MAAOA,EAAOI,KAAMA,EAAMD,OAAQA,EAAQrC,MAAO8C,EAAW5B,aAAcyB,eAAgBA,EAAgBC,UAAWA,EAAWH,YAAaA,OAEhLU,EAAAA,EAAAA,KAACpB,EAAa,CAAC1B,YAAayC,EAAWzC,YAAaE,WAAYuC,EAAWvC,WAAYe,SAAUA,EAAUK,OAAQA,EAAQC,OAAQA,QAK3I,G","sources":["components/pagination/usePagination.js","components/crud/QueryItem.js"],"sourcesContent":["import { useState, useMemo, useCallback } from \"react\";\r\n\r\nexport const usePagination = ({ array = [], initialItemsPerPage = 10 }) => {\r\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const totalPages = useMemo(() => Math.max(1, Math.ceil(array.length / itemsPerPage)), [array.length, itemsPerPage]);\r\n\r\n  const indexPages = useMemo(() => Array.from({ length: totalPages }, (_, i) => i), [totalPages]);\r\n\r\n  const currentItems = useMemo(() => {\r\n    const start = currentPage * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return array.slice(start, end);\r\n  }, [array, currentPage, itemsPerPage]);\r\n\r\n  // const goToPage = useCallback((pageIndex) => {\r\n  //   const safePage = Math.max(0, Math.min(pageIndex, totalPages - 1));\r\n  //   setCurrentPage(safePage);\r\n  // }, [totalPages]);\r\n\r\n  // const goPrev = useCallback(() => goToPage(currentPage - 1), [currentPage, goToPage]);\r\n  // const goNext = useCallback(() => goToPage(currentPage + 1), [currentPage, goToPage]);\r\n\r\n  const goToPage = useCallback((pageIndex) => {\r\n  setCurrentPage(prev => Math.max(0, Math.min(pageIndex, totalPages - 1)));\r\n}, [totalPages]);\r\n\r\nconst goPrev = useCallback(() => {\r\n  setCurrentPage(prev => Math.max(0, prev - 1));\r\n}, []);\r\n\r\nconst goNext = useCallback(() => {\r\n  setCurrentPage(prev => Math.min(prev + 1, totalPages - 1));\r\n}, [totalPages]);\r\n\r\n  return { itemsPerPage, setItemsPerPage, currentPage, totalPages, indexPages, currentItems, goToPage, goPrev, goNext };\r\n};\r\n\r\nexport default usePagination;","import { Suspense, lazy, useMemo, useCallback } from 'react';\r\nimport { usePagination } from '../pagination/usePagination.js';\r\n\r\n// const SearchItem = lazy(() => import('../search/SearchItem.js'));\r\nconst ItemsList = lazy(() => import('./items/ItemsList.js'));\r\nconst PaginationBar = lazy(() => import('../pagination/PaginationBar.js'));\r\n\r\nexport const QueryItem = ({ classType, Icons, objectHook }) => {\r\n  const { api:urlApi, keys, data, sort, handleItems } = objectHook;\r\n  const { arrayFiltered } = data;\r\n  const { SortByProperty, setSortBy } = sort;\r\n\r\n  const items = useMemo(() => arrayFiltered ?? [], [arrayFiltered]); // üëà Items memorizados para evitar re-creaci√≥n innecesaria\r\n\r\n  const pagination = usePagination({ array: items, initialItemsPerPage: 10 });  // üëà Hook de paginaci√≥n\r\n\r\n  // üëá Callbacks de paginaci√≥n memorizados para referencias estables\r\n  const goToPage = useCallback((page) => pagination.goToPage(page), [pagination]);\r\n  const goPrev = useCallback(() => pagination.goPrev(), [pagination]);\r\n  const goNext = useCallback(() => pagination.goNext(), [pagination]);\r\n\r\n  if (process.env.NODE_ENV === 'development') console.log('[Query Item üìç]');\r\n\r\n  return (\r\n      <div className=\"container-fluid mt-3 mt-sm-4 me-0 smooth w-100\">\r\n        <Suspense fallback={<div className=\"loaderSpin\"></div>}>\r\n          <ItemsList classType={classType} Icons={Icons} keys={keys} urlApi={urlApi} array={pagination.currentItems} SortByProperty={SortByProperty} setSortBy={setSortBy} handleItems={handleItems} />\r\n        </Suspense>\r\n        <PaginationBar currentPage={pagination.currentPage} totalPages={pagination.totalPages} goToPage={goToPage} goPrev={goPrev} goNext={goNext} />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default QueryItem;\r\n"],"names":["usePagination","_ref","array","initialItemsPerPage","itemsPerPage","setItemsPerPage","useState","currentPage","setCurrentPage","totalPages","useMemo","Math","max","ceil","length","indexPages","Array","from","_","i","currentItems","start","end","slice","goToPage","useCallback","pageIndex","prev","min","goPrev","goNext","ItemsList","lazy","PaginationBar","QueryItem","classType","Icons","objectHook","api","urlApi","keys","data","sort","handleItems","arrayFiltered","SortByProperty","setSortBy","items","pagination","page","_jsxs","className","children","_jsx","Suspense","fallback"],"sourceRoot":""}