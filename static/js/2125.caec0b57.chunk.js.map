{"version":3,"file":"static/js/2125.caec0b57.chunk.js","mappings":"8PAIA,MAEaA,EAAeC,IAAmB,IAAlB,SAAEC,GAAUD,EACvC,MAAME,GAAOC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,KAAKH,OACvC,SAAEI,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,MAK7B,OAFAC,aAAaC,QAAQ,WAAYJ,EAAWC,GAEjC,OAAJL,QAAI,IAAJA,GAAAA,EAAMS,OAASV,GAAWW,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,8CAGjD,GAAeC,EAAAA,EAAAA,MAAKhB,E","sources":["routers/PrivateRoute.js"],"sourcesContent":["import { memo } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst urlBaseFrontend = process.env.REACT_APP_URL_BASE_FRONTEND;\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n  const user = useSelector(state => state.auth.user);  // ðŸ‘ˆ Leer del store de Redux\r\n  const { pathname, search } = useLocation();\r\n\r\n  // ðŸ‘‡ Guardamos el Ãºltimo path en localStorage (opcional)\r\n  localStorage.setItem('lastPath', pathname + search);\r\n\r\n  return user?.logged ? children : <Navigate to={`/${urlBaseFrontend}`} />;\r\n};\r\n\r\nexport default memo(PrivateRoute);\r\n"],"names":["PrivateRoute","_ref","children","user","useSelector","state","auth","pathname","search","useLocation","localStorage","setItem","logged","_jsx","Navigate","to","memo"],"sourceRoot":""}