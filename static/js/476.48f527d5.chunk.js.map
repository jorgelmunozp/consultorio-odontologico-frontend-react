{"version":3,"file":"static/js/476.48f527d5.chunk.js","mappings":"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","sources":["classes/Alert.js","components/alert/Alert.js","hooks/useAlert.js","../node_modules/jwt-decode/build/esm/index.js","helpers/getData.js","hooks/useFetch.js","hooks/crud/useCita.js","components/selectors/getCitasFiltered.js","hooks/crud/usePaciente.js","components/selectors/getPacientesFiltered.js","hooks/crud/useDoctor.js","components/selectors/getDoctoresFiltered.js","hooks/crud/useEspecialidad.js","components/selectors/getEspecialidadesFiltered.js","hooks/crud/useConsultorio.js","components/selectors/getConsultoriosFiltered.js","hooks/crud/useTratamiento.js","components/selectors/getTratamientosFiltered.js","hooks/useCrudFactory.js"],"sourcesContent":["import { lazy } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nconst Modal = lazy(() => import('../components/modal/Modal.js'));\r\nconst Logo = lazy(() => import('../components/icons/logo/Logo.js'));\r\nconst Success = lazy(() => import('../components/icons/alert/Success.js'));\r\nconst Warning = lazy(() => import('../components/icons/alert/Warning.js'));\r\nconst Error = lazy(() => import('../components/icons/alert/Error.js'));\r\n\r\nexport class Alert {\r\n    constructor({ type='default',title='', message='', buttons='' }) {\r\n        this.type = {type}.type;\r\n        this.title = {title}.title;\r\n        this.message = {message}.message;\r\n        this.buttons = {buttons}.buttons;\r\n    }\r\n   \r\n    launch = () => {       \r\n        const icons = {\r\n            default: { Icon:Logo, iconColor:'#5285c5' },\r\n            success: { Icon:Success, iconColor:'#0f0' },\r\n            warning: { Icon:Warning, iconColor:'#f8bb86' },\r\n            error: { Icon:Error, iconColor:'#f00' }\r\n        }\r\n\r\n        if( !document.getElementById('modal') ) { document.getElementById('root').insertAdjacentHTML('afterend',`<div id=\"modal\"></div>`); } // Create element Alert in the body if there's no one\r\n\r\n        const root = createRoot( document.getElementById('modal') );\r\n        root.render( <Modal Icon={icons[this.type].Icon} iconColor={icons[this.type].iconColor} title={this.title} fontFamily={'century-gothic'} /> );\r\n    }\r\n}","import { Alert as AlertClass } from '../../classes/Alert.js';\r\n\r\nexport const Alert = ({ type, title, message, buttons }) => {\r\n    return ( new AlertClass({ type:type, title:title, message:message, buttons:buttons }) )\r\n}\r\n","// import { Suspense, lazy, useState, useCallback, useRef } from \"react\";\r\n// import { createRoot } from \"react-dom/client\";\r\n\r\n// const Modal = lazy(() => import(\"../components/modal/Modal.js\"));\r\n// const Logo = lazy(() => import(\"../components/icons/logo/Logo.js\"));\r\n// const Success = lazy(() => import(\"../components/icons/alert/Success.js\"));\r\n// const Warning = lazy(() => import(\"../components/icons/alert/Warning.js\"));\r\n// const ErrorIcon = lazy(() => import(\"../components/icons/alert/Error.js\"));\r\n\r\n// export const useAlert = () => {\r\n//   const [alertConfig, setAlertConfig] = useState(null);\r\n//   const rootRef = useRef(null); // <- Guardamos el root para reutilizarlo\r\n\r\n//   const alert = useCallback(\r\n//     ({ type=\"default\", title=\"\", content=\"\", buttons=\"\", theme }) => {\r\n//       const icons = {\r\n//         default: { Icon: Logo, iconColor: \"#5285c5\" },\r\n//         success: { Icon: Success, iconColor: \"#0f0\" },\r\n//         warning: { Icon: Warning, iconColor: \"#f8bb86\" },\r\n//         error: { Icon: ErrorIcon, iconColor: \"#f00\" },\r\n//       };\r\n\r\n//       if (!document.getElementById(\"modal\")) {\r\n//         document\r\n//           .getElementById(\"root\")\r\n//           .insertAdjacentHTML(\"afterend\", `<div id=\"modal\"></div>`);\r\n//       }\r\n\r\n//       setAlertConfig({ title, content, buttons, theme, Icon: icons[type].Icon, iconColor: icons[type].iconColor, });\r\n\r\n//       const root = createRoot(document.getElementById(\"modal\"));\r\n//       root.render(\r\n//         <Suspense fallback={null}><Modal Icon={icons[type].Icon} iconColor={icons[type].iconColor} title={title} content={content} buttons={buttons} fontFamily={\"century-gothic\"} theme={theme} /></Suspense>\r\n//       );\r\n//     },\r\n//     []\r\n//   );\r\n\r\n//   return { alert, alertConfig };\r\n// }\r\n\r\n// ******************************************************************\r\nimport { Suspense, lazy, useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nconst Modal = lazy(() => import(\"../components/modal/Modal.js\"));\r\nconst Logo = lazy(() => import(\"../components/icons/logo/Logo.js\"));\r\nconst Success = lazy(() => import(\"../components/icons/alert/Success.js\"));\r\nconst Warning = lazy(() => import(\"../components/icons/alert/Warning.js\"));\r\nconst ErrorIcon = lazy(() => import(\"../components/icons/alert/Error.js\"));\r\n\r\nexport const useAlert = () => {\r\n  const [alertConfig, setAlertConfig] = useState(null);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const rootRef = useRef(null);\r\n\r\n  // Renderiza el modal cada vez que cambie openAlert o alertConfig\r\n  useEffect(() => {\r\n    if (!alertConfig) return;\r\n\r\n    let modalContainer = document.getElementById(\"modal\");\r\n    if (!modalContainer) {\r\n      document\r\n        .getElementById(\"root\")\r\n        .insertAdjacentHTML(\"afterend\", `<div id=\"modal\"></div>`);\r\n      modalContainer = document.getElementById(\"modal\");\r\n    }\r\n\r\n    if (!rootRef.current) {\r\n      rootRef.current = createRoot(modalContainer);\r\n    }\r\n\r\n    rootRef.current.render(\r\n      <Suspense fallback={null}>\r\n        <Modal Icon={alertConfig.Icon} iconColor={alertConfig.iconColor} open={openAlert} setOpen={setOpenAlert} title={alertConfig.title} content={alertConfig.content} buttons={alertConfig.buttons} fontFamily={\"century-gothic\"} theme={alertConfig.theme} />\r\n      </Suspense>\r\n    );\r\n  }, [openAlert, alertConfig]); // 👈 ahora se re-renderiza siempre que cambie algo\r\n\r\n  const alert = useCallback(\r\n    ({ type = \"default\", title = \"\", content = \"\", buttons = \"\", theme }) => {\r\n      const icons = {\r\n        default: { Icon: Logo, iconColor: \"#5285c5\" },\r\n        success: { Icon: Success, iconColor: \"#0f0\" },\r\n        warning: { Icon: Warning, iconColor: \"#f8bb86\" },\r\n        error: { Icon: ErrorIcon, iconColor: \"#f00\" },\r\n      };\r\n\r\n      setAlertConfig({ Icon: icons[type].Icon, iconColor: icons[type].iconColor, title, content, buttons, theme, });\r\n\r\n      setOpenAlert(true); // 🔑 abrir modal aquí\r\n    }, []);\r\n\r\n  const closeAlert = useCallback(() => setOpenAlert(false), []);\r\n\r\n  return { alert, closeAlert, openAlert, setOpenAlert };\r\n};","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","export const getData = async( urlApi ) => {\r\n    let responseFetch = { data: {}, status: 0 };\r\n    await fetch( urlApi )\r\n        .then(response => { responseFetch.status = response.status; return response.json() })\r\n        .then(data => responseFetch.data = data)\r\n        .catch((error) =>{\r\n            if(error.message === 'Failed to fetch') { responseFetch.status = 500 }\r\n        });\r\n    \r\n    return responseFetch;\r\n}","\r\nimport { useState, useEffect } from 'react';\r\nimport { getData } from '../helpers/getData.js';\r\n\r\nexport const useFetch = ( urlApi ) => {\r\n    const [responseFetch, setResponseFetch] = useState({ data: [], status: 0 });\r\n    useEffect( () => { \r\n        getData( urlApi )\r\n            .then( datos => setResponseFetch({ data: datos.data, status: datos.status }) ) \r\n            .catch((error) => console.log(\"Error useFetch: \" + error.message));\r\n    }, []);\r\n\r\n    return responseFetch;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport { Alert } from '../../components/alert/Alert.js';\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getDate } from '../../helpers/getDate.js';\r\nimport { getTime } from '../../helpers/getTime.js';\r\nimport { getCitasFiltered } from '../../components/selectors/getCitasFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_CITAS;\r\n\r\nexport const useCita = ({ initialValues={ paciente:'', consultorio:'', doctor:'', tratamiento:'' } }) => {\r\n  // --- State ---\r\n  const [paciente, setPaciente] = useState(initialValues.paciente || '');\r\n  const [fecha, setFecha] = useState(getDate[2] + \"-\" + getDate[1] + \"-\" + getDate[0]);\r\n  const [hora, setHora] = useState(getTime);\r\n  const [consultorio, setConsultorio] = useState(initialValues.consultorio || '');\r\n  const [doctor, setDoctor] = useState(initialValues.doctor || '');\r\n  const [tratamiento, setTratamiento] = useState(initialValues.tratamiento || '');\r\n\r\n  const state = [\r\n    { key:'paciente', value:paciente, type:\"dropdown\", handleChange: (value) => setPaciente(decode(value)) },\r\n    { key:'fecha', value:fecha, type:\"date\", handleChange: (value) => setFecha(decode(value)) },\r\n    { key:'hora', value:hora, type:\"time\", handleChange: (value) => setHora(decode(value)) },\r\n    { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange: (value) => setConsultorio(decode(value)) },\r\n    { key:'doctor', value:doctor, type:\"dropdown\", handleChange: (value) => setDoctor(decode(value)) },\r\n    { key:'tratamiento', value:tratamiento, type:\"dropdown\", handleChange: (value) => setTratamiento(decode(value)) }\r\n  ];\r\n\r\n  // --- Object ---\r\n  const dataObject = { paciente:'', fecha:'', hora:'', consultorio:'', doctor:'', tratamiento:'' }\r\n\r\n  // --- Titles ---\r\n  const titles = state.map(param => ({\r\n    title: param.key.charAt(0).toUpperCase() + param.key.slice(1),\r\n    type: param.type\r\n  }));\r\n  const placeholders = titles.map(item => item.title);\r\n\r\n  // --- Data (fetch + queries + pagination) ---\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch();\r\n    }\r\n  }, [arrayFetch]);\r\n\r\n  const array = useMemo(() => {\r\n    return (arrayFetch.data && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : []\r\n  }, [arrayFetch.data]);\r\n\r\n  // Queries\r\n  const [queryCode, setQueryCode] = useState('');\r\n  const [queryPatient, setQueryPatient] = useState('');\r\n  const [queryDate, setQueryDate] = useState('');\r\n  const [queryTime, setQueryTime] = useState('');\r\n  const [queryConsultoryRoom, setQueryConsultoryRoom] = useState('');\r\n  const [queryDoctor, setQueryDoctor] = useState('');\r\n  const [queryTreatment, setQueryTreatment] = useState('');\r\n\r\n  const queries = [queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment];\r\n  const setQueries = [setQueryCode, setQueryPatient, setQueryDate, setQueryTime, setQueryConsultoryRoom, setQueryDoctor, setQueryTreatment];\r\n\r\n  const arrayFiltered = useMemo(() =>\r\n    getCitasFiltered(array, queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment),\r\n    [array, queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment]\r\n  );\r\n\r\n  // Pagination\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [indexPage, setIndexPage] = useState([0, 10]);\r\n\r\n  const numPages = Math.floor(arrayFiltered.length/itemsPerPage);\r\n  const resPages = arrayFiltered.length % itemsPerPage;\r\n\r\n  let indexPages = [];\r\n  let activePage = [true];\r\n  if(resPages !== 0) {\r\n    for(let i = 0; i <= numPages; i++) {\r\n      indexPages.push(i);\r\n      if(i < 0) activePage.push(false);\r\n    }\r\n  } else {\r\n    for(let i = 0; i < numPages; i++) {\r\n      indexPages.push(i);\r\n      if(i < 0) activePage.push(false);\r\n    }\r\n  }\r\n  const [activePages, setActivePages] = useState(activePage);\r\n\r\n  // --- Sort ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n  let SortByProperty = () => {};\r\n  switch (sortBy) {\r\n    case 1: SortByProperty = (a,b) => a.id - b.id; break;\r\n    case 2: SortByProperty = (a,b) => b.id - a.id; break;\r\n    case 3: SortByProperty = (a,b) => a.cita.paciente.localeCompare(b.cita.paciente); break;\r\n    case 4: SortByProperty = (a,b) => b.cita.paciente.localeCompare(a.cita.paciente); break;\r\n    default: break;     \r\n  }\r\n\r\n  return {\r\n    api: urlApi,\r\n    dataObject,\r\n    titles,\r\n    placeholders,\r\n    state,\r\n    data: { queries, setQueries, arrayFiltered, indexPage, itemsPerPage, activePages, indexPages, setIndexPage, setActivePages },\r\n    sort: { SortByProperty, setSortBy }\r\n  };\r\n}\r\n\r\nexport default useCita;","export const getCitasFiltered = ( array=[],code='',patient='',date='',time='',consultoryRoom='',doctor='',treatment='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.cita.paciente.toLowerCase().includes(patient.toLowerCase()) && item.cita.fecha.toLowerCase().includes(date.toLowerCase()) && item.cita.hora.toLowerCase().includes(time.toLowerCase()) && item.cita.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase())  && item.cita.doctor.toLowerCase().includes(doctor.toLowerCase()) && item.cita.tratamiento.toLowerCase().includes(treatment.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport { Alert } from \"../../components/alert/Alert.js\";\r\nimport { useFetch } from \"../useFetch.js\";\r\nimport { getPacientesFiltered } from \"../../components/selectors/getPacientesFiltered.js\";\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_PACIENTES;\r\n\r\nexport const usePaciente = ({ initialValues={ nombre:'', apellido:'', identificacion:'', genero:'', eps:'' } }) => {\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n  const [apellido, setApellido] = useState(initialValues.apellido || '');\r\n  const [identificacion, setIdentificacion] = useState(initialValues.identificacion || '');\r\n  const [genero, setGenero] = useState(initialValues.genero || '');\r\n  const [eps, setEps] = useState(initialValues.eps || '');\r\n\r\n  const state = [\r\n    { key: \"nombre\", value: nombre, type: \"text\", handleChange: (v) => setNombre(decode(v)) },\r\n    { key: \"apellido\", value: apellido, type: \"text\", handleChange: (v) => setApellido(decode(v)) },\r\n    { key: \"identificacion\", value: identificacion, type: \"number\", handleChange: (v) => setIdentificacion(decode(v)) },\r\n    { key: \"genero\", value: genero, type: \"dropdown\", handleChange: (v) => setGenero(decode(v)) },\r\n    { key: \"eps\", value: eps, type: \"dropdown\", handleChange: (v) => setEps(decode(v)) },\r\n  ];\r\n  // --- Object ---\r\n  const dataObject = { nombre:'', apellido:'', identificacion:'', genero:'', eps:'' }\r\n  \r\n  // --- Titles ---\r\n  const titles = state.map((parameter) => ({\r\n    title: parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1),\r\n    type: parameter.type,\r\n  }));\r\n  const placeholders = titles.map((item) => item.title);\r\n\r\n  // --- Data (fetch + queries + pagination) ---\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      Alert({ type: \"error\", title: \"Error en la conexión con la base de datos\" }).launch();\r\n    }\r\n  }, [arrayFetch]);\r\n\r\n  const array = useMemo(() => {\r\n    return (arrayFetch.data && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [];\r\n  }, [arrayFetch.data]);\r\n\r\n  // Queries\r\n  const [queryCode, setQueryCode] = useState(\"\");\r\n  const [queryName, setQueryName] = useState(\"\");\r\n  const [queryLastname, setQueryLastname] = useState(\"\");\r\n  const [queryIdentification, setQueryIdentification] = useState(\"\");\r\n  const [queryGender, setQueryGender] = useState(\"\");\r\n  const [queryEps, setQueryEps] = useState(\"\");\r\n\r\n  const queries = [queryCode, queryIdentification, queryName, queryLastname, queryGender, queryEps];\r\n  const setQueries = [setQueryCode, setQueryIdentification, setQueryName, setQueryLastname, setQueryGender, setQueryEps];\r\n\r\n  const arrayFiltered = useMemo(() =>\r\n    getPacientesFiltered(array, queryCode, queryIdentification, queryName, queryLastname, queryGender, queryEps),\r\n    [array, queryCode, queryIdentification, queryName, queryLastname, queryGender, queryEps]\r\n  );\r\n\r\n  // Pagination\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [indexPage, setIndexPage] = useState([0, itemsPerPage]);\r\n  const numPages = Math.floor(arrayFiltered.length / itemsPerPage);\r\n  const resPages = arrayFiltered.length % itemsPerPage;\r\n\r\n  let indexPages = [];\r\n  let activePage = [true];\r\n  if (resPages !== 0) {\r\n    for (let i = 0; i <= numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  }\r\n  const [activePages, setActivePages] = useState(activePage);\r\n\r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n  let SortByProperty = () => {};\r\n\r\n  switch (sortBy) {\r\n    case 1: SortByProperty = (a, b) => a.id - b.id; break;\r\n    case 2: SortByProperty = (a, b) => b.id - a.id; break;\r\n    case 3: SortByProperty = (a, b) => a.paciente.identificacion.localeCompare(b.paciente.identificacion); break;\r\n    case 4: SortByProperty = (a, b) => b.paciente.identificacion.localeCompare(a.paciente.identificacion); break;\r\n    case 5: SortByProperty = (a, b) => a.paciente.nombre.localeCompare(b.paciente.nombre); break;\r\n    case 6: SortByProperty = (a, b) => b.paciente.nombre.localeCompare(a.paciente.nombre); break;\r\n    case 7: SortByProperty = (a, b) => a.paciente.apellido.localeCompare(b.paciente.apellido); break;\r\n    case 8: SortByProperty = (a, b) => b.paciente.apellido.localeCompare(a.paciente.apellido); break;\r\n    case 9: SortByProperty = (a, b) => a.paciente.genero.localeCompare(b.paciente.genero); break;\r\n    case 10: SortByProperty = (a, b) => b.paciente.genero.localeCompare(a.paciente.genero); break;\r\n    case 11: SortByProperty = (a, b) => a.paciente.eps.localeCompare(b.paciente.eps); break;\r\n    case 12: SortByProperty = (a, b) => b.paciente.eps.localeCompare(a.paciente.eps); break;\r\n    default: break;\r\n  }\r\n\r\n  /** ---------- RETURN ---------- */\r\n  return {\r\n    api: urlApi,\r\n    dataObject,\r\n    titles,\r\n    placeholders,\r\n    state,\r\n    data: { queries, setQueries, arrayFiltered, indexPage, itemsPerPage, activePages, indexPages, setIndexPage, setActivePages },\r\n    sort: { SortByProperty, setSortBy },\r\n  };\r\n};\r\nexport default usePaciente;","export const getPacientesFiltered = ( array=[],code='',identification='',name='',lastname='',gender='',eps='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.paciente.identificacion.toLowerCase().includes(identification.toLowerCase()) && item.paciente.nombre.toLowerCase().includes(name.toLowerCase()) && item.paciente.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.paciente.genero.toLowerCase().includes(gender.toLowerCase()) && item.paciente.eps.toLowerCase().includes(eps.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport { Alert } from \"../../components/alert/Alert.js\";\r\nimport { useFetch } from \"../useFetch.js\";\r\nimport { getDoctoresFiltered } from \"../../components/selectors/getDoctoresFiltered.js\";\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_DOCTORES;\r\n\r\nexport const useDoctor = ({ initialValues={ nombre:'', apellido:'', identificacion:'', genero:'', especialidad:'' } }) => {\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n  const [apellido, setApellido] = useState(initialValues.apellido || '');\r\n  const [identificacion, setIdentificacion] = useState(initialValues.identificacion || '');\r\n  const [genero, setGenero] = useState(initialValues.genero || '');\r\n  const [especialidad, setEspecialidad] = useState(initialValues.especialidad || '');\r\n\r\n  const state = [\r\n    { key: \"nombre\", value: nombre, type: \"text\", handleChange: (v) => setNombre(decode(v)) },\r\n    { key: \"apellido\", value: apellido, type: \"text\", handleChange: (v) => setApellido(decode(v)) },\r\n    { key: \"identificacion\", value: identificacion, type: \"number\", handleChange: (v) => setIdentificacion(decode(v)) },\r\n    { key: \"genero\", value: genero, type: \"dropdown\", handleChange: (v) => setGenero(decode(v)) },\r\n    { key: \"especialidad\", value: especialidad, type: \"dropdown\", handleChange: (v) => setEspecialidad(decode(v)) },\r\n  ];\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'', apellido:'', identificacion:'', genero:'', especialidad:'' }\r\n\r\n   // --- Titles ---\r\n  const titles = state.map((parameter) => ({\r\n    title: parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1),\r\n    type: parameter.type,\r\n  }));\r\n  const placeholders = titles.map((item) => item.title);\r\n\r\n  // --- Data (fetch + queries + pagination) ---\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      Alert({ type: \"error\", title: \"Error en la conexión con la base de datos\" }).launch();\r\n    }\r\n  }, [arrayFetch]);\r\n\r\n  const array = useMemo(() => {\r\n    return (arrayFetch.data && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : []\r\n  }, [arrayFetch.data]);\r\n\r\n  // queries\r\n  const [queryCode, setQueryCode] = useState(\"\");\r\n  const [queryName, setQueryName] = useState(\"\");\r\n  const [queryLastname, setQueryLastname] = useState(\"\");\r\n  const [querySpeciality, setQuerySpeciality] = useState(\"\");\r\n\r\n  const queries = [queryCode, queryName, queryLastname, querySpeciality];\r\n  const setQueries = [setQueryCode, setQueryName, setQueryLastname, setQuerySpeciality];\r\n\r\n  const arrayFiltered = useMemo(\r\n    () => getDoctoresFiltered(array, queryCode, queryName, queryLastname, querySpeciality),\r\n    [array, queryCode, queryName, queryLastname, querySpeciality]\r\n  );\r\n\r\n  // pagination\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [indexPage, setIndexPage] = useState([0, itemsPerPage]);\r\n  const numPages = Math.floor(arrayFiltered.length / itemsPerPage);\r\n  const resPages = arrayFiltered.length % itemsPerPage;\r\n\r\n  let indexPages = [];\r\n  let activePage = [true];\r\n  if (resPages !== 0) {\r\n    for (let i = 0; i <= numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  } else if (resPages === 0) {\r\n    for (let i = 0; i < numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  }\r\n  const [activePages, setActivePages] = useState(activePage);\r\n\r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n  let SortByProperty = () => {};\r\n\r\n  switch (sortBy) {\r\n    case 1: SortByProperty = (a, b) => a.id - b.id; break;\r\n    case 2: SortByProperty = (a, b) => b.id - a.id; break;\r\n    case 3: SortByProperty = (a, b) => a.doctor.nombre.localeCompare(b.doctor.nombre); break;\r\n    case 4: SortByProperty = (a, b) => b.doctor.nombre.localeCompare(a.doctor.nombre); break;\r\n    case 5: SortByProperty = (a, b) => a.doctor.apellido.localeCompare(b.doctor.apellido); break;\r\n    case 6: SortByProperty = (a, b) => b.doctor.apellido.localeCompare(a.doctor.apellido); break;\r\n    case 7: SortByProperty = (a, b) => a.doctor.identificacion.localeCompare(b.doctor.identificacion); break;\r\n    case 8: SortByProperty = (a, b) => b.doctor.identificacion.localeCompare(a.doctor.identificacion); break;\r\n    case 9: SortByProperty = (a, b) => a.doctor.genero.localeCompare(b.doctor.genero); break;\r\n    case 10: SortByProperty = (a, b) => b.doctor.genero.localeCompare(a.doctor.genero); break;\r\n    case 11: SortByProperty = (a, b) => a.doctor.especialidad.localeCompare(b.doctor.especialidad); break;\r\n    case 12: SortByProperty = (a, b) => b.doctor.especialidad.localeCompare(a.doctor.especialidad); break;\r\n    default: break;\r\n  }\r\n\r\n  /** ---------- RETURN ---------- */\r\n  return {\r\n    api: urlApi,\r\n    dataObject,\r\n    titles,\r\n    placeholders,\r\n    state,\r\n    data: { queries, setQueries, arrayFiltered, indexPage, itemsPerPage, activePages, indexPages, setIndexPage, setActivePages },\r\n    sort: { SortByProperty, setSortBy },\r\n  };\r\n};\r\nexport default useDoctor;","export const getDoctoresFiltered = ( array=[],code='',name='',lastname='',speciality='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.doctor.nombre.toLowerCase().includes(name.toLowerCase()) && item.doctor.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.doctor.especialidad.toLowerCase().includes(speciality.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport { Alert } from '../../components/alert/Alert.js';\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getEspecialidadesFiltered } from '../../components/selectors/getEspecialidadesFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_ESPECIALIDADES;\r\n\r\nexport const useEspecialidad = (initialValues={ nombre:'' }) => {\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n\r\n  const state = [\r\n    { key: 'nombre', value: nombre, type: 'text', handleChange: (value) => setNombre(decode(value)) }\r\n  ];\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'' }\r\n\r\n  // --- Titles ---\r\n  const titles = state.map(param => ({\r\n    title: param.key.charAt(0).toUpperCase() + param.key.slice(1),\r\n    type: param.type\r\n  }));\r\n  const placeholders = titles.map(item => item.title);\r\n\r\n  // --- Data (fetch + queries + pagination) ---\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      Alert({ type: 'error', title: 'Error en la conexión con la base de datos' }).launch();\r\n    }\r\n  }, [arrayFetch]);\r\n\r\n  const array = useMemo(() => {\r\n   return ( arrayFetch.data && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : []\r\n  }, [arrayFetch.data]);\r\n\r\n  // Queries\r\n  const [queryCode, setQueryCode] = useState('');\r\n  const [queryName, setQueryName] = useState('');\r\n\r\n  const queries = [queryCode, queryName];\r\n  const setQueries = [setQueryCode, setQueryName];\r\n\r\n  const arrayFiltered = useMemo(() =>\r\n    getEspecialidadesFiltered(array, queryCode, queryName),\r\n    [array, queryCode, queryName]\r\n  );\r\n\r\n  // Pagination\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [indexPage, setIndexPage] = useState([0, 10]);\r\n\r\n  const numPages = Math.floor(arrayFiltered.length / itemsPerPage);\r\n  const resPages = arrayFiltered.length % itemsPerPage;\r\n\r\n  let indexPages = [];\r\n  let activePage = [true];\r\n  if (resPages !== 0) {\r\n    for (let i = 0; i <= numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  }\r\n  const [activePages, setActivePages] = useState(activePage);\r\n\r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n  let SortByProperty = () => {};\r\n  switch (sortBy) {\r\n    case 1: SortByProperty = (a, b) => a.id - b.id; break;\r\n    case 2: SortByProperty = (a, b) => b.id - a.id; break;\r\n    case 3: SortByProperty = (a, b) => a.especialidad.nombre.localeCompare(b.especialidad.nombre); break;\r\n    case 4: SortByProperty = (a, b) => b.especialidad.nombre.localeCompare(a.especialidad.nombre); break;\r\n    default: break;\r\n  }\r\n\r\n  return {\r\n    api: urlApi,\r\n    dataObject,\r\n    titles,\r\n    placeholders,\r\n    state,\r\n    data: { queries, setQueries, arrayFiltered, indexPage, itemsPerPage, activePages, indexPages, setIndexPage, setActivePages },\r\n    sort: { SortByProperty, setSortBy }\r\n  };\r\n}\r\nexport default useEspecialidad;","export const getEspecialidadesFiltered = ( array=[],code='',name='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.especialidad.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport { Alert } from '../../components/alert/Alert.js';\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getConsultoriosFiltered } from '../../components/selectors/getConsultoriosFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_CONSULTORIOS;\r\n\r\nexport const useConsultorio = ({ initialValues={ numero:'', nombre:'' } }) => {\r\n  // --- State ---\r\n  const [numero, setNumero] = useState(initialValues.numero || '');\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n\r\n  const state = [\r\n    { key: 'numero', value: numero, type: 'number', handleChange: (value) => setNumero(decode(value)) },\r\n    { key: 'nombre', value: nombre, type: 'text', handleChange: (value) => setNombre(decode(value)) }\r\n  ];\r\n\r\n  // --- Object ---\r\n  const dataObject = { numero:'', nombre:'' }\r\n\r\n  // --- Titles ---\r\n  const titles = state.map(param => ({\r\n    title: param.key.charAt(0).toUpperCase() + param.key.slice(1),\r\n    type: param.type\r\n  }));\r\n  const placeholders = titles.map(item => item.title);\r\n\r\n  // --- Data (fetch + queries + pagination) ---\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      Alert({ type: 'error', title: 'Error en la conexión con la base de datos' }).launch();\r\n    }\r\n  }, [arrayFetch]);\r\n\r\n  const array = useMemo(() => {\r\n    return (arrayFetch.data && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : []\r\n  }, [arrayFetch.data]);\r\n\r\n  // Queries\r\n  const [queryCode, setQueryCode] = useState('');\r\n  const [queryNumber, setQueryNumber] = useState('');\r\n  const [queryName, setQueryName] = useState('');\r\n\r\n  const queries = [queryCode, queryNumber, queryName];\r\n  const setQueries = [setQueryCode, setQueryNumber, setQueryName];\r\n\r\n  const arrayFiltered = useMemo(() =>\r\n    getConsultoriosFiltered(array, queryCode, queryNumber, queryName),\r\n    [array, queryCode, queryNumber, queryName]\r\n  );\r\n\r\n  // Pagination\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [indexPage, setIndexPage] = useState([0, 10]);\r\n\r\n  const numPages = Math.floor(arrayFiltered.length / itemsPerPage);\r\n  const resPages = arrayFiltered.length % itemsPerPage;\r\n\r\n  let indexPages = [];\r\n  let activePage = [true];\r\n  if (resPages !== 0) {\r\n    for (let i = 0; i <= numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  }\r\n  const [activePages, setActivePages] = useState(activePage);\r\n\r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n  let SortByProperty = () => {};\r\n  switch (sortBy) {\r\n    case 1: SortByProperty = (a, b) => a.id - b.id; break;\r\n    case 2: SortByProperty = (a, b) => b.id - a.id; break;\r\n    case 3: SortByProperty = (a, b) => a.consultorio.numero - b.consultorio.numero; break;\r\n    case 4: SortByProperty = (a, b) => b.consultorio.numero - a.consultorio.numero; break;\r\n    case 5: SortByProperty = (a, b) => a.consultorio.nombre.localeCompare(b.consultorio.nombre); break;\r\n    case 6: SortByProperty = (a, b) => b.consultorio.nombre.localeCompare(a.consultorio.nombre); break;\r\n    default: break;\r\n  }\r\n\r\n  return {\r\n    api: urlApi,\r\n    dataObject,\r\n    titles,\r\n    placeholders,\r\n    state,\r\n    data: { queries, setQueries, arrayFiltered, indexPage, itemsPerPage, activePages, indexPages, setIndexPage, setActivePages },\r\n    sort: { SortByProperty, setSortBy }\r\n  };\r\n}\r\nexport default useConsultorio;","export const getConsultoriosFiltered = ( array=[],code='',number='',name='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.consultorio.numero.toString().includes(number) && item.consultorio.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport { Alert } from '../../components/alert/Alert.js';\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getTratamientosFiltered } from '../../components/selectors/getTratamientosFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_TRATAMIENTOS;\r\n\r\nexport const useTratamiento = ({ initialValues={ especialidad:'', consultorio:'', doctor:'' } }) => {\r\n  // --- State ---\r\n  const [especialidad, setEspecialidad] = useState(initialValues.especialidad || '');\r\n  const [consultorio, setConsultorio] = useState(initialValues.consultorio || '');\r\n  const [doctor, setDoctor] = useState(initialValues.doctor || '');\r\n\r\n  const state = [\r\n    { key: 'especialidad', value: especialidad, type: \"dropdown\", handleChange: (value) => setEspecialidad(decode(value)), },\r\n    { key: 'consultorio', value: consultorio, type: \"dropdown\", handleChange: (value) => setConsultorio(decode(value)), },\r\n    { key: 'doctor', value: doctor, type: \"dropdown\", handleChange: (value) => setDoctor(decode(value)), },\r\n  ];\r\n\r\n  // --- Object ---\r\n  const dataObject = { especialidad:'', consultorio:'', doctor:'' }\r\n\r\n  // --- Titles ---\r\n  const titles = state.map((parameter) => ({\r\n    title: parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1),\r\n    type: parameter.type,\r\n  }));\r\n  const placeholders = titles.map((item) => item.title);\r\n\r\n  // --- Data (fetch + queries + pagination) ---\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      Alert({ type: 'error', title: 'Error en la conexión con la base de datos', }).launch();\r\n    }\r\n  }, [arrayFetch]);\r\n\r\n  const array = useMemo(() => {\r\n    return (arrayFetch.data && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [];\r\n  }, [arrayFetch.data]);\r\n\r\n  // Queries\r\n  const [queryCode, setQueryCode] = useState('');\r\n  const [querySpecialty, setQuerySpecialty] = useState('');\r\n  const [queryConsultoryRoom, setQueryConsultoryRoom] = useState('');\r\n  const [queryDoctor, setQueryDoctor] = useState('');\r\n  const queries = [queryCode, querySpecialty, queryConsultoryRoom, queryDoctor];\r\n  const setQueries = [\r\n    setQueryCode,\r\n    setQuerySpecialty,\r\n    setQueryConsultoryRoom,\r\n    setQueryDoctor,\r\n  ];\r\n\r\n  const arrayFiltered = useMemo(() =>\r\n    getTratamientosFiltered(array, queryCode, querySpecialty, queryConsultoryRoom, queryDoctor),\r\n    [array, queryCode, querySpecialty, queryConsultoryRoom, queryDoctor]\r\n  );\r\n\r\n  // Pagination\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [indexPage, setIndexPage] = useState([0, itemsPerPage]);\r\n  const numPages = Math.floor(arrayFiltered.length / itemsPerPage);\r\n  const resPages = arrayFiltered.length % itemsPerPage;\r\n\r\n  let indexPages = [];\r\n  let activePage = [true];\r\n  if (resPages !== 0) {\r\n    for (let i = 0; i <= numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  } else if (resPages === 0) {\r\n    for (let i = 0; i < numPages; i++) {\r\n      indexPages.push(i);\r\n      if (i < 0) activePage.push(false);\r\n    }\r\n  }\r\n  const [activePages, setActivePages] = useState(activePage);\r\n\r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n  let SortByProperty = () => {};\r\n  switch (sortBy) {\r\n    case 1: SortByProperty = (a, b) => a.id - b.id; break;\r\n    case 2: SortByProperty = (a, b) => b.id - a.id; break;\r\n    case 3: SortByProperty = (a, b) => a.tratamiento.especialidad.localeCompare(b.tratamiento.especialidad); break;\r\n    case 4: SortByProperty = (a, b) => b.tratamiento.especialidad.localeCompare(a.tratamiento.especialidad);  break;\r\n    case 5: SortByProperty = (a, b) => a.tratamiento.consultorio.localeCompare(b.tratamiento.consultorio); break;\r\n    case 6: SortByProperty = (a, b) => b.tratamiento.consultorio.localeCompare(a.tratamiento.consultorio); break;\r\n    case 7: SortByProperty = (a, b) => a.tratamiento.doctor.localeCompare(b.tratamiento.doctor); break;\r\n    case 8: SortByProperty = (a, b) => b.tratamiento.doctor.localeCompare(a.tratamiento.doctor); break;\r\n    default: break;\r\n  }\r\n\r\n  /** ---------- RETURN ---------- */\r\n  return {\r\n    api: urlApi,\r\n    dataObject,\r\n    titles,\r\n    placeholders,\r\n    state,\r\n    data: { queries, setQueries, arrayFiltered, indexPage, itemsPerPage, activePages, indexPages, setIndexPage, setActivePages },\r\n    sort: { SortByProperty, setSortBy },\r\n  };\r\n};\r\nexport default useTratamiento;","export const getTratamientosFiltered = ( array=[],code='',specialty='',consultoryRoom='',doctor='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.tratamiento.especialidad.toLowerCase().includes(specialty.toLowerCase()) && item.tratamiento.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase()) && item.tratamiento.doctor.toLowerCase().includes(doctor.toLowerCase()) );\r\n}","import { useCita } from './crud/useCita.js';\r\nimport { usePaciente } from './crud/usePaciente.js';\r\nimport { useDoctor } from './crud/useDoctor.js';\r\nimport { useEspecialidad } from './crud/useEspecialidad.js';\r\nimport { useConsultorio } from './crud/useConsultorio.js';\r\nimport { useTratamiento } from './crud/useTratamiento.js';\r\n\r\nexport const useCrudFactory = ({ classType, initialValues={} }) => {\r\n  const hookCita = useCita({ initialValues:initialValues });\r\n  const hookPaciente = usePaciente({ initialValues:initialValues });\r\n  const hookDoctor = useDoctor({ initialValues:initialValues });\r\n  const hookConsultorio = useConsultorio({ initialValues:initialValues });\r\n  const hookTratamiento = useTratamiento({ initialValues:initialValues });\r\n  const hookEspecialidad = useEspecialidad({ initialValues:initialValues });\r\n\r\n  switch (classType) {\r\n    case 'cita': return hookCita;\r\n    case 'paciente': return hookPaciente;\r\n    case 'doctor': return hookDoctor;\r\n    case 'consultorio': return hookConsultorio;\r\n    case 'tratamiento': return hookTratamiento;\r\n    case 'especialidad': return hookEspecialidad;\r\n    default: throw new Error(`Hook no definido para classType: ${classType}`);\r\n  }\r\n}\r\nexport default useCrudFactory;"],"names":["Modal","lazy","Logo","Success","Warning","Error","Alert","constructor","_ref","type","title","message","buttons","launch","icons","default","Icon","iconColor","success","warning","error","document","getElementById","insertAdjacentHTML","createRoot","render","_jsx","this","fontFamily","AlertClass","ErrorIcon","useAlert","alertConfig","setAlertConfig","useState","openAlert","setOpenAlert","rootRef","useRef","useEffect","modalContainer","current","Suspense","fallback","children","open","setOpen","content","theme","alert","useCallback","closeAlert","InvalidTokenError","base64UrlDecode","str","output","replace","length","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","jwtDecode","token","options","pos","header","part","split","decoded","e","JSON","parse","prototype","name","useFetch","urlApi","responseFetch","setResponseFetch","data","status","async","fetch","then","response","json","catch","getData","datos","console","log","process","useCita","initialValues","paciente","consultorio","doctor","tratamiento","setPaciente","fecha","setFecha","getDate","hora","setHora","getTime","setConsultorio","setDoctor","setTratamiento","state","key","value","handleChange","decode","titles","map","param","charAt","slice","placeholders","item","arrayFetch","array","useMemo","undefined","stringify","queryCode","setQueryCode","queryPatient","setQueryPatient","queryDate","setQueryDate","queryTime","setQueryTime","queryConsultoryRoom","setQueryConsultoryRoom","queryDoctor","setQueryDoctor","queryTreatment","setQueryTreatment","queries","setQueries","arrayFiltered","arguments","patient","date","time","consultoryRoom","treatment","filter","_id","includes","cita","toLowerCase","getCitasFiltered","itemsPerPage","setItemsPerPage","indexPage","setIndexPage","numPages","Math","floor","indexPages","activePage","i","push","activePages","setActivePages","sortBy","setSortBy","SortByProperty","a","b","id","localeCompare","api","dataObject","sort","usePaciente","nombre","apellido","identificacion","genero","eps","setNombre","setApellido","setIdentificacion","setGenero","setEps","v","parameter","queryName","setQueryName","queryLastname","setQueryLastname","queryIdentification","setQueryIdentification","queryGender","setQueryGender","queryEps","setQueryEps","identification","lastname","gender","getPacientesFiltered","useDoctor","especialidad","setEspecialidad","querySpeciality","setQuerySpeciality","speciality","getDoctoresFiltered","resPages","useEspecialidad","getEspecialidadesFiltered","useConsultorio","numero","setNumero","queryNumber","setQueryNumber","number","getConsultoriosFiltered","useTratamiento","querySpecialty","setQuerySpecialty","specialty","getTratamientosFiltered","useCrudFactory","classType","hookCita","hookPaciente","hookDoctor","hookConsultorio","hookTratamiento","hookEspecialidad"],"sourceRoot":""}