{"version":3,"file":"static/js/1153.53805d73.chunk.js","mappings":"oPAIO,MAAMA,GAAQC,EAAAA,EAAAA,MAAMC,IAAqG,IAApG,KAAEC,EAAI,UAAEC,EAAU,OAAM,MAAEC,EAAM,GAAE,KAAEC,GAAK,EAAI,QAAEC,EAAO,QAAEC,EAAQ,GAAE,QAAEC,EAAQ,EAAC,WAAEC,EAAW,IAAIR,EACxH,MAAM,MAAES,IAAUC,EAAAA,EAAAA,MAGZC,GAAcC,EAAAA,EAAAA,aAAY,KAC9BP,GAAQ,GACRQ,SAASC,KAAKC,UAAUC,OAAO,aAC9B,CAACX,KAGJY,EAAAA,EAAAA,WAAU,KACR,MAAMH,EAAOD,SAASC,KAGtB,OAFIV,EAAMU,EAAKC,UAAUG,IAAI,YACxBJ,EAAKC,UAAUC,OAAO,YACpB,IAAMF,EAAKC,UAAUC,OAAO,aAClC,CAACZ,IAGJ,MAAMe,GAAeC,EAAAA,EAAAA,SAAQ,KACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWd,EAAa,8DAA8De,UACzFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAW,aAAYb,EAAMc,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UAAAE,UAAQF,EAAAA,EAAAA,KAACpB,EAAI,CAACwB,MAAOvB,EAAWwB,OAAQ,IAAKC,MAAO,IAAKL,UAAU,0BACnED,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAEpB,OAI5CG,IAAae,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAACF,EAAAA,EAAAA,KAAA,UAAAE,UAAQF,EAAAA,EAAAA,KAAA,MAAAE,SAAKjB,SAE1De,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,SAEL,IAAZhB,GAAkBc,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBM,QAASjB,EAAYY,SAAC,YAC/D,IAAZhB,GAAkBiB,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAN,SAAA,EAAEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBM,QAASjB,EAAYY,SAAC,aAAgBF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kBAAkBM,QAASjB,EAAYY,SAAC,gBACvJ,cAMZ,CAACrB,EAAWC,EAAOG,EAASC,EAASC,EAAYC,EAAOE,IAG1D,OAAKP,GAGHiB,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAN,SACInB,IAAUoB,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAN,SAAA,CAAE,qCACEJ,GACFE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBM,QAASjB,SANzC,OAapB,G","sources":["alerts/modal/Modal.js"],"sourcesContent":["import './modal.css';\r\nimport { memo, useEffect, useCallback, useMemo } from 'react';\r\nimport { useThemeContext } from \"../../theme/ThemeContext.js\";\r\n\r\nexport const Modal = memo( ({ Icon, iconColor='#000', title='', open=true, setOpen, content='', buttons=1, fontFamily='' }) => {\r\n  const { theme } = useThemeContext();                  // 游녣 Call the global theme\r\n  \r\n  // 游녢 Memoriza funci칩n para que no se recree en cada render\r\n  const handleClose = useCallback(() => {\r\n    setOpen(false);\r\n    document.body.classList.remove(\"noScroll\");\r\n  }, [setOpen]);\r\n\r\n  // 游녢 Bloquea scroll cuando est치 abierto\r\n  useEffect(() => {                                    // Add or remove 'noScroll' class from body when modal open state changes\r\n    const body = document.body;\r\n    if (open) body.classList.add('noScroll'); \r\n    else body.classList.remove('noScroll');\r\n    return () => body.classList.remove('noScroll');    // Cleanup in case component unmounts while open\r\n  }, [open]);\r\n\r\n  // 游녢 Memoriza el contenido para evitar re-render innecesario\r\n  const modalContent = useMemo(() => (\r\n      <div className={fontFamily + \" modalContainer justify-items-center justify-content-center\"}>\r\n        <div className=\"modalBox\" data-theme={theme}>\r\n          <div className=\"modalHeader\">\r\n            <center><Icon color={iconColor} height={4.5} width={4.5} className=\"bounce center mt-4\" /></center>\r\n            <h3 className=\"modalTitle main-color pt-3\">{title}</h3>\r\n          </div>\r\n\r\n          {/* 游녢 Solo renderiza contenido si existe */}\r\n          { content && ( <div className=\"modalContent\"><center><h4>{content}</h4></center></div> ) }\r\n\r\n          <div className=\"modalFooter justify-items-center\">\r\n            <div className=\"mt-4\">\r\n              {/* 游녢 Render condicional para botones */}\r\n              { buttons === 1 ? ( <button className=\"aceptBtn w-100\" onClick={handleClose}>Aceptar</button> ) \r\n              : buttons === 2 ? ( <><button className=\"aceptBtn w-100\" onClick={handleClose}>Aceptar</button><button className=\"cancelBtn w-100\" onClick={handleClose}>Cancelar</button></> ) \r\n              : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n    [iconColor, title, content, buttons, fontFamily, theme, handleClose]\r\n  );\r\n\r\n  if (!open) return null;                             // 游녣 Evita render si est치 cerrado\r\n  \r\n  return (\r\n    <>\r\n      { open && ( <>                                  {/* 游녣 Solo renderiza si est치 abierto */}\r\n                    { modalContent }\r\n                    <div className=\"darkBackground\" onClick={handleClose}></div>\r\n                  </> )\r\n      }\r\n    </>\r\n  );\r\n} );\r\n\r\nexport default Modal;"],"names":["Modal","memo","_ref","Icon","iconColor","title","open","setOpen","content","buttons","fontFamily","theme","useThemeContext","handleClose","useCallback","document","body","classList","remove","useEffect","add","modalContent","useMemo","_jsx","className","children","_jsxs","color","height","width","onClick","_Fragment"],"sourceRoot":""}