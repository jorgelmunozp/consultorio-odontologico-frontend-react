{"version":3,"file":"static/js/5687.643d0471.chunk.js","mappings":"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","sources":["components/forms/dropdown/DropdownSelector.js"],"sourcesContent":["import '../forms.css';\r\nimport { memo, useMemo, useCallback } from 'react';\r\nimport { useThemeContext } from \"../../../theme/ThemeContext.js\";\r\nimport { useDropdown } from './useDropdown.js';\r\nimport { lazy } from 'react';\r\n\r\nconst PaginationBar = memo(lazy(() => import('../../pagination/PaginationBar.js')));\r\n\r\nexport const DropdownSelector = ({ classType, value = '', placeholder='', handleChange, isOpen, onToggle, className='', itemsPerPage = 5 }) => {\r\n  const { theme } = useThemeContext();\r\n  const { array, pagination } = useDropdown({ classType, itemsPerPageInitial: itemsPerPage });\r\n\r\n  const buttonClassName = useMemo( () => `${className} dropdown-toggle century-gothic ${value.length === 0 ? \"text-start pt-2\" : \"text-center pt-4\"} ps-2 ps-sm-3 pe-5 w-100 bg-transparent`.trim(), [className, value] ); // ðŸ‘ˆ Toggle button memorized classname\r\n  const labelClassName = useMemo( () => `form-control text-start my-0 w-100 bg-transparent ${ value.length === 0 ? \"align-items-center\" : \"pt-3\" }`, [value] ); // ðŸ‘ˆ Label button memorized classname\r\n\r\n  // ðŸ‘‡ Dropdown memorized Options\r\n  const options = useMemo(() => {\r\n    // Opciones seguras: si no hay datos, mostramos \"Cargando...\"\r\n    if (!pagination.currentItems || pagination.currentItems.length === 0) {\r\n      return ( <li className=\"dropdown-item disabled\">{ array.length === 0 ? \"Cargando...\" : \"No hay resultados\" }</li> );\r\n    }\r\n\r\n    // Definimos transformadores para cada tipo\r\n    const displayMap = {\r\n      paciente: (item) => `${item?.nombre || \"\"} ${item?.apellido || \"\"}`.trim(),\r\n      doctor: (item) => `${item?.nombre || \"\"} ${item?.apellido || \"\"}`.trim(),\r\n      consultorio: (item) => `${item?.numero || \"\"} ${item?.nombre || \"\"}`.trim(),\r\n      tratamiento: (item) => item?.nombre || item?.especialidad || \"\",\r\n      eps: (item) => item?.nombre || item?.especialidad || \"\",\r\n      genero: (item) => item?.nombre || item?.especialidad || \"\",\r\n      especialidad: (item) => item?.nombre || item?.especialidad || \"\",\r\n    };\r\n\r\n    const transform = displayMap[classType] || (() => \"\");\r\n\r\n    return pagination.currentItems.map((option, index) => {\r\n      const item = option?.[classType];\r\n      const displayValue = transform(item);\r\n\r\n      return ( <Option key={`${classType}Option${index}`} value={displayValue} handleChange={handleChange} closeDropdown={() => onToggle(false)} theme={theme} /> );\r\n    });\r\n  }, [pagination.currentItems, array.length, classType, handleChange, onToggle, theme]);\r\n\r\n  // ðŸ‘‡ Callbacks de paginaciÃ³n memorizados para referencias estables\r\n  const goToPage = useCallback((page) => pagination.goToPage(page), [pagination]);\r\n  const goPrev = useCallback(() => pagination.goPrev(), [pagination]);\r\n  const goNext = useCallback(() => pagination.goNext(), [pagination]);\r\n\r\n  return (\r\n    <div className=\"dropdown form-floating w-100 min-width-10 py-sm-0 px-0\">\r\n      <button id={\"selectButton\" + classType} onClick={onToggle} className={buttonClassName} type=\"button\" aria-controls={\"dropdownMenu\" + classType} aria-expanded={isOpen} data-theme={theme}>{ value.length === 0 ? placeholder : value }</button>\r\n      <label htmlFor={\"selectButton\" + classType} className={\"form-label text-nowrap text-truncate bg-transparent\" + labelClassName} data-theme={theme}>{ value.length === 0 ? '' : placeholder  }</label>\r\n\r\n      <ul id={\"dropdownMenu\" + classType} className={\"dropdown-menu text-center shadow-sm w-100 overflow-auto slideIn smooth\" + (isOpen ? \" collapse show\" : \"\")} style={array.length === 0 ? { maxHeight: \"0rem\" } : { maxHeight: \"12rem\" }}aria-labelledby={\"selectButton\" + classType} data-theme={theme}>\r\n        { options }\r\n        { pagination.totalPages > 1 && ( <PaginationBar currentPage={pagination.currentPage} totalPages={pagination.totalPages} goToPage={goToPage} goPrev={goPrev} goNext={goNext} /> ) }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Option = memo(({ value, handleChange, closeDropdown, theme }) => {\r\n  const handleClick = useCallback(() => {\r\n    handleChange(value);\r\n    closeDropdown();\r\n  }, [handleChange, closeDropdown, value]);\r\n\r\n  return ( <li className='bg-row'><button value={value} onClick={handleClick} className=\"dropdown-item bg-transparent\" data-theme={theme}>{ value }</button></li> );\r\n});\r\n\r\nexport default memo(DropdownSelector);"],"names":["PaginationBar","memo","lazy","DropdownSelector","_ref","classType","value","placeholder","handleChange","isOpen","onToggle","className","itemsPerPage","theme","useThemeContext","array","pagination","useDropdown","itemsPerPageInitial","buttonClassName","useMemo","length","trim","labelClassName","options","currentItems","_jsx","children","transform","paciente","item","nombre","apellido","doctor","consultorio","numero","tratamiento","especialidad","eps","genero","map","option","index","displayValue","Option","closeDropdown","goToPage","useCallback","page","goPrev","goNext","_jsxs","id","onClick","type","htmlFor","style","maxHeight","totalPages","currentPage","_ref2","handleClick"],"sourceRoot":""}