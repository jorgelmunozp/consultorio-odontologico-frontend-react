{"version":3,"file":"static/js/2243.66553116.chunk.js","mappings":"+RAQA,MAAMA,GAAOC,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,yCACvBC,GAAOF,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,iCACvBE,GAAOH,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,iCACvBG,GAAMJ,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,iCACtBI,GAAQL,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,iCAExBK,EAAkBC,0CAEXC,EAASA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,MAAEC,EAAK,YAAEC,IAAgBC,EAAAA,EAAAA,MACzBC,GAAOC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,KAAKH,MAEzCI,GAAeC,EAAAA,EAAAA,aAAY,KAC/BZ,GAASa,EAAAA,EAAAA,OACTX,EAASL,EAAiB,CAAEiB,SAAS,KACpC,CAACd,EAAUE,IAId,OACEa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yGAAyG,aAAYf,EAAMa,UACxIF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBF,SAAA,EAC9BF,EAAAA,EAAAA,MAACK,EAAAA,GAAO,CAACD,UAAU,gDAAgDE,GAAI,IAAMxB,EAAgBoB,SAAA,EAC3FC,EAAAA,EAAAA,KAAC5B,EAAI,CAACgC,MAAOC,EAAAA,GAASC,MAAO,KAAMC,OAAQ,KAAMC,YAAa,IAAKP,UAAU,uCAC7ED,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYF,SAAEU,EAAAA,QAE/BpB,EAAKqB,QACJV,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACD,UAAU,oBAAoBU,QAASlB,EAAcU,GAAIxB,EAAgBoB,SAAC,WAInFF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,uCAAsCF,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBF,UAC5BC,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACD,UAAU,oBAAoB,iBAAe,QAAQ,iBAAe,SAAS,gBAAc,aAAYF,UAC9GC,EAAAA,EAAAA,KAACzB,EAAI,CAAC6B,MAAOC,EAAAA,GAASE,OAAQ,IAAKD,MAAO,IAAKE,YAAa,WAGhER,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBF,UAC5BC,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACS,QAASxB,EAAac,UAAU,oBAAmBF,SAC/C,UAAVb,GACCc,EAAAA,EAAAA,KAACxB,EAAI,CAACyB,UAAU,aAAaO,YAAa,IAAKD,OAAQ,KAAMD,MAAO,QAEpEN,EAAAA,EAAAA,KAACvB,EAAG,CAACwB,UAAU,aAAaO,YAAa,GAAID,OAAQ,KAAMD,MAAO,oBAQhFN,EAAAA,EAAAA,KAACtB,EAAK,CAACkC,KAAMrC,EAAMc,KAAMA,QAK/B,GAAehB,EAAAA,EAAAA,MAAKQ,E","sources":["components/menu/Navbar.js"],"sourcesContent":["import '../views/login/login.css';\r\nimport { lazy, memo, useCallback } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../store/authSlice.js';\r\nimport { useThemeContext } from \"../../theme/ThemeContext.js\";\r\nimport { myColor, myTitle } from \"../../global.js\";\r\n\r\nconst Logo = memo(lazy(() => import('../icons/logo/Logo.js')));\r\nconst User = memo(lazy(() => import('../icons/user/User.js')));\r\nconst Moon = memo(lazy(() => import('../icons/theme/Moon.js')));\r\nconst Sun = memo(lazy(() => import('../icons/theme/Sun.js')));\r\nconst Login = memo(lazy(() => import('../views/login/Login.js')));\r\n\r\nconst urlBaseFrontend = process.env.REACT_APP_URL_BASE_FRONTEND;\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { theme, handleTheme } = useThemeContext();\r\n  const user = useSelector((state) => state.auth.user); // ðŸ‘ˆ\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout());     // ðŸ‘ˆ Redux dispatch\r\n    navigate(urlBaseFrontend, { replace: true });\r\n  }, [dispatch, navigate]);\r\n\r\n  if (process.env.NODE_ENV === 'development') console.log('[Navbar ðŸ“Œ]');\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-theme color-theme fixed-top shadow-lg user-select-none z-10000\" data-theme={theme}>\r\n        <div className=\"container-fluid\">\r\n          <NavLink className=\"navbar-brand main-color d-flex bg-transparent\" to={\"/\" + urlBaseFrontend}>\r\n            <Logo color={myColor} width={1.25} height={1.25} strokeWidth={1.2} className='ms-0 ms-sm-4 me-0 me-sm-2 mt-logo' />\r\n            <span className='main-color'>{myTitle}</span>\r\n          </NavLink>\r\n          {user.logged ? (\r\n            <NavLink className=\"nav-item nav-link\" onClick={handleLogout} to={urlBaseFrontend}>\r\n              Salir\r\n            </NavLink>\r\n          ) : (\r\n            <div className=\"row justify-content-end me-0 me-sm-1\">\r\n              <ul className=\"navbar-nav col\">\r\n                <NavLink className=\"nav-item nav-link\" data-bs-toggle=\"modal\" data-bs-target=\"#login\" aria-controls=\"modal-body\">\r\n                  <User color={myColor} height={1.3} width={1.3} strokeWidth={1.5} />\r\n                </NavLink>\r\n              </ul>\r\n              <ul className=\"navbar-nav col\">\r\n                <NavLink onClick={handleTheme} className=\"nav-item nav-link\">\r\n                  {theme === 'light' ? (\r\n                    <Moon className='main-color' strokeWidth={1.5} height={1.25} width={1.25} />\r\n                  ) : (\r\n                    <Sun className='main-color' strokeWidth={10} height={1.25} width={1.25} />\r\n                  )}\r\n                </NavLink>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n      <Login Icon={User} user={user} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Navbar);"],"names":["Logo","memo","lazy","User","Moon","Sun","Login","urlBaseFrontend","process","Navbar","dispatch","useDispatch","navigate","useNavigate","theme","handleTheme","useThemeContext","user","useSelector","state","auth","handleLogout","useCallback","logout","replace","_jsxs","_Fragment","children","_jsx","className","NavLink","to","color","myColor","width","height","strokeWidth","myTitle","logged","onClick","Icon"],"sourceRoot":""}