{"version":3,"file":"static/js/6746.e86c917b.chunk.js","mappings":"4RAOA,MAAMA,GAAQC,EAAAA,EAAAA,MAAK,IAAM,gCACnBC,GAAWD,EAAAA,EAAAA,MAAK,IAAM,gCAEfE,EAAaC,IAA+C,IAA9C,UAAEC,EAAS,KAAEC,EAAI,WAAEC,EAAU,QAAEC,GAASJ,EACjE,MAAM,MAAEK,IAAUC,EAAAA,EAAAA,OACZ,MAAEC,IAAUC,EAAAA,EAAAA,MACXC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,OAG/CC,IAAIC,EAAM,MAAEC,EAAK,WAAEC,EAAU,YAAEC,GAAgBb,EAGjDc,GAAuBC,EAAAA,EAAAA,SAC3B,IAAMjB,EAAUkB,OAAO,GAAGC,cAAgBnB,EAAUoB,MAAM,GAC1D,CAACpB,IAIGqB,GAAeC,EAAAA,EAAAA,aAAY,KAE/B,GADuBT,EAAMU,KAAKC,GAA+B,KAAnBA,EAASC,OAGrD,YADAnB,EAAM,CAAEoB,KAAM,UAAWC,MAAO,iCAAkCC,QAAS,IAI7E,MAAMC,EAAchB,EAAMiB,OAAO,CAACC,EAAKP,KACrCO,EAAIP,EAASQ,KAAOR,EAASC,MACtBM,GACN,CAAC,GAEEE,EAAWC,KAAKC,UAAU,CAAE,CAACnC,GAAY6B,ICrCxBO,OAAQxB,EAAOyB,KACxC,IACE,MAAMC,QAAiBC,MAAM3B,EAAQ,CACnC4B,OAAQ,OACRC,KAAMJ,EACNK,QAAS,CAAE,eAAgB,sBAU/B,OAREJ,EAASK,OACN,KAAOL,EAASM,QAAUN,EAASM,QAAU,IAC9CC,QAAQC,IAAI,QAAUR,EAASM,OAAS,qBAChC,KAAON,EAASM,QAAUN,EAASM,QAAU,IACrDC,QAAQC,IAAI,QAAUR,EAASM,OAAS,oDAChC,KAAON,EAASM,QAAUN,EAASM,QAAU,KACrDC,QAAQC,IAAI,QAAUR,EAASM,OAAS,kDAErCN,EAASM,MAChB,CAAE,MAAOG,GACL,MAAMC,EAAeD,EAAME,WAAWC,MAAM,KAAK,GAAGC,OAChC,oBAAjBH,EAAsCH,QAAQC,IAAI,6DAC9CD,QAAQC,IAAI,qBAAuBE,EAC5C,GDmBAI,CAAYxC,EAAQqB,GACjBoB,KAAKjB,UACAkB,GAAkB,KAAOA,EAAiB,KAC5CvC,EAAY,SAAU,CAAE,CAACf,GAAY6B,IAErCf,IACAR,EAAM,CAAEoB,KAAM,UAAWC,MAAO,mBAAoBC,QAAS,KACpD0B,GAAkB,KAAOA,EAAiB,IACnDhD,EAAM,CAAEoB,KAAM,QAASC,MAAO,gCAA8BC,QAAS,IAC5D0B,GAAkB,KAC3BhD,EAAM,CAAEoB,KAAM,QAASC,MAAO,8BAA+BC,QAAS,MAGzE2B,MAAOR,IACNF,QAAQE,MAAM,2BAAyBA,GACvCzC,EAAM,CAAEoB,KAAM,QAASC,MAAO,uBAAwBC,QAAS,OAElE,CAACf,EAAOD,EAAQZ,EAAWM,EAAOQ,EAAYC,IAG3CyC,GAAclC,EAAAA,EAAAA,aAAY,IAAMnB,GAAQ,GAAQ,CAACA,IAEvD,OACEsD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,sCAAsCF,UACpDF,EAAAA,EAAAA,MAAA,OAAKI,UAAW,WAAY,aAAYzD,EAAMuD,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAKI,UAAW,cAAcF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,UAAAD,UAAQC,EAAAA,EAAAA,KAAC3D,EAAI,CAAC6D,MAAOC,EAAAA,GAASC,OAAQ,IAAKC,MAAO,IAAKC,YAAa,GAAKL,UAAW,cACpFJ,EAAAA,EAAAA,MAAA,MAAII,UAAU,4CAA2CF,SAAA,CAAC,aAAW3C,SAExE4C,EAAAA,EAAAA,KAAA,OAAKC,UAAW,eAAeF,UAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCF,SAC7C9C,EAAMsD,IAAK3C,IACVoC,EAAAA,EAAAA,KAAA,OAAwBC,UAAU,WAAUF,SACvB,aAAlBnC,EAASE,MACRkC,EAAAA,EAAAA,KAAC/D,EAAQ,CACP2B,SAAUA,EACV4C,MAAO5C,EAAS6C,QAChBC,aAAc9C,EAAS8C,aACvBC,OAAQ/D,IAAoBgB,EAASQ,IACrCwC,SAAUA,IACR/D,EAAoBgE,GAAUA,IAASjD,EAASQ,IAAM,KAAOR,EAASQ,QAI1E4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACvBC,EAAAA,EAAAA,KAACjE,EAAK,CACJ+B,KAAMF,EAASE,KACfD,MAAOD,EAASC,MAChB6C,aAAc9C,EAAS8C,aACvBI,YAAalD,EAASQ,IAAId,OAAO,GAAGC,cAAgBK,EAASQ,IAAIZ,MAAM,GACvEyC,UAAU,yFAlBRrC,EAASQ,WA0BzB4B,EAAAA,EAAAA,KAAA,OAAKC,UAAW,cAAcF,UAC5BF,EAAAA,EAAAA,MAAA,OAAKI,UAAW,oBAAoBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAQC,UAAW,iBAAkBc,QAASA,KAAQtD,IAAgBmC,KAAiBG,SAAC,eACxFC,EAAAA,EAAAA,KAAA,UAAQC,UAAW,kBAAmBc,QAAUnB,EAAaG,SAAC,sBAKtEC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,iBAAkBc,QAAUnB,QAKlD,GAAeoB,EAAAA,EAAAA,MAAK9E,E","sources":["components/crud/CreateItem.js","helpers/fetchCreate.js"],"sourcesContent":["import '../../alerts/modal/modal.css';\r\nimport { lazy, useState, useCallback, useMemo, memo } from \"react\";\r\nimport { useThemeContext } from \"../../theme/ThemeContext.js\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { fetchCreate } from \"../../helpers/fetchCreate.js\";\r\nimport { myColor } from '../../global.js';\r\n\r\nconst Input = lazy(() => import(\"../forms/inputs/Input.js\"));\r\nconst Dropdown = lazy(() => import(\"../forms/dropdown/Dropdown.js\"));\r\n\r\nexport const CreateItem = ({ classType, Icon, objectHook, setOpen }) => {\r\n  const { theme } = useThemeContext();                            // 游녣 Call the global theme\r\n  const { alert } = useAlertContext();\r\n  const [openDropdownKey, setOpenDropdownKey] = useState(null);\r\n\r\n  // const { state, api: urlApi, resetState } = useCrudFactory({ classType });\r\n  const { api:urlApi, state, resetState, handleItems } = objectHook;\r\n\r\n  // Capitaliza el nombre del tipo de clase para mostrar en el t칤tulo\r\n  const capitalizedClassType = useMemo(\r\n    () => classType.charAt(0).toUpperCase() + classType.slice(1),\r\n    [classType]\r\n  );\r\n\r\n  // Funci칩n para crear el nuevo 칤tem\r\n  const handleCreate = useCallback(() => {\r\n    const hasEmptyFields = state.some(property => property.value === \"\");\r\n    if (hasEmptyFields) {\r\n      alert({ type: \"warning\", title: \"Debes ingresar todos los datos\", buttons: 1 });\r\n      return;\r\n    }\r\n\r\n    const itemPayload = state.reduce((obj, property) => {\r\n      obj[property.key] = property.value;\r\n      return obj;\r\n    }, {});\r\n\r\n    const dataItem = JSON.stringify({ [classType]: itemPayload });\r\n\r\n    fetchCreate(urlApi, dataItem)\r\n      .then(async (responseStatus) => {\r\n        if (responseStatus >= 200 && responseStatus < 300) {\r\n          handleItems('create', { [classType]: itemPayload });                        // El padre actualiza el estado y React re-renderiza con el elemento actualizado\r\n\r\n          resetState();\r\n          alert({ type: \"success\", title: \"Registro exitoso\", buttons: 1 });\r\n        } else if (responseStatus >= 400 && responseStatus < 500) {\r\n          alert({ type: \"error\", title: \"Error en el env칤o de datos\", buttons: 1 });\r\n        } else if (responseStatus >= 500) {\r\n          alert({ type: \"error\", title: \"Error en el servidor remoto\", buttons: 1 });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error en la creaci칩n:\", error);\r\n        alert({ type: \"error\", title: \"Error en el registro\", buttons: 1 });\r\n      });\r\n  }, [state, urlApi, classType, alert, resetState, handleItems]);\r\n\r\n    // 游녢 Memoriza handleClose para evitar recreaci칩n en cada render\r\n  const handleClose = useCallback(() => setOpen(false), [setOpen]);   \r\n\r\n  return (\r\n    <>\r\n      <div className={'modalContainer justify-items-center'}>\r\n        <div className={'modalBox'} data-theme={theme}>\r\n          <div className={'modalHeader'}>\r\n             <center><Icon color={myColor} height={2.5} width={2.5} strokeWidth={0.6} className={'center'} /></center>\r\n             <h6 className=\"modalTitle century-gothic main-color pt-2\">Registrar {capitalizedClassType}</h6>\r\n          </div>\r\n          <div className={'modalContent'}>\r\n            <div className='container-fluid modalTable mt-2'>\r\n              {state.map((property) => (\r\n                <div key={property.key} className=\"row mb-3\">\r\n                  {property.type === \"dropdown\" ? (\r\n                    <Dropdown\r\n                      property={property}\r\n                      array={property.options} // Aseg칰rate de que cada propiedad tenga un array de opciones\r\n                      handleChange={property.handleChange}\r\n                      isOpen={openDropdownKey === property.key}\r\n                      onToggle={() =>\r\n                        setOpenDropdownKey((prev) => (prev === property.key ? null : property.key))\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <div className=\"col px-0\">\r\n                      <Input\r\n                        type={property.type}\r\n                        value={property.value}\r\n                        handleChange={property.handleChange}\r\n                        placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)}\r\n                        className=\"input form-control rounded border-muted border-1 text-muted text-center shadow-sm\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={'modalFooter'}>\r\n            <div className={'d-flex mt-2 w-100'}>\r\n              <button className={'aceptBtn w-100'} onClick={() => { handleCreate(); handleClose(); }}>Registrar</button>\r\n              <button className={'cancelBtn w-100'} onClick={ handleClose }>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={'darkBackground'} onClick={ handleClose }></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(CreateItem);\r\n","export const fetchCreate = async ( urlApi,dataApi ) => {\r\n  try {  \r\n    const response = await fetch(urlApi, {\r\n      method: \"POST\",\r\n      body: dataApi,\r\n      headers: { \"Content-type\": \"application/json\" }\r\n    });\r\n    response.json();\r\n    if(200 <= response.status && response.status <= 299){\r\n      console.log('POST ' + response.status + ' Registro exitoso')\r\n    } else if(400 <= response.status && response.status <= 499){\r\n      console.log('POST ' + response.status + ' Registro fallido: Error en el env칤o de datos')\r\n    } else if(500 <= response.status && response.status <= 599){\r\n      console.log('POST ' + response.status + ' Registro fallido: Error en el servidor remoto')\r\n    }\r\n  return response.status;\r\n  } catch (error) {\r\n      const errorMessage = error.toString().split(':')[1].trim();\r\n      if(errorMessage === 'Failed to fetch') { console.log('Registro fallido: No hay conexi칩n con la base de datos') } \r\n      else { console.log('Registro fallido: ' + errorMessage) }     \r\n    };\r\n}"],"names":["Input","lazy","Dropdown","CreateItem","_ref","classType","Icon","objectHook","setOpen","theme","useThemeContext","alert","useAlertContext","openDropdownKey","setOpenDropdownKey","useState","api","urlApi","state","resetState","handleItems","capitalizedClassType","useMemo","charAt","toUpperCase","slice","handleCreate","useCallback","some","property","value","type","title","buttons","itemPayload","reduce","obj","key","dataItem","JSON","stringify","async","dataApi","response","fetch","method","body","headers","json","status","console","log","error","errorMessage","toString","split","trim","fetchCreate","then","responseStatus","catch","handleClose","_jsxs","_Fragment","children","_jsx","className","color","myColor","height","width","strokeWidth","map","array","options","handleChange","isOpen","onToggle","prev","placeholder","onClick","memo"],"sourceRoot":""}