{"version":3,"file":"static/js/1831.b39941ac.chunk.js","mappings":"2PAGA,MAAMA,GAASC,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAC1BC,GAAcF,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAC/BE,GAAkBH,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCACnCG,GAAeJ,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAChCI,GAAcL,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAC/BK,GAAaN,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAE9BM,EAAkBC,0CAEXC,EAAYA,KAEvB,MAAMC,GAASC,EAAAA,EAAAA,SAAS,KACpBC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAAC,SAAA,EACLC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAM,GAAGV,KAAoBW,SAAUH,EAAAA,EAAAA,KAACb,EAAW,CAAAY,UAACC,EAAAA,EAAAA,KAACV,EAAW,SACvEU,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAM,GAAGV,SAAwBW,SAAUH,EAAAA,EAAAA,KAACX,EAAY,CAAAU,UAACC,EAAAA,EAAAA,KAACT,EAAU,SAC3ES,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAK,KAAKC,SAAUH,EAAAA,EAAAA,KAACX,EAAY,CAAAU,UAACC,EAAAA,EAAAA,KAACZ,EAAe,WAE5D,IAIH,OACES,EAAAA,EAAAA,MAACO,EAAAA,GAAM,CAACC,OAAQ,CAAEC,sBAAsB,EAAMC,oBAAoB,GAAQR,SAAA,EACxEC,EAAAA,EAAAA,KAAChB,EAAM,KAEPgB,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yDAAwDT,SACnEJ,QAMV,GAAeV,EAAAA,EAAAA,MAAKS,E","sources":["routers/AppRouter.js"],"sourcesContent":["import { lazy, memo, useState, useCallback, useMemo } from 'react';\r\nimport { Routes, Route, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst Navbar = memo( lazy(() => import('../components/menu/Navbar.js')) );\r\nconst PublicRoute = memo( lazy(() => import('./PublicRoute.js')) );\r\nconst DashboardRoutes = memo( lazy(() => import('./DashboardRoutes.js')) );\r\nconst PrivateRoute = memo( lazy(() => import('./PrivateRoute.js')) );\r\nconst IndexScreen = memo( lazy(() => import('../components/views/index/IndexScreen.js')) );\r\nconst HomeScreen = memo( lazy(() => import('../components/views/home/HomeScreen.js')) );\r\n\r\nconst urlBaseFrontend = process.env.REACT_APP_URL_BASE_FRONTEND || '';\r\n\r\nexport const AppRouter = () => {\r\n  // ðŸ‘‡ Memoriza el resultado de las rutas para que no se vuelvan a crear\r\n  const routes = useMemo( () => (\r\n      <Routes>\r\n        <Route path={`${urlBaseFrontend}/`} element={ <PublicRoute><IndexScreen /></PublicRoute> } />\r\n        <Route path={`${urlBaseFrontend}/home`} element={ <PrivateRoute><HomeScreen /></PrivateRoute> } />\r\n        <Route path=\"/*\" element={ <PrivateRoute><DashboardRoutes /></PrivateRoute> } />\r\n      </Routes>\r\n  ), [] ); // ðŸ‘ˆ Solo se recalcula cuando cambia el estado\r\n  \r\n  if( process.env.NODE_ENV === 'development' ) { console.log('[App Router]') }\r\n\r\n  return (\r\n    <Router future={{ v7_relativeSplatPath: true, v7_startTransition: true, }}>\r\n      <Navbar />\r\n\r\n      <div className=\"container-fluid mt-5 px-0 text-center user-select-none\">\r\n        { routes }\r\n      </div>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default memo(AppRouter);"],"names":["Navbar","memo","lazy","PublicRoute","DashboardRoutes","PrivateRoute","IndexScreen","HomeScreen","urlBaseFrontend","process","AppRouter","routes","useMemo","_jsxs","Routes","children","_jsx","Route","path","element","Router","future","v7_relativeSplatPath","v7_startTransition","className"],"sourceRoot":""}