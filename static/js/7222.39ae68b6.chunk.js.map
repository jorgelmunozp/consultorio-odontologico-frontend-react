{"version":3,"file":"static/js/7222.39ae68b6.chunk.js","mappings":"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","sources":["components/pagination/usePagination.js","components/crud/QueryItem.js"],"sourcesContent":["import { useState, useMemo, useCallback } from \"react\";\r\n\r\nexport const usePagination = ({ array = [], initialItemsPerPage = 10 }) => {\r\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const totalPages = useMemo(() => Math.max(1, Math.ceil(array.length / itemsPerPage)), [array.length, itemsPerPage]);\r\n\r\n  const indexPages = useMemo(() => Array.from({ length: totalPages }, (_, i) => i), [totalPages]);\r\n\r\n  const currentItems = useMemo(() => {\r\n    const start = currentPage * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return array.slice(start, end);\r\n  }, [array, currentPage, itemsPerPage]);\r\n\r\n  // const goToPage = useCallback((pageIndex) => {\r\n  //   const safePage = Math.max(0, Math.min(pageIndex, totalPages - 1));\r\n  //   setCurrentPage(safePage);\r\n  // }, [totalPages]);\r\n\r\n  // const goPrev = useCallback(() => goToPage(currentPage - 1), [currentPage, goToPage]);\r\n  // const goNext = useCallback(() => goToPage(currentPage + 1), [currentPage, goToPage]);\r\n\r\n  const goToPage = useCallback((pageIndex) => {\r\n  setCurrentPage(prev => Math.max(0, Math.min(pageIndex, totalPages - 1)));\r\n}, [totalPages]);\r\n\r\nconst goPrev = useCallback(() => {\r\n  setCurrentPage(prev => Math.max(0, prev - 1));\r\n}, []);\r\n\r\nconst goNext = useCallback(() => {\r\n  setCurrentPage(prev => Math.min(prev + 1, totalPages - 1));\r\n}, [totalPages]);\r\n\r\n  return { itemsPerPage, setItemsPerPage, currentPage, totalPages, indexPages, currentItems, goToPage, goPrev, goNext };\r\n};\r\n\r\nexport default usePagination;","import { Suspense, lazy, useMemo, useCallback } from 'react';\r\nimport { usePagination } from '../pagination/usePagination.js';\r\n\r\n// const SearchBar = lazy(() => import('../search/SearchBar.js'));\r\nconst SearchBar = lazy(() => import('../search/SearchBar.js'));\r\nconst ItemsList = lazy(() => import('./items/ItemsList.js'));\r\nconst PaginationBar = lazy(() => import('../pagination/PaginationBar.js'));\r\n\r\nexport const QueryItem = ({ classType, Icons, objectHook }) => {\r\n  // const objectHook = useCrudFactory({ classType });\r\n  const { api:urlApi, keys, data, sort, handleItems } = objectHook;\r\n  const { queries, setQueries, arrayFiltered } = data;\r\n  const { SortByProperty, setSortBy } = sort;\r\n\r\n  const items = useMemo(() => arrayFiltered ?? [], [arrayFiltered]); // ‚úÖ Memoizamos items para evitar re-creaci√≥n innecesaria\r\n\r\n  const pagination = usePagination({ array: items, initialItemsPerPage: 10 });  // Hook de paginaci√≥n\r\n\r\n  // üëá Memorizamos props de SearchBar para que no cambien entre renders\r\n  const searchBarProps = useMemo(() => ({\r\n    Icon: Icons[classType].IconSearch,\r\n    items: keys,\r\n    queries,\r\n    setQueries,\r\n    className: 'float-end pb-3 me-0 smooth w-100'\r\n  }), [Icons, classType, keys, queries, setQueries]);\r\n\r\n  // ‚úÖ Memoizamos callbacks de paginaci√≥n para referencias estables\r\n  const goToPage = useCallback((page) => pagination.goToPage(page), [pagination]);\r\n  const goPrev = useCallback(() => pagination.goPrev(), [pagination]);\r\n  const goNext = useCallback(() => pagination.goNext(), [pagination]);\r\n\r\n  if (process.env.NODE_ENV === 'development') console.log('[Query Item üìç]');\r\n\r\n  return (\r\n      <div className=\"container-fluid mt-3 mt-sm-4 me-0 smooth w-100\">\r\n        <Suspense fallback={<div className=\"loaderSpin\"></div>}>\r\n          <SearchBar {...searchBarProps} />\r\n\r\n          {/* ItemsList recibe directamente los items de la p√°gina actual */}\r\n          <ItemsList\r\n            classType={classType}\r\n            Icons={Icons}\r\n            keys={keys}\r\n            urlApi={urlApi}\r\n            array={pagination.currentItems}\r\n            SortByProperty={SortByProperty}\r\n            setSortBy={setSortBy}\r\n            handleItems={handleItems}\r\n          />\r\n\r\n          {/* PaginationBar usando currentPage */}\r\n          <PaginationBar\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            goToPage={goToPage}\r\n            goPrev={goPrev}\r\n            goNext={goNext}\r\n          />\r\n        </Suspense>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default QueryItem;\r\n"],"names":["usePagination","_ref","array","initialItemsPerPage","itemsPerPage","setItemsPerPage","useState","currentPage","setCurrentPage","totalPages","useMemo","Math","max","ceil","length","indexPages","Array","from","_","i","currentItems","start","end","slice","goToPage","useCallback","pageIndex","prev","min","goPrev","goNext","SearchBar","lazy","ItemsList","PaginationBar","QueryItem","classType","Icons","objectHook","api","urlApi","keys","data","sort","handleItems","queries","setQueries","arrayFiltered","SortByProperty","setSortBy","items","pagination","searchBarProps","Icon","IconSearch","className","page","_jsx","children","_jsxs","Suspense","fallback"],"sourceRoot":""}