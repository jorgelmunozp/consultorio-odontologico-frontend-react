{"version":3,"file":"static/js/941.f56b1c13.chunk.js","mappings":"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","sources":["../node_modules/ts.cryptojs256/ts.cryptojs256.js","classes/User.js","classes/Especialidad.js","classes/Consultorio.js","classes/Tratamiento.js","classes/Cita.js","classes/Classes.js","components/crud/CreateItem.js","components/crud/views/CreateItems.js","../node_modules/jwt-encode/src/index.js","components/selectors/getTratamientosFiltered.js","components/selectors/getEspecialidadesFiltered.js","classes/Alert.js","components/alert/Alert.js","components/selectors/getDoctoresFiltered.js","components/selectors/getCitasFiltered.js","../node_modules/jwt-decode/build/esm/index.js","classes/Dropdown.js","helpers/getData.js","hooks/useFetch.js","components/selectors/getPacientesFiltered.js","helpers/fetchCreate.js","components/selectors/getConsultoriosFiltered.js"],"sourcesContent":["/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS = CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},r=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},u=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,d)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=c[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=this._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\"\")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=c[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n\n/* ---------------- PUBLIC INTERFACE ---------------- */\nexports.enc = { \n    Base64: CryptoJS.enc.Base64,\n    Utf8: CryptoJS.enc.Utf8,\n    Latin1: CryptoJS.enc.Latin1\n};\nexports.SHA256 = CryptoJS.SHA256;\nexports.HmacSHA256 = CryptoJS.HmacSHA256;\n","import { useState, useMemo, useEffect }  from \"react\";\r\nimport { Alert } from '../components/alert/Alert.js';\r\nimport { useFetch } from '../hooks/useFetch.js';\r\nimport { getPacientesFiltered } from '../components/selectors/getPacientesFiltered.js';\r\nimport { getDoctoresFiltered } from '../components/selectors/getDoctoresFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApiPacientes = process.env.REACT_APP_API_PACIENTES;\r\nconst urlApiDoctores = process.env.REACT_APP_API_DOCTORES;\r\n\r\nexport class User {\r\n    constructor({ nombre='', apellido='' }) {\r\n      this.nombre = {nombre}.nombre;\r\n      this.apellido = {apellido}.apellido;\r\n    }\r\n  }\r\n\r\nexport class Paciente extends User {\r\n    constructor({ nombre='', apellido='', identificacion='', genero='', eps='' }) {\r\n        super({ nombre:nombre, apellido:apellido });\r\n        this.identificacion = {identificacion}.identificacion;\r\n        this.genero = {genero}.genero;\r\n        this.eps = {eps}.eps;\r\n    }\r\n\r\n    getApi = () => { return( urlApiPacientes )}                 // METHOD API\r\n    get api () { return this.getApi() }                            // Getter api\r\n\r\n    getUser () { return new User( this.nombre, this.apellido ) }   // METHOD USER\r\n    get user () { return this.getUser() }                          // Getter user\r\n\r\n    getTitles = () => {                                            // METHOD TITLES\r\n      let titles = [];\r\n      this.state.forEach((parameter, index) => { \r\n          titles[index] = { \r\n              title:parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1), \r\n              type:parameter.type \r\n          }\r\n      });\r\n\r\n      // let placeholders = ['Código'];\r\n      let placeholders = [];\r\n      titles.forEach(item => { placeholders.push(item.title) } );\r\n\r\n      return({ titles, placeholders })\r\n    }                          \r\n    get titles () { return this.getTitles() }                      // Getter titles\r\n\r\n    getState = ({ nomb='', ape='', id='', gen='', eps_='' }) => {  // METHOD STATE\r\n      const [nombre, setNombre] = useState( nomb );                // Input nombre state\r\n      const [apellido, setApellido] = useState( ape );             // Input apellido state\r\n      const [identificacion, setIdentificacion] = useState( id );  // Input identificacion state\r\n      const [genero, setGenero] = useState( gen );                 // Select genero state\r\n      const [eps, setEps] = useState( eps_ );                      // Select eps state\r\n      const state = [\r\n        { key:'nombre', value:nombre, type:\"text\", handleChange: (value) => setNombre( decode(value) ) },\r\n        { key:'apellido', value:apellido, type:\"text\", handleChange: (value) => setApellido( decode(value) ) },\r\n        { key:'identificacion', value:identificacion, type:\"number\", handleChange: (value) => setIdentificacion( decode(value) ) },\r\n        { key:'genero', value:genero, type:\"dropdown\", handleChange: (value) => setGenero( decode(value) ) },\r\n        { key:'eps', value:eps, type:\"dropdown\", handleChange: (value) => setEps( decode(value) ) }\r\n      ];\r\n\r\n      return( state )\r\n\r\n    }      \r\n    get state () { return this.getState({ nomb:'', ape:'', id:'', gen:'', eps_:'' }) } // Getter state\r\n\r\n    getData = () => {                                              // METHOD DATA\r\n      /* Fetch */\r\n      const arrayFetch = useFetch(urlApiPacientes);\r\n      useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        const array = useMemo(() => {\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data]);\r\n\r\n      /* Query */\r\n      let [ queryCode, setQueryCode ] = useState('');\r\n      let [ queryIdentification, setQueryIdentification ] = useState('');\r\n      let [ queryName, setQueryName ] = useState('');\r\n      let [ queryLastname, setQueryLastname ] = useState('');\r\n      let [ queryGender, setQueryGender ] = useState('');\r\n      let [ queryEps, setQueryEps ] = useState('');\r\n      const queries = [queryCode,queryIdentification,queryName,queryLastname,queryGender,queryEps];\r\n      const setQueries = [setQueryCode,setQueryIdentification,setQueryName,setQueryLastname,setQueryGender,setQueryEps];\r\n      const arrayFiltered = useMemo( () => getPacientesFiltered(array,queryCode,queryIdentification,queryName,queryLastname,queryGender,queryEps), [array,queryCode,queryIdentification,queryName,queryLastname,queryGender,queryEps] );\r\n      \r\n      /* Pagination */\r\n      const [itemsPerPage, setItemPerPage ] = useState(10);           // Se define el número de items por página\r\n      const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);  // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n      const numPages = Math.floor(arrayFiltered.length/itemsPerPage); // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n      const resPages = arrayFiltered.length%itemsPerPage;             // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n      let indexPages = [];\r\n      let activePage = [true];                                        // [true]\r\n      if(resPages !== 0 ){\r\n        for(let i = 0; i <= numPages; i++) { \r\n          indexPages.push(i);                                         // [0,1,2,3]\r\n          if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n        }\r\n      } else if(resPages === 0 ){\r\n        for(let i = 0; i < numPages; i++) { \r\n          indexPages.push(i);                                         // [0,1,2,3]\r\n          if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n        }\r\n      }\r\n      const [activePages, setActivePages] = useState(activePage);     // [true,false,false,false]\r\n          \r\n      return({ queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages })\r\n    }\r\n    get data () { return this.getData() }                             // Getter data\r\n\r\n    getSort = () => {                                                 // METHOD SORT\r\n      /* Sort */\r\n      const [sortBy, setSortBy] = useState(0);\r\n      let SortByProperty = () => {};\r\n      switch (sortBy) { \r\n          case 1: SortByProperty = (a,b) => { return a.id - b.id }; break;                                            // Sort by id up\r\n          case 2: SortByProperty = (a,b) => { return b.id - a.id }; break;                                            // Sort by id down\r\n          case 3: SortByProperty = (a,b) => { return a.paciente.identificacion.localeCompare(b.paciente.identificacion) }; break;  // Sort by identificacion up\r\n          case 4: SortByProperty = (a,b) => { return b.paciente.identificacion.localeCompare(a.paciente.identificacion) }; break;  // Sort by identificacion down\r\n          case 5: SortByProperty = (a,b) => { return a.paciente.nombre.localeCompare(b.paciente.nombre) }; break;     // Sort by nombre up\r\n          case 6: SortByProperty = (a,b) => { return b.paciente.nombre.localeCompare(a.paciente.nombre) }; break;     // Sort by nombre down\r\n          case 7: SortByProperty = (a,b) => { return a.paciente.apellido.localeCompare(b.paciente.apellido) }; break; // Sort by apellido up\r\n          case 8: SortByProperty = (a,b) => { return b.paciente.apellido.localeCompare(a.paciente.apellido) }; break; // Sort by apellido down\r\n          case 9: SortByProperty = (a,b) => { return a.paciente.genero.localeCompare(b.paciente.genero) }; break;     // Sort by genero up\r\n          case 10: SortByProperty = (a,b) => { return b.paciente.genero.localeCompare(a.paciente.genero) }; break;    // Sort by genero down\r\n          case 11: SortByProperty = (a,b) => { return a.paciente.eps.localeCompare(b.paciente.eps) }; break;          // Sort by eps up\r\n          case 12: SortByProperty = (a,b) => { return b.paciente.eps.localeCompare(a.paciente.eps) }; break;          // Sort by eps down\r\n          default: SortByProperty = () => {}; break;                  // Default case to avoid errors\r\n      }\r\n\r\n      return({ SortByProperty, setSortBy })\r\n    }\r\n    get sort () { return this.getSort() }                             // Getter data\r\n\r\n  }\r\n\r\nexport class Doctor extends User {\r\n    constructor({ nombre='', apellido='', identificacion='', genero='', especialidad='' }) {\r\n        super({ nombre:nombre, apellido:apellido });\r\n        this.identificacion = {identificacion}.identificacion;\r\n        this.genero = {genero}.genero;\r\n        this.especialidad = {especialidad}.especialidad;\r\n    }\r\n\r\n    getApi = () => { return( urlApiDoctores )}                     // METHOD API\r\n    get api () { return this.getApi() }                            // Getter api\r\n\r\n    getUser () { return new User(this.nombre, this.apellido) }     // METHOD USER\r\n    get user () { return this.getUser() }                          // Getter user\r\n\r\n    getTitles = () => {                                            // METHOD TITLES\r\n      let titles = [];\r\n      this.state.forEach((parameter, index) => { \r\n          titles[index] = { \r\n              title:parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1), \r\n              type:parameter.type \r\n          }\r\n      });\r\n\r\n      // let placeholders = ['Código'];\r\n      let placeholders = [];\r\n      titles.forEach(item => { placeholders.push(item.title) } );\r\n\r\n      return({ titles, placeholders })\r\n    }                          \r\n    get titles () { return this.getTitles() }                      // Getter titles\r\n\r\n    getState = ({ nomb='', ape='', id='', gen='', esp='' }) => { // METHOD STATE\r\n      const [nombre, setNombre] = useState( nomb );                // Input nombre state\r\n      const [apellido, setApellido] = useState( ape );             // Input apellido state\r\n      const [identificacion, setIdentificacion] = useState( id );  // Input identificacion state\r\n      const [genero, setGenero] = useState( gen );                 // Select genero state\r\n      const [especialidad, setEspecialidad] = useState( esp );     // Select especialidad state\r\n      const state = [\r\n        { key:'nombre', value:nombre, type:\"text\", handleChange: (value) => setNombre( decode(value) ) },\r\n        { key:'apellido', value:apellido, type:\"text\", handleChange: (value) => setApellido( decode(value) ) },\r\n        { key:'identificacion', value:identificacion, type:\"number\", handleChange: (value) => setIdentificacion( decode(value) ) },\r\n        { key:'genero', value:genero, type:\"dropdown\", handleChange: (value) => setGenero( decode(value) ) },\r\n        { key:'especialidad', value:especialidad, type:\"dropdown\", handleChange: (value) => setEspecialidad( decode(value) ) }\r\n      ];\r\n\r\n      return( state )\r\n    }      \r\n    get state () { return this.getState({ nomb:'', ape:'', id:'', gen:'', esp:'' }) } // Getter state\r\n\r\n    getData = () => {                                               // METHOD DATA\r\n      /* Fetch */\r\n      const arrayFetch = useFetch(urlApiDoctores);\r\n      useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        const array = useMemo(() => {\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data]);\r\n  \r\n      /* Query */\r\n      let [ queryCode, setQueryCode ] = useState('');\r\n      let [ queryName, setQueryName ] = useState('');\r\n      let [ queryLastname, setQueryLastname ] = useState('');\r\n      let [ querySpeciality, setQuerySpeciality ] = useState('');\r\n      const queries = [queryCode,queryName,queryLastname,querySpeciality];\r\n      const setQueries = [setQueryCode,setQueryName,setQueryLastname,setQuerySpeciality];\r\n      const arrayFiltered = useMemo( () => getDoctoresFiltered(array,queryCode,queryName,queryLastname,querySpeciality), [array,queryCode,queryName,queryLastname,querySpeciality] );\r\n      \r\n      /* Pagination */\r\n      const [itemsPerPage, setItemPerPage ] = useState(10);           // Se define el número de items por página\r\n      const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);  // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n      const numPages = Math.floor(arrayFiltered.length/itemsPerPage); // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n      const resPages = arrayFiltered.length%itemsPerPage;             // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n      let indexPages = [];\r\n      let activePage = [true];                                        // [true]\r\n      if(resPages !== 0 ){\r\n        for(let i = 0; i <= numPages; i++) { \r\n          indexPages.push(i);                                          // [0,1,2,3]\r\n          if(i < 0) { activePage.push(false); }                        // [true,false,false,false]\r\n        }\r\n      } else if(resPages === 0 ){\r\n        for(let i = 0; i < numPages; i++) { \r\n          indexPages.push(i);                                          // [0,1,2,3]\r\n          if(i < 0) { activePage.push(false); }                        // [true,false,false,false]\r\n        }\r\n      }\r\n      const [activePages, setActivePages] = useState(activePage);      // [true,false,false,false]\r\n        \r\n      return({ queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages })\r\n    }\r\n    get data () { return this.getData() }                              // Getter data\r\n\r\n    getSort = () => {                                                  // METHOD SORT\r\n      /* Sort */\r\n      const [sortBy, setSortBy] = useState(0);\r\n      let SortByProperty = () => {};\r\n      switch (sortBy) { \r\n          case 1: SortByProperty = (a,b) => { return a.id - b.id }; break;                                            // Sort by id up\r\n          case 2: SortByProperty = (a,b) => { return b.id - a.id }; break;                                            // Sort by id down\r\n          case 3: SortByProperty = (a,b) => { return a.doctor.nombre.localeCompare(b.doctor.nombre) }; break;         // Sort by nombre up\r\n          case 4: SortByProperty = (a,b) => { return b.doctor.nombre.localeCompare(a.doctor.nombre) }; break;         // Sort by nombre down\r\n          case 5: SortByProperty = (a,b) => { return a.doctor.apellido.localeCompare(b.doctor.apellido) }; break;     // Sort by apellido up\r\n          case 6: SortByProperty = (a,b) => { return b.doctor.apellido.localeCompare(a.doctor.apellido) }; break;     // Sort by apellido down\r\n          case 7: SortByProperty = (a,b) => { return a.doctor.identificacion.localeCompare(b.doctor.identificacion) }; break; // Sort by identificacion up\r\n          case 8: SortByProperty = (a,b) => { return b.doctor.identificacion.localeCompare(a.doctor.identificacion) }; break; // Sort by identificacion down\r\n          case 9: SortByProperty = (a,b) => { return a.doctor.genero.localeCompare(b.doctor.genero) }; break;              // Sort by genero up\r\n          case 10: SortByProperty = (a,b) => { return b.doctor.genero.localeCompare(a.doctor.genero) }; break;             // Sort by genero down\r\n          case 11: SortByProperty = (a,b) => { return a.doctor.especialidad.localeCompare(b.doctor.especialidad) }; break; // Sort by especialidad up\r\n          case 12: SortByProperty = (a,b) => { return b.doctor.especialidad.localeCompare(a.doctor.especialidad) }; break; // Sort by especialidad down\r\n          default: SortByProperty = () => {}; break;                  // Default case to avoid errors\r\n      }\r\n\r\n      return({ SortByProperty, setSortBy })\r\n    }\r\n    get sort () { return this.getSort() }                              // Getter data\r\n\r\n  }","import { useState, useMemo, useEffect }  from \"react\";\r\nimport { Alert } from '../components/alert/Alert.js';\r\nimport { useFetch } from '../hooks/useFetch.js';\r\nimport { getEspecialidadesFiltered } from '../components/selectors/getEspecialidadesFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\n// const Alert = lazy(() => import('../components/alert/Alert.js'));\r\n\r\nconst urlApi = process.env.REACT_APP_API_ESPECIALIDADES;\r\n\r\nexport class Especialidad {\r\n    constructor({ nombre='' }) {\r\n        this.nombre = {nombre}.nombre;\r\n    }\r\n\r\n    getApi = () => { return( urlApi )}                            // METHOD API\r\n    get api () { return this.getApi() }                           // Getter api\r\n\r\n    getTitles = () => {                                           // METHOD TITLES\r\n        let titles = [];\r\n        this.state.forEach((parameter, index) => {\r\n            titles[index] = {\r\n                title:parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1),\r\n                type:parameter.type\r\n            }\r\n        });\r\n\r\n        // let placeholders = ['Código'];\r\n        let placeholders = [];\r\n        titles.forEach(item => { placeholders.push(item.title) } );\r\n\r\n        return({ titles, placeholders })\r\n    }\r\n    get titles () { return this.getTitles() }                     // Getter titles\r\n\r\n    getState = ({ nomb='' }) => {                            // Method\r\n        const [nombre, setNombre] = useState( nomb );             // Input nombre state\r\n        const state = [\r\n          { key:'nombre', value:nombre, type:\"text\", handleChange: (value) => setNombre( decode(value) ) }\r\n        ];\r\n\r\n        return( state )\r\n    }\r\n    get state () { return this.getState({ nomb:'' }) }            // Getter state\r\n\r\n    getData = () => {                                             // METHOD DATA\r\n        /* Fetch */\r\n        const arrayFetch = useFetch(urlApi);\r\n        useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        const array = useMemo(() => {\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data]);\r\n\r\n        /* Query */\r\n        let [ queryCode, setQueryCode ] = useState('');\r\n        let [ queryName, setQueryName ] = useState('');\r\n        const queries = [queryCode,queryName];\r\n        const setQueries = [setQueryCode,setQueryName];\r\n        const arrayFiltered = useMemo( () => getEspecialidadesFiltered(array,queryCode,queryName), [array,queryCode,queryName] );\r\n\r\n        /* Pagination */\r\n        const [itemsPerPage, setItemsPerPage ] = useState(10);          // Se define el número de items por página\r\n        const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);  // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n        const numPages = Math.floor(arrayFiltered.length/itemsPerPage); // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n        const resPages = arrayFiltered.length%itemsPerPage;             // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n        let indexPages = [];\r\n        let activePage = [true];                                        // [true]\r\n        if(resPages !== 0 ){\r\n        for(let i = 0; i <= numPages; i++) {\r\n            indexPages.push(i);                                         // [0,1,2,3]\r\n            if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n        }\r\n        } else if(resPages === 0 ){\r\n        for(let i = 0; i < numPages; i++) {\r\n            indexPages.push(i);                                         // [0,1,2,3]\r\n            if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n        }\r\n        }\r\n        const [activePages, setActivePages] = useState(activePage);     // [true,false,false,false]\r\n\r\n        return({ queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages })\r\n    }\r\n    get data () { return this.getData() }                              // Getter data\r\n\r\n    getSort = () => {                                                  // METHOD SORT\r\n        /* Sort */\r\n        const [sortBy, setSortBy] = useState(0);\r\n        let SortByProperty = () => {};\r\n        switch (sortBy) {\r\n            case 1: SortByProperty = (a,b) => { return a.id - b.id }; break;                                                // Sort by id up\r\n            case 2: SortByProperty = (a,b) => { return b.id - a.id }; break;                                                // Sort by id down\r\n            case 3: SortByProperty = (a,b) => { return a.especialidad.nombre.localeCompare(b.especialidad.nombre) }; break; // Sort by nombre up\r\n            case 4: SortByProperty = (a,b) => { return b.especialidad.nombre.localeCompare(a.especialidad.nombre) }; break; // Sort by nombre down\r\n            default: SortByProperty = () => {}; break;                 // Default case to avoid errors\r\n        }\r\n\r\n        return({ SortByProperty, setSortBy })\r\n    }\r\n    get sort () { return this.getSort() }                              // Getter data\r\n\r\n}","import { useState, useMemo, useEffect }  from \"react\";\r\nimport { Alert } from '../components/alert/Alert.js';\r\nimport { useFetch } from '../hooks/useFetch.js';\r\nimport { getConsultoriosFiltered } from '../components/selectors/getConsultoriosFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\n// const Alert = lazy(() => import('../components/alert/Alert.js'));\r\n\r\nconst urlApi = process.env.REACT_APP_API_CONSULTORIOS;\r\n\r\nexport class Consultorio {\r\n    constructor({ numero='', nombre='' }) {\r\n        this.numero = {numero}.numero;\r\n        this.nombre = {nombre}.nombre;\r\n    }\r\n\r\n    getApi = () => { return( urlApi )}                               // METHOD API\r\n    get api () { return this.getApi() }                              // Getter api\r\n\r\n    getTitles = () => {                                              // METHOD TITLES\r\n        let titles = [];\r\n        this.state.forEach((parameter, index) => { \r\n            titles[index] = { \r\n                title:parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1), \r\n                type:parameter.type \r\n            }\r\n        });\r\n\r\n        // let placeholders = ['Código'];\r\n        let placeholders = [];\r\n        titles.forEach(item => { placeholders.push(item.title) } );\r\n\r\n        return({ titles, placeholders })\r\n    }                          \r\n    get titles () { return this.getTitles() }                        // Getter titles\r\n\r\n    getState = ({ num='', nomb='' }) => {                   // METHOD STATE\r\n        const [ numero, setNumero ] = useState( num );               // Input número state\r\n        const [ nombre, setNombre ] = useState( nomb );              // Input nombre state\r\n        const state = [\r\n          { key:'numero', value:numero, type:'number', handleChange: (value) => setNumero( decode(value) ) },\r\n          { key:'nombre', value:nombre, type:'text', handleChange: (value) => setNombre( decode(value) ) }\r\n        ];\r\n        \r\n        return( state )\r\n    }      \r\n    get state () { return this.getState({ num:'', nomb:'' }) }       // Getter state\r\n\r\n    getData = () => {                                                // METHOD DATA\r\n        /* Fetch */\r\n        const arrayFetch = useFetch(urlApi);\r\n        useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        const array = useMemo(() => {\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data]);\r\n        \r\n        /* Query */\r\n        let [ queryCode, setQueryCode ] = useState('');\r\n        let [ queryNumber, setQueryNumber ] = useState('');\r\n        let [ queryName, setQueryName ] = useState('');\r\n        const queries = [ queryCode,queryNumber,queryName ];\r\n        const setQueries = [ setQueryCode,setQueryNumber,setQueryName ];\r\n        const arrayFiltered = useMemo( () => getConsultoriosFiltered(array,queryCode,queryNumber,queryName), [array,queryCode,queryNumber,queryName] );\r\n        \r\n        /* Pagination */\r\n        const [itemsPerPage, setItemsPerPage ] = useState(10);          // Se define el número de items por página\r\n        const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);  // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n        const numPages = Math.floor(arrayFiltered.length/itemsPerPage); // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n        const resPages = arrayFiltered.length%itemsPerPage;             // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n        \r\n        let indexPages = [];\r\n        let activePage = [true];                                       // [true]\r\n        if(resPages !== 0 ){\r\n            for(let i = 0; i <= numPages; i++) { \r\n            indexPages.push(i);                                        // [0,1,2,3]\r\n            if(i < 0) { activePage.push(false); }                      // [true,false,false,false]\r\n            }\r\n        } else if(resPages === 0 ){\r\n            for(let i = 0; i < numPages; i++) { \r\n            indexPages.push(i);                                        // [0,1,2,3]\r\n            if(i < 0) { activePage.push(false); }                      // [true,false,false,false]\r\n            }\r\n        }\r\n        const [activePages, setActivePages] = useState(activePage);    // [true,false,false,false]\r\n        \r\n        return({ queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages })\r\n    }\r\n    get data () { return this.getData() }                              // Getter data\r\n\r\n    getSort = () => {                                                  // METHOD SORT\r\n        /* Sort */\r\n        const [sortBy, setSortBy] = useState(0);\r\n        let SortByProperty = () => {};\r\n        switch (sortBy) { \r\n            case 1: SortByProperty = (a,b) => { return a.id - b.id }; break;                                                // Sort by id up\r\n            case 2: SortByProperty = (a,b) => { return b.id - a.id }; break;                                                // Sort by id down\r\n            case 3: SortByProperty = (a,b) => { return a.consultorio.numero - b.consultorio.numero }; break;                // Sort by numero up\r\n            case 4: SortByProperty = (a,b) => { return b.consultorio.numero - a.consultorio.numero }; break;                // Sort by numero down\r\n            case 5: SortByProperty = (a,b) => { return a.consultorio.nombre.localeCompare(b.consultorio.nombre) }; break;   // Sort by nombre up\r\n            case 6: SortByProperty = (a,b) => { return b.consultorio.nombre.localeCompare(a.consultorio.nombre) }; break;   // Sort by nombre down\r\n            default: SortByProperty = () => {}; break;                  // Default case to avoid errors\r\n        }\r\n\r\n        return({ SortByProperty, setSortBy })\r\n    }\r\n    get sort () { return this.getSort() }                              // Getter data\r\n\r\n}","import { useState, useMemo, useEffect }  from \"react\";\r\nimport { Alert } from '../components/alert/Alert.js';\r\nimport { useFetch } from '../hooks/useFetch.js';\r\nimport { Especialidad } from './Especialidad.js';\r\nimport { Consultorio } from './Consultorio.js';\r\nimport { Doctor } from './User.js';\r\nimport { getTratamientosFiltered } from '../components/selectors/getTratamientosFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\n// const Alert = lazy(() => import('../components/alert/Alert.js'));\r\n\r\nconst urlApi = process.env.REACT_APP_API_TRATAMIENTOS;\r\n\r\nexport class Tratamiento {\r\n    constructor({ especialidad='', consultorio='', doctor='' }) {\r\n        this.especialidad = new Especialidad({ especialidad:{especialidad} });\r\n        this.consultorio = new Consultorio({ consultorio:{consultorio} });\r\n        this.doctor = new Doctor({ doctor:doctor });\r\n    }\r\n\r\n    getApi = () => { return( urlApi )}                               // METHOD API\r\n    get api () { return this.getApi() }                              // Getter api\r\n\r\n    getTitles = () => {                                              // METHOD TITLES\r\n        let titles = [];\r\n        this.state.forEach((parameter, index) => { \r\n            titles[index] = { \r\n                title:parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1), \r\n                type:parameter.type \r\n            }\r\n        });\r\n\r\n        // let placeholders = ['Código'];\r\n        let placeholders = [];\r\n        titles.forEach(item => { placeholders.push(item.title) } );\r\n\r\n        return({ titles, placeholders })\r\n    }                          \r\n    get titles () { return this.getTitles() }                        // Getter titles\r\n\r\n    getState = ({ esp='', cons='', doc='' }) => {       // Method\r\n        const [especialidad, setEspecialidad] = useState( esp );     // Input especialidad state\r\n        const [consultorio, setConsultorio] = useState( cons );      // Select consultorio state\r\n        const [doctor, setDoctor] = useState( doc );                 // Select doctor state\r\n        const state = [\r\n          { key:'especialidad', value:especialidad, type:\"dropdown\", handleChange: (value) => setEspecialidad( decode(value) ) },\r\n          { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange: (value) => setConsultorio( decode(value) ) },\r\n          { key:'doctor', value:doctor, type:\"dropdown\", handleChange: (value) => setDoctor( decode(value) ) }\r\n        ];\r\n        \r\n        return( state )\r\n    }      \r\n    get state () { return this.getState({ esp:'', cons:'', doc:'' }) } // Getter state\r\n\r\n    getData = () => {                                                // METHOD DATA\r\n        /* Fetch */\r\n        const arrayFetch = useFetch(urlApi);\r\n        useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        const array = useMemo(() => {\r\n            // return (arrayFetch.data && arrayFetch.data.length !== (0 || undefined)) ? arrayFetch.data : [];\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data]);\r\n\r\n        /* Query */\r\n        let [ queryCode, setQueryCode ] = useState('');\r\n        let [ querySpecialty, setQuerySpecialty ] = useState('');\r\n        let [ queryConsultoryRoom, setQueryConsultoryRoom ] = useState('');\r\n        let [ queryDoctor, setQueryDoctor ] = useState('');\r\n        const queries = [queryCode,querySpecialty,queryConsultoryRoom,queryDoctor];\r\n        const setQueries = [setQueryCode,setQuerySpecialty,setQueryConsultoryRoom,setQueryDoctor];\r\n        const arrayFiltered = useMemo( () => getTratamientosFiltered(array,queryCode,querySpecialty,queryConsultoryRoom,queryDoctor), [array,queryCode,querySpecialty,queryConsultoryRoom,queryDoctor] );\r\n        \r\n        /* Pagination */\r\n        const [itemsPerPage, setItemsPerPage ] = useState(10);          // Se define el número de items por página\r\n        const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);  // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n        const numPages = Math.floor(arrayFiltered.length/itemsPerPage); // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n        const resPages = arrayFiltered.length%itemsPerPage;             // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n        let indexPages = [];\r\n        let activePage = [true];                                        // [true]\r\n        if(resPages !== 0 ){\r\n        for(let i = 0; i <= numPages; i++) { \r\n            indexPages.push(i);                                         // [0,1,2,3]\r\n            if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n        }\r\n        } else if(resPages === 0 ){\r\n        for(let i = 0; i < numPages; i++) { \r\n            indexPages.push(i);                                         // [0,1,2,3]\r\n            if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n        }\r\n        }\r\n        const [activePages, setActivePages] = useState(activePage);     // [true,false,false,false]\r\n    \r\n        return({ queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages })\r\n    }\r\n    get data () { return this.getData() }                              // Getter data\r\n\r\n    getSort = () => {                                                  // METHOD SORT\r\n        /* Sort */\r\n        const [sortBy, setSortBy] = useState(0);\r\n        let SortByProperty = () => {};\r\n        switch (sortBy) { \r\n            case 1: SortByProperty = (a,b) => { return a.id - b.id }; break;                                                // Sort by id up\r\n            case 2: SortByProperty = (a,b) => { return b.id - a.id }; break;                                                // Sort by id down\r\n            case 3: SortByProperty = (a,b) => { return a.tratamiento.especialidad.localeCompare(b.tratamiento.especialidad) }; break; // Sort by especialidad up\r\n            case 4: SortByProperty = (a,b) => { return b.tratamiento.especialidad.localeCompare(a.tratamiento.especialidad) }; break; // Sort by especialidad down\r\n            case 5: SortByProperty = (a,b) => { return a.tratamiento.consultorio.localeCompare(b.tratamiento.consultorio) }; break;   // Sort by consultorio up\r\n            case 6: SortByProperty = (a,b) => { return b.tratamiento.consultorio.localeCompare(a.tratamiento.consultorio) }; break;   // Sort by consultorio down\r\n            case 7: SortByProperty = (a,b) => { return a.tratamiento.doctor.localeCompare(b.tratamiento.doctor) }; break;   // Sort by doctor name up\r\n            case 8: SortByProperty = (a,b) => { return b.tratamiento.doctor.localeCompare(a.tratamiento.doctor) }; break;   // Sort by doctor name down\r\n            default: SortByProperty = () => {}; break;                 // Default case to avoid errors\r\n        }\r\n\r\n        return({ SortByProperty, setSortBy })\r\n    }\r\n    get sort () { return this.getSort() }                              // Getter data\r\n\r\n}","import { useState, useMemo, useEffect }  from \"react\";\r\nimport { Alert } from '../components/alert/Alert.js';\r\nimport { useFetch } from '../hooks/useFetch.js';\r\nimport { Paciente } from './User.js';\r\nimport { Tratamiento } from './Tratamiento.js';\r\nimport { Consultorio } from './Consultorio.js';\r\nimport { Doctor } from './User.js';\r\nimport { getDate } from '../helpers/getDate.js';\r\nimport { getTime } from '../helpers/getTime.js';\r\nimport { getCitasFiltered } from '../components/selectors/getCitasFiltered.js';\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_CITAS;\r\n\r\nexport class Cita {\r\n    constructor({ paciente='', consultorio='', doctor='', tratamiento='' }) {\r\n        this.paciente = new Paciente({ paciente:{paciente} });\r\n        this.fecha = getDate[2] + \"/\" + getDate[1] + \"/\" + getDate[0];\r\n        this.hora = getTime;\r\n        this.consultorio = new Consultorio({ consultorio:{consultorio} });\r\n        this.doctor = new Doctor({ doctor:{doctor} });\r\n        this.tratamiento = new Tratamiento({ tratamiento:{tratamiento} });\r\n    }\r\n\r\n    getApi = () => { return( urlApi )}                            // METHOD API\r\n    get api () { return this.getApi() }                           // Getter api\r\n\r\n    getTitles = () => {                                           // METHOD TITLES\r\n        let titles = [];\r\n        this.state.forEach((parameter, index) => { \r\n            titles[index] = { \r\n                title:parameter.key.charAt(0).toUpperCase() + parameter.key.slice(1), \r\n                type:parameter.type \r\n            }\r\n        });\r\n\r\n        // let placeholders = ['Código'];\r\n        let placeholders = [];\r\n        titles.forEach(item => { placeholders.push(item.title) } );\r\n\r\n        return({ titles, placeholders })\r\n    }                          \r\n    get titles () { return this.getTitles() }                     // Getter titles\r\n\r\n    getState = ({ pac='', cons='', doc='', trat='' }) => {                             // Method\r\n        const [paciente, setPaciente] = useState( pac );          // Select paciente\r\n        let [fecha, setFecha] = useState(getDate[2] + \"-\" + getDate[1] + \"-\" + getDate[0]);\r\n        let [hora, setHora] = useState(getTime);\r\n        const [consultorio, setConsultorio] = useState( cons );   // Select consultorio\r\n        const [doctor, setDoctor] = useState( doc );              // Select doctor\r\n        const [tratamiento, setTratamiento] = useState( trat );   // Select tratamiento      \r\n        const state = [\r\n          { key:'paciente', value:paciente, type:\"dropdown\", handleChange: (value) => setPaciente( decode(value) ) },\r\n          { key:'fecha', value:fecha, type:\"date\", handleChange: (value) => setFecha( decode(value) ) },\r\n          { key:'hora', value:hora, type:\"time\", handleChange: (value) => setHora( decode(value) ) },\r\n          { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange: (value) => setConsultorio( decode(value) ) },\r\n          { key:'doctor', value:doctor, type:\"dropdown\", handleChange: (value) => setDoctor( decode(value) ) },\r\n          { key:'tratamiento', value:tratamiento, type:\"dropdown\", handleChange: (value) => setTratamiento( decode(value) ) }\r\n        ];\r\n        \r\n        return( state )\r\n    }      \r\n    get state () { return this.getState({ pac:'', cons:'', doc:'', trat:'' }) }                        // Getter state\r\n\r\n    getData = () => {                                              // METHOD DATA\r\n        /* Fetch */\r\n        let arrayFetch = useFetch(urlApi);\r\n\r\n        useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        const array = useMemo(() => {\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data]);\r\n\r\n        /* Query */\r\n        let [ queryCode, setQueryCode ] = useState('');\r\n        let [ queryPatient, setQueryPatient ] = useState('');\r\n        let [ queryDate, setQueryDate ] = useState('');\r\n        let [ queryTime, setQueryTime ] = useState('');\r\n        let [ queryConsultoryRoom, setQueryConsultoryRoom ] = useState('');\r\n        let [ queryDoctor, setQueryDoctor ] = useState('');\r\n        let [ queryTreatment, setQueryTreatment ] = useState('');\r\n        const queries = [queryCode,queryPatient,queryDate,queryTime,queryConsultoryRoom,queryDoctor,queryTreatment];\r\n        const setQueries = [setQueryCode,setQueryPatient,setQueryDate,setQueryTime,setQueryConsultoryRoom,setQueryDoctor,setQueryTreatment];\r\n        const arrayFiltered = useMemo( () => getCitasFiltered(array,queryCode,queryPatient,queryDate,queryTime,queryConsultoryRoom,queryDoctor,queryTreatment), [array,queryCode,queryPatient,queryDate,queryTime,queryConsultoryRoom,queryDoctor,queryTreatment] );\r\n        \r\n        /* Pagination */\r\n        const [itemsPerPage, setItemsPerPage ] = useState(10);              // Se define el número de items por página\r\n        const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);      // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n        const numPages = Math.floor(arrayFiltered.length/itemsPerPage);     // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n        const resPages = arrayFiltered.length%itemsPerPage;                 // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n        let indexPages = [];\r\n        let activePage = [true];                                            // [true]\r\n        if(resPages !== 0 ){\r\n            for(let i = 0; i <= numPages; i++) { \r\n                indexPages.push(i);                                         // [0,1,2,3]\r\n                if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n            }\r\n        } else if(resPages === 0 ){\r\n            for(let i = 0; i < numPages; i++) { \r\n                indexPages.push(i);                                         // [0,1,2,3]\r\n                if(i < 0) { activePage.push(false); }                       // [true,false,false,false]\r\n            }\r\n        }\r\n        const [activePages, setActivePages] = useState(activePage);         // [true,false,false,false]\r\n        \r\n        return({ queries,setQueries,arrayFiltered,indexPage,itemsPerPage,activePages,indexPages,setIndexPage,setActivePages })\r\n    }\r\n    get data () { return this.getData() }                          // Getter data\r\n\r\n    getSort = () => {                                              // METHOD SORT\r\n        /* Sort */\r\n        const [sortBy, setSortBy] = useState(0);\r\n        let SortByProperty = () => {};\r\n        switch (sortBy) { \r\n            case 1: SortByProperty = (a,b) => { return a.id - b.id }; break;                                    // Sort by id up\r\n            case 2: SortByProperty = (a,b) => { return b.id - a.id }; break;                                    // Sort by id down\r\n            case 3: SortByProperty = (a,b) => { return a.cita.paciente.localeCompare(b.cita.paciente) }; break; // Sort by paciente up\r\n            case 4: SortByProperty = (a,b) => { return b.cita.paciente.localeCompare(a.cita.paciente) }; break; // Sort by paciente down\r\n            case 5: SortByProperty = (a,b) => { return a.cita.fecha.localeCompare(b.cita.fecha) }; break;       // Sort by fecha up\r\n            case 6: SortByProperty = (a,b) => { return b.cita.fecha.localeCompare(a.cita.fecha) }; break;       // Sort by fecha down\r\n            case 7: SortByProperty = (a,b) => { return a.cita.hora.localeCompare(b.cita.hora) }; break;         // Sort by hora up\r\n            case 8: SortByProperty = (a,b) => { return b.cita.hora.localeCompare(a.cita.hora) }; break;         // Sort by hora down\r\n            case 9: SortByProperty = (a,b) => { return a.cita.consultorio.localeCompare(b.cita.consultorio) }; break;  // Sort by consultorio up\r\n            case 10: SortByProperty = (a,b) => { return b.cita.consultorio.localeCompare(a.cita.consultorio) }; break; // Sort by consultorio down\r\n            case 11: SortByProperty = (a,b) => { return a.cita.doctor.localeCompare(b.cita.doctor) }; break;    // Sort by doctor up\r\n            case 12: SortByProperty = (a,b) => { return b.cita.doctor.localeCompare(a.cita.doctor) }; break;    // Sort by doctor down\r\n            case 13: SortByProperty = (a,b) => { return a.cita.tratamiento.localeCompare(b.cita.tratamiento) }; break; // Sort by tratamiento up\r\n            case 14: SortByProperty = (a,b) => { return b.cita.tratamiento.localeCompare(a.cita.tratamiento) }; break; // Sort by tratamiento down\r\n            default: SortByProperty = () => {}; break;              // Default case to avoid errors\r\n        }\r\n\r\n        return({ SortByProperty, setSortBy })\r\n    }\r\n    get sort () { return this.getSort() }                           // Getter data\r\n\r\n}","import { Cita } from './Cita.js';\r\nimport { Paciente, Doctor } from './User.js';\r\nimport { Especialidad } from './Especialidad.js';\r\nimport { Consultorio } from './Consultorio.js';\r\nimport { Tratamiento } from './Tratamiento.js';\r\n\r\nexport const Classes = { \r\n                cita: { Classe: Cita },\r\n                paciente: { Classe: Paciente },\r\n                doctor: { Classe: Doctor },\r\n                consultorio: { Classe: Consultorio },\r\n                tratamiento: { Classe: Tratamiento },\r\n                especialidad: { Classe: Especialidad }\r\n}\r\n\r\nexport default Classes;","import { lazy, useMemo }  from \"react\";\r\nimport { Alert } from '../alert/Alert.js';\r\nimport { Dropdown as DropdownClass } from '../../classes/Dropdown.js';\r\nimport { fetchCreate } from '../../helpers/fetchCreate.js';\r\nimport { Classes } from '../../classes/Classes.js';                         // Importing Classes module to access all class definitions\r\n\r\nimport sign from 'jwt-encode';                                              // Para firma con jwt\r\nconst jwtSecretKey = process.env.REACT_APP_JWTSECRET;\r\n\r\nconst Input = lazy(() => import('../forms/inputs/Input.js'));\r\nconst Dropdown = lazy(() => import('../forms/dropdown/Dropdown.js'));\r\n\r\n// --- Componente hijo para memorizar cada dropdown ---\r\nconst DropdownField = ({ property, theme }) => {\r\n  const myDropdown = useMemo( () => new DropdownClass({ classType: property.key }), [property.key] );\r\n  const { array, pagination } = myDropdown.data;\r\n\r\n  return (\r\n    <div className='col px-0'>\r\n      <Dropdown classType={property.key} object={myDropdown} array={array} handleChange={property.handleChange} placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)} pagination={pagination} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"} theme={theme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CreateItem = ({ classType, Icon, isMenuOpen, theme }) => {\r\n  // --- Clase Item\r\n  const objectClass = new Classes[classType].Classe('');                    // Objeto instanciado con la Class correspondiente\r\n  const state = objectClass.state;\r\n  const urlApi = objectClass.api;\r\n  let item = \"\";\r\n\r\n  const handleCreate = (item) => {\r\n    if( state.every( property => property.value !== '') ) {                   // Check for emtpy fields to avoid any empty item\r\n      state.forEach( property => objectClass[property.key] = property.value );// Carga los valores ingresados por el usuario en el objeto\r\n      \r\n      item = `JSON.stringify({                           \r\n        ${Classes[classType].Classe.name.toLowerCase()}: ${JSON.stringify(objectClass)}\r\n      })`; \r\n    } \r\n    if( item.length === 0 ) { Alert({ type:'warning', title:'Debes ingresar todos los datos' }).launch() }\r\n    else { \r\n      fetchCreate(urlApi,item).then(\r\n        async (responseStatus) => {\r\n            if( 200 <= responseStatus && responseStatus <= 299 ) {\r\n              state.forEach( property => { property.handleChange( sign('',jwtSecretKey) ) } );    // Reinicia todas las variables     \r\n\r\n              Alert({ type:'success', title:'Registro exitoso' }).launch();\r\n            } else if( 400 <= responseStatus && responseStatus <= 499 ) {\r\n              Alert({ type:'error', title:'Error en el registro' }).launch();\r\n            } else if( 500 <= responseStatus && responseStatus <= 599 ) {\r\n              Alert({ type:'error', title:'Error en el registro' }).launch();\r\n            }\r\n        },\r\n        (error) => { Alert({ type:'error', title:'Error en el registro' }).launch(); console.log(\"Error en la creación: \",error) }\r\n      ) \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='mt-4 mt-sm-5'>\r\n        <center>\r\n          <h5 className='century-gothic main-color fs-sm-2'>Registrar { classType.charAt(0).toUpperCase() + classType.slice(1) }</h5>\r\n        </center>\r\n        <div className={'container-fluid mt-2 mt-sm-5 pe-0 pe-md-5 px-0 me-0 smooth ' + (isMenuOpen ? ' w-responsive':' px-sm-5 w-100' )}>\r\n          <>\r\n            {\r\n              state.map((property) => {\r\n                return (\r\n                  <div key={'row'+property.key} id={'row'+property.key} className='row'>\r\n                    <>\r\n                      { property.type === 'dropdown' ? <DropdownField property={property} theme={theme} />\r\n                                                    : <div className='col px-0'><Input type={property.type} defaultValue={property.value} handleChange={property.handleChange} placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)} className={'input form-control rounded border-muted border-1 text-muted text-center shadow-sm'} theme={theme} /></div>\r\n                      }\r\n                    </>\r\n                  </div>\r\n                )})\r\n            }\r\n          </>\r\n          <div className='row mt-4 mt-sm-5'>\r\n            <div className='col'>\r\n              <button onClick={ ()=>handleCreate(item) } className={ 'button bg-main-color text-white rounded border-0 py-3 w-50 shadow-sm' }> { 'Registrar' } { <Icon /> } </button>\r\n            </div>\r\n          </div>              \r\n\t\t\t  </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { CreateItem } from '../CreateItem.js';\r\n\r\nexport const CreateItems = ({ classType, Icon, isMenuOpen, theme }) => {\r\n  return ( <CreateItem classType={classType} Icon={Icon} isMenuOpen={isMenuOpen} theme={theme} /> )\r\n}\r\nexport default CreateItems;","const CryptoJS = require('ts.cryptojs256');\n\n/**\n * Default options for JWT signature\n */\nconst defaultHeader = { alg: 'HS256', typ: 'JWT' };\n\n/**\n * Return a base64 URL\n *\n * @param {string} data - some data to be base64 encoded\n * @return {string} A base64url encoded string\n */\nfunction base64url (data) {\n  return CryptoJS.enc.Base64\n    .stringify(data)\n    .replace(/=+$/, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\n/**\n * Create a very basic JWT signature\n *\n * @param {Object} data - the data object you want to have signed\n * @param {string} secret - secret to use to sign token with\n * @param {Object} options - JWT header options\n * @return {string} JSON Web Token that has been signed\n */\nfunction sign (data, secret, options = {}) {\n  const header = Object.assign(defaultHeader, options);\n  if (header.alg !== 'HS256' && header.typ !== 'JWT') {\n    throw new Error('jwt-encode only support the HS256 algorithm and the JWT type of hash');\n  }\n\n  const encodedHeader = encode(header);\n  const encodedData = encode(data);\n\n  let signature = `${encodedHeader}.${encodedData}`;\n  signature = CryptoJS.HmacSHA256(signature, secret);\n  signature = base64url(signature);\n  return `${encodedHeader}.${encodedData}.${signature}`;\n}\n\n/**\n *  Safely base64url encode a JS Object in a way that is UTF-8 safe\n *\n *  @param {Object} Javascript object payload to be encoded\n *  @return {string} utf-8 safe base64url encoded payload\n */\nfunction encode (data) {\n  const stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data));\n  return base64url(stringifiedData);\n}\n\nmodule.exports = sign;\n","export const getTratamientosFiltered = ( array,code='',specialty='',consultoryRoom='',doctor='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.tratamiento.especialidad.toLowerCase().includes(specialty.toLowerCase()) && item.tratamiento.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase()) && item.tratamiento.doctor.toLowerCase().includes(doctor.toLowerCase()) );\r\n}","export const getEspecialidadesFiltered = ( array,code='',name='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.especialidad.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { lazy } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nconst Modal = lazy(() => import('../components/modal/Modal.js'));\r\nconst Logo = lazy(() => import('../components/icons/logo/Logo.js'));\r\nconst Success = lazy(() => import('../components/icons/alert/Success.js'));\r\nconst Warning = lazy(() => import('../components/icons/alert/Warning.js'));\r\nconst Error = lazy(() => import('../components/icons/alert/Error.js'));\r\n\r\nexport class Alert {\r\n    constructor({ type='default',title='', message='', buttons='' }) {\r\n        this.type = {type}.type;\r\n        this.title = {title}.title;\r\n        this.message = {message}.message;\r\n        this.buttons = {buttons}.buttons;\r\n    }\r\n   \r\n    launch = () => {       \r\n        const icons = {\r\n            default: { Icon:Logo, iconColor:'#5285c5' },\r\n            success: { Icon:Success, iconColor:'#0f0' },\r\n            warning: { Icon:Warning, iconColor:'#f8bb86' },\r\n            error: { Icon:Error, iconColor:'#f00' }\r\n        }\r\n\r\n        if( !document.getElementById('modal') ) { document.getElementById('root').insertAdjacentHTML('afterend',`<div id=\"modal\"></div>`); } // Create element Alert in the body if there's no one\r\n\r\n        const root = createRoot( document.getElementById('modal') );\r\n        root.render( <Modal Icon={icons[this.type].Icon} iconColor={icons[this.type].iconColor} title={this.title} fontFamily={'century-gothic'} /> );\r\n    }\r\n}","import { Alert as AlertClass } from '../../classes/Alert.js';\r\n\r\nexport const Alert = ({ type, title, message, buttons }) => {\r\n    return ( new AlertClass({ type:type, title:title, message:message, buttons:buttons }) )\r\n}","export const getDoctoresFiltered = ( array,code='',name='',lastname='',speciality='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.doctor.nombre.toLowerCase().includes(name.toLowerCase()) && item.doctor.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.doctor.especialidad.toLowerCase().includes(speciality.toLowerCase()) );\r\n}","export const getCitasFiltered = ( array,code='',patient='',date='',time='',consultoryRoom='',doctor='',treatment='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.cita.paciente.toLowerCase().includes(patient.toLowerCase()) && item.cita.fecha.toLowerCase().includes(date.toLowerCase()) && item.cita.hora.toLowerCase().includes(time.toLowerCase()) && item.cita.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase())  && item.cita.doctor.toLowerCase().includes(doctor.toLowerCase()) && item.cita.tratamiento.toLowerCase().includes(treatment.toLowerCase()) );\r\n}","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import { useState, useEffect, useMemo } from \"react\";\r\nimport { Alert } from '../components/alert/Alert.js';\r\nimport { useFetch } from '../hooks/useFetch.js';\r\n\r\nconst apiPacientes = process.env.REACT_APP_API_PACIENTES;           // Apis para obtención de los datos\r\nconst apiDoctores = process.env.REACT_APP_API_DOCTORES;\r\nconst apiConsultorios = process.env.REACT_APP_API_CONSULTORIOS;\r\nconst apiTratamientos = process.env.REACT_APP_API_TRATAMIENTOS;\r\nconst apiEpss = process.env.REACT_APP_API_EPSS;\r\nconst apiGeneros  = process.env.REACT_APP_API_GENEROS;\r\nconst apiEspecialidades  = process.env.REACT_APP_API_ESPECIALIDADES;\r\n\r\nexport class Dropdown {\r\n    constructor({ classType='' }) {\r\n        this.classType = {classType}.classType;\r\n    }\r\n\r\n    getValue = ({ defaultValue='' }) => {              // METHOD VALUE\r\n        let [value, setValue] = useState( defaultValue );\r\n        \r\n        return ({ value, setValue })\r\n    }\r\n    get value () { return this.getValue({ defaultValue:'' }) }      // Getter value\r\n\r\n\r\n    getData = () => {                                               // METHOD DATA\r\n        /* Fetch */\r\n        let array = [];\r\n        let urlApi = '';\r\n        switch(this.classType) { \r\n          case 'paciente': urlApi= apiPacientes; break;\r\n          case 'doctor': urlApi= apiDoctores; break;\r\n          case 'consultorio': urlApi= apiConsultorios; break;\r\n          case 'tratamiento': urlApi= apiTratamientos; break;\r\n          case 'eps': urlApi= apiEpss; break;\r\n          case 'genero': urlApi= apiGeneros; break;\r\n          case 'especialidad': urlApi= apiEspecialidades; break;\r\n          default: urlApi= ''; break;\r\n        };\r\n\r\n        const arrayFetch = useFetch(urlApi);\r\n        useEffect(() => { if(arrayFetch.status >= 400) { Alert({ type:'error', title:'Error en la conexión con la base de datos' }).launch() } },[arrayFetch]);\r\n        array = useMemo(() => {\r\n            return ( (JSON.stringify(arrayFetch.data) && JSON.stringify(arrayFetch.data).length !== (0 || undefined)) ? arrayFetch.data : [] );\r\n        }, [arrayFetch.data ] );\r\n\r\n        /* Pagination */\r\n        const [itemsPerPage, setItemsPerPage ] = useState(5);           // Se define el número de items por página\r\n        const [indexPage, setIndexPage ] = useState([0,itemsPerPage]);  // Se calculan los indices de la paginación para el filtro Slice(x,y) que entrega un rango de los items de x a y\r\n        const numPages = Math.floor(array.length/itemsPerPage);         // Se calcula la cantidad de páginas = cantidad de items/item por página\r\n        const resPages = array.length%itemsPerPage;                     // Se calcula la cantidad de páginas faltantes = cantidad de items%item por página\r\n        let indexPages = [];\r\n        let activePage = [true];                                        // [true]\r\n        if(resPages !== 0 ){\r\n            for(let i = 0; i <= numPages; i++) { \r\n                indexPages.push(i);                                     // [0,1,2,3]\r\n                if(i < 0) { activePage.push(false); }                   // [true,false,false,false]\r\n            }\r\n        } else if(resPages === 0 ){\r\n            for(let i = 0; i < numPages; i++) { \r\n                indexPages.push(i);                                     // [0,1,2,3]\r\n                if(i < 0) { activePage.push(false); }                   // [true,false,false,false]\r\n            }\r\n        }\r\n        const [activePages, setActivePages] = useState(activePage);     // [true,false,false,false]\r\n        const pagination = { itemsPerPage:itemsPerPage, indexPage:indexPage, activePages:activePages, indexPages:indexPages, setIndexPage:setIndexPage, setActivePages:setActivePages }\r\n\r\n        return ({ array, pagination })\r\n    }\r\n    get data () { return this.getData() }                          // Getter data\r\n}","export const getData = async( urlApi ) => {\r\n    let responseFetch = { data: {}, status: 0 };\r\n    await fetch( urlApi )\r\n        .then(response => { responseFetch.status = response.status; return response.json() })\r\n        .then(data => responseFetch.data = data)\r\n        .catch((error) =>{\r\n            if(error.message === 'Failed to fetch') { responseFetch.status = 500 }\r\n        });\r\n    \r\n    return responseFetch;\r\n}","\r\nimport { useState, useEffect } from 'react';\r\nimport { getData } from '../helpers/getData.js';\r\n\r\nexport const useFetch = ( urlApi ) => {\r\n    const [responseFetch, setResponseFetch] = useState({ data: [], status: 0 });\r\n    useEffect( () => { \r\n        getData( urlApi )\r\n            .then( datos => setResponseFetch({ data: datos.data, status: datos.status }) ) \r\n            .catch((error) => console.log(\"Error useFetch: \" + error.message));\r\n    }, []);\r\n\r\n    return responseFetch;\r\n}","export const getPacientesFiltered = ( array,code='',identification='',name='',lastname='',gender='',eps='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.paciente.identificacion.toLowerCase().includes(identification.toLowerCase()) && item.paciente.nombre.toLowerCase().includes(name.toLowerCase()) && item.paciente.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.paciente.genero.toLowerCase().includes(gender.toLowerCase()) && item.paciente.eps.toLowerCase().includes(eps.toLowerCase()) );\r\n}","export const fetchCreate = async ( urlApi,dataApi ) => {\r\n  try {  \r\n    const response = await fetch(urlApi, {\r\n      method: \"POST\",\r\n      body: eval( dataApi ),\r\n      headers: { \"Content-type\": \"application/json\" }\r\n    });\r\n    response.json();\r\n    if(200 <= response.status && response.status <= 299){\r\n      console.log('POST ' + response.status + ' Registro exitoso')\r\n    } else if(400 <= response.status && response.status <= 499){\r\n      console.log('POST ' + response.status + ' Registro fallido: Error en el envío de datos')\r\n    } else if(500 <= response.status && response.status <= 599){\r\n      console.log('POST ' + response.status + ' Registro fallido: Error en el servidor remoto')\r\n    }\r\n  return response.status;\r\n  } catch (error) {\r\n      const errorMessage = error.toString().split(':')[1].trim();\r\n      if(errorMessage === 'Failed to fetch') { console.log('Registro fallido: No hay conexión con la base de datos') } \r\n      else { console.log('Registro fallido: ' + errorMessage) }     \r\n    };\r\n}","export const getConsultoriosFiltered = ( array,code='',number='',name='' ) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.consultorio.numero.toString().includes(number) && item.consultorio.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}"],"names":["CryptoJS","h","f","g","lib","q","m","Base","extend","a","prototype","this","c","mixIn","hasOwnProperty","init","$super","apply","arguments","create","toString","clone","r","WordArray","words","sigBytes","length","k","stringify","concat","d","b","clamp","e","push","ceil","call","slice","random","l","enc","Hex","join","parse","parseInt","substr","n","Latin1","String","fromCharCode","charCodeAt","j","Utf8","decodeURIComponent","escape","Error","unescape","encodeURIComponent","u","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","max","_minBufferSize","min","_doProcessBlock","splice","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","t","HMAC","algo","Math","s","sqrt","pow","SHA256","_hash","p","floor","HmacSHA256","_hasher","_oKey","_iKey","Base64","_map","charAt","indexOf","exports","urlApiPacientes","process","urlApiDoctores","User","constructor","_ref","nombre","apellido","Paciente","_ref2","identificacion","genero","eps","super","getApi","getTitles","titles","state","forEach","parameter","index","title","key","toUpperCase","type","placeholders","item","getState","_ref3","nomb","ape","id","gen","eps_","setNombre","useState","setApellido","setIdentificacion","setGenero","setEps","value","handleChange","decode","getData","arrayFetch","useFetch","useEffect","status","Alert","launch","array","useMemo","JSON","data","undefined","queryCode","setQueryCode","queryIdentification","setQueryIdentification","queryName","setQueryName","queryLastname","setQueryLastname","queryGender","setQueryGender","queryEps","setQueryEps","queries","setQueries","arrayFiltered","getPacientesFiltered","itemsPerPage","setItemPerPage","indexPage","setIndexPage","numPages","resPages","indexPages","activePage","i","activePages","setActivePages","getSort","sortBy","setSortBy","SortByProperty","paciente","localeCompare","api","getUser","user","sort","Doctor","_ref4","especialidad","_ref5","esp","setEspecialidad","querySpeciality","setQuerySpeciality","getDoctoresFiltered","doctor","urlApi","Especialidad","getEspecialidadesFiltered","setItemsPerPage","Consultorio","numero","num","setNumero","queryNumber","setQueryNumber","getConsultoriosFiltered","consultorio","Tratamiento","cons","doc","setConsultorio","setDoctor","querySpecialty","setQuerySpecialty","queryConsultoryRoom","setQueryConsultoryRoom","queryDoctor","setQueryDoctor","getTratamientosFiltered","tratamiento","Classes","cita","Classe","pac","trat","setPaciente","fecha","setFecha","getDate","hora","setHora","getTime","setTratamiento","queryPatient","setQueryPatient","queryDate","setQueryDate","queryTime","setQueryTime","queryTreatment","setQueryTreatment","getCitasFiltered","Input","lazy","Dropdown","DropdownField","property","theme","myDropdown","DropdownClass","classType","pagination","_jsx","className","children","object","placeholder","CreateItem","Icon","isMenuOpen","objectClass","_jsxs","_Fragment","map","defaultValue","onClick","every","name","toLowerCase","fetchCreate","then","async","responseStatus","sign","error","console","log","handleCreate","CreateItems","require","defaultHeader","alg","typ","base64url","replace","encode","module","secret","options","header","Object","assign","encodedHeader","encodedData","signature","code","specialty","consultoryRoom","filter","_id","includes","Modal","Logo","Success","Warning","message","buttons","icons","default","iconColor","success","warning","document","getElementById","insertAdjacentHTML","createRoot","render","fontFamily","AlertClass","lastname","speciality","patient","date","time","treatment","InvalidTokenError","base64UrlDecode","str","output","atob","b64DecodeUnicode","err","jwtDecode","token","pos","part","split","decoded","getValue","setValue","responseFetch","setResponseFetch","fetch","response","json","catch","datos","identification","gender","dataApi","method","body","eval","headers","errorMessage","trim","number"],"sourceRoot":""}