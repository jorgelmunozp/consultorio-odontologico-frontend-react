{"version":3,"file":"static/js/2338.54783779.chunk.js","mappings":"8NAAO,MAAMA,EAAWC,GAA2B,OAAdA,EAAqB,SACP,SAAdA,EAAuB,SAAM,G,aCsClE,MAAMC,GAAOC,EAAAA,EAAAA,MAAK,IAAM,gCAEXC,EAAYC,IAAkH,IAAjH,UAAEC,EAAS,MAAEC,EAAK,KAAEC,EAAO,GAAE,OAAEC,EAAM,MAAEC,EAAK,eAAEC,EAAc,UAAEC,EAAS,UAAEC,EAAY,CAAC,EAAG,IAAG,YAAEC,GAAaT,EAEnI,MAAMU,GAAcC,EAAAA,EAAAA,SAAQ,IACnB,IAAIN,GAAOO,KAAKN,GAAgBO,MAAML,EAAU,GAAIA,EAAU,IACpE,CAACH,EAAOC,EAAgBE,IAGrBM,GAAaC,EAAAA,EAAAA,aAAaC,GAAUT,EAAUS,GAAQ,CAACT,IAGvDU,GAAgBN,EAAAA,EAAAA,SACpB,IACER,EAAKe,IAAI,CAACC,EAAMC,KACd,MAAMC,EAAU,EAAY,EAARD,EACdE,EAAW,EAAY,EAARF,EACfG,EACJ,qEACe,aAAdJ,EAAKK,KAAsB,iBAAmB,kBAEjD,OACEC,EAAAA,EAAAA,KAAA,QAA6BC,UAAWH,EAASI,UAC/CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,EACxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,SACvER,EAAKU,OAERD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,UACEC,UAAU,wFACVI,QAASA,IAAMhB,EAAWO,GAASM,SAElChC,EAAS,WAGd8B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,UACEC,UAAU,wFACVI,QAASA,IAAMhB,EAAWQ,GAAUK,SAEnChC,EAAS,mBAnBT,SAASyB,OA2B1B,CAACjB,EAAMW,IAGT,OACEc,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,EAExDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gCAA+BC,SAAA,CAC3CV,GACDQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8DAIhBhB,EAAYQ,IAAI,CAACC,EAAMC,KAAK,IAAAW,EAAA,OAC3BN,EAAAA,EAAAA,KAAA,OACEO,GAAI,OAAO/B,KAAamB,IAExBM,UAAU,yEAAwEC,UAElFF,EAAAA,EAAAA,KAAC5B,EAAI,CACHI,UAAWA,EACXC,MAAOA,EACPiB,KAAMA,EACNf,OAAQA,EACRK,YAAaA,KARF,QASXsB,EATGZ,EAAKc,WAAG,IAAAF,EAAAA,EAAI,OAAO9B,KAAamB,WAgB/C,GAAec,EAAAA,EAAAA,MAAKnC,E","sources":["helpers/getArrow.js","components/crud/items/ItemsList.js"],"sourcesContent":["export const getArrow = direction => direction === 'up' ? 'â–´' :\r\n                                     direction === 'down' ? 'â–¾' : '';\r\n","// import { lazy, memo, useMemo, useCallback } from 'react';\r\n// import { getArrow } from '../../../helpers/getArrow.js';\r\n\r\n// const Item = lazy(() => import('./Item.js'));\r\n\r\n// export const ItemsList = ({classType, Icons, keys=[], urlApi, array, SortByProperty, setSortBy, indexPage, handleItems }) => {\r\n//   // ðŸ‘‡ Memoriza el array ordenado + paginado\r\n//   const sortedItems = useMemo(() => {\r\n//     return [...array].sort(SortByProperty).slice(indexPage[0], indexPage[1]);\r\n//   }, [array, SortByProperty, indexPage]);\r\n\r\n//   // ðŸ‘‡ Memoriza el handler de orden para que no cambie en cada render\r\n//   const handleSort = useCallback( (order) => setSortBy(order), [setSortBy] );\r\n\r\n//   return (\r\n//     <div className={'container-fluid border overflow-auto px-0' }>\r\n//         {/* ðŸ‘‡ Titles Row */}\r\n//         <div className={'row flex-nowrap bg-main-color'}>\r\n//           { keys.map((item,index) => { return( <span key={'title'+index} className={'bg-main-color border-bottom border-dark text-center pe-3 pe-sm-5' + ( item.type === 'dropdown' ? ' col-6 col-sm-3':' col-4 col-sm-2') }><div className='row bg-main-color justify-content-between'><div className='col-3 col-sm-1 ms-1 ms-sm-3 align-self-center white-color'>{ item.key }</div><div className='col-2'><div className='row lh-1'><button className='border-0 bg-transparent dark-color-hover white-color fs-5 pt-0 pb-0 px-0 ms-2 ms-sm-3' onClick={() => handleSort(1 + (index * 2))}>{getArrow(\"up\")}</button></div><div className='row lh-1'><button className='border-0 bg-transparent dark-color-hover white-color fs-5 pt-0 pb-0 px-0 ms-2 ms-sm-3' onClick={() => handleSort(2 + (index * 2))}>{getArrow(\"down\")}</button></div></div></div></span> )}) }\r\n//           {/* { keys.map((item,index) => { return( <span key={'title'+index} className={'bg-main-color border-bottom border-dark text-center pe-3 pe-sm-5' + ( item.type === 'dropdown' ? ' col-6 col-sm-3':item.title === 'Hora' ? ' col-3 col-sm-1':' col-4 col-sm-2') }><div className='row bg-main-color justify-content-between'><div className='col-3 col-sm-1 align-self-center white-color'>{ item.key }</div><div className='col-2'><div className='row lh-1'><button className='border-0 bg-transparent dark-color-hover white-color fs-5 pt-0 pb-0 px-0 ms-2 ms-sm-3' onClick={()=>setSortBy( 1 + (index * 2) )}>{getArrow(\"up\")}</button></div><div className='row lh-1'><button className='border-0 bg-transparent dark-color-hover white-color fs-5 pt-0 pb-0 px-0 ms-2 ms-sm-3' onClick={()=>setSortBy( 2 + (index * 2) )}>{getArrow(\"down\")}</button></div></div></div></span> )}) } */}\r\n//           <div className='col-2 col-sm-1 bg-main-color border-bottom border-dark'></div>        {/* header botones crud */}\r\n//         </div>\r\n//         {/* ðŸ‘‡ Item Row */}\r\n//         { sortedItems.map((item,index) => { return (\r\n//             <div id={`row${classType}${index}`} key={`row${classType}${index}`} className='row bg-row flex-nowrap border-bottom text-start text-nowrap py-2 w-100'>\r\n//               <Item key={'item'+classType+index} classType={classType} Icons={Icons} item={item} urlApi={urlApi} handleItems={handleItems} />\r\n//             </div>\r\n//             )})\r\n//         }\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default memo(ItemsList);\r\n\r\n\r\nimport { lazy, memo, useMemo, useCallback } from \"react\";\r\nimport { getArrow } from \"../../../helpers/getArrow.js\";\r\n\r\nconst Item = lazy(() => import(\"./Item.js\"));\r\n\r\nexport const ItemsList = ({ classType, Icons, keys = [], urlApi, array, SortByProperty, setSortBy, indexPage = [0, 10], handleItems }) => {\r\n  // ðŸ“Œ Memoriza el array ordenado + paginado\r\n  const sortedItems = useMemo(() => {\r\n    return [...array].sort(SortByProperty).slice(indexPage[0], indexPage[1]);\r\n  }, [array, SortByProperty, indexPage]);\r\n\r\n  // ðŸ“Œ Memoriza el handler de orden para que no cambie\r\n  const handleSort = useCallback((order) => setSortBy(order), [setSortBy]);\r\n\r\n  // ðŸ“Œ Memoriza los headers para evitar re-render innecesario\r\n  const headerColumns = useMemo(\r\n    () =>\r\n      keys.map((item, index) => {\r\n        const sortAsc = 1 + index * 2;\r\n        const sortDesc = 2 + index * 2;\r\n        const colClass =\r\n          \"bg-main-color border-bottom border-dark text-center pe-3 pe-sm-5 \" +\r\n          (item.type === \"dropdown\" ? \"col-6 col-sm-3\" : \"col-4 col-sm-2\");\r\n\r\n        return (\r\n          <span key={`title-${index}`} className={colClass}>\r\n            <div className=\"row bg-main-color justify-content-between\">\r\n              <div className=\"col-3 col-sm-1 ms-1 ms-sm-3 align-self-center white-color\">\r\n                {item.key}\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <div className=\"row lh-1\">\r\n                  <button\r\n                    className=\"border-0 bg-transparent dark-color-hover white-color fs-5 pt-0 pb-0 px-0 ms-2 ms-sm-3\"\r\n                    onClick={() => handleSort(sortAsc)}\r\n                  >\r\n                    {getArrow(\"up\")}\r\n                  </button>\r\n                </div>\r\n                <div className=\"row lh-1\">\r\n                  <button\r\n                    className=\"border-0 bg-transparent dark-color-hover white-color fs-5 pt-0 pb-0 px-0 ms-2 ms-sm-3\"\r\n                    onClick={() => handleSort(sortDesc)}\r\n                  >\r\n                    {getArrow(\"down\")}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </span>\r\n        );\r\n      }),\r\n    [keys, handleSort]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid border overflow-auto px-0\">\r\n      {/* Headers */}\r\n      <div className=\"row flex-nowrap bg-main-color\">\r\n        {headerColumns}\r\n        <div className=\"col-2 col-sm-1 bg-main-color border-bottom border-dark\" />\r\n      </div>\r\n\r\n      {/* Items */}\r\n      {sortedItems.map((item, index) => (\r\n        <div\r\n          id={`row-${classType}-${index}`}\r\n          key={item._id ?? `row-${classType}-${index}`}\r\n          className=\"row bg-row flex-nowrap border-bottom text-start text-nowrap py-2 w-100\"\r\n        >\r\n          <Item\r\n            classType={classType}\r\n            Icons={Icons}\r\n            item={item}\r\n            urlApi={urlApi}\r\n            handleItems={handleItems}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ItemsList);\r\n"],"names":["getArrow","direction","Item","lazy","ItemsList","_ref","classType","Icons","keys","urlApi","array","SortByProperty","setSortBy","indexPage","handleItems","sortedItems","useMemo","sort","slice","handleSort","useCallback","order","headerColumns","map","item","index","sortAsc","sortDesc","colClass","type","_jsx","className","children","_jsxs","key","onClick","_item$_id","id","_id","memo"],"sourceRoot":""}