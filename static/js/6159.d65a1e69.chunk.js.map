{"version":3,"file":"static/js/6159.d65a1e69.chunk.js","mappings":"mPAiBA,MAAMA,GAAkBC,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,MAAK,IAAM,iCAE3BC,EAAcC,IAAmB,IAAlB,SAAEC,GAAUD,EACrC,MAAME,GAAOC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,KAAKH,MAE/C,OAAW,OAAJA,QAAI,IAAJA,GAAAA,EAAMI,QAASC,EAAAA,EAAAA,KAACX,EAAe,IAAMK,GAG/C,GAAeJ,EAAAA,EAAAA,MAAKE,E","sources":["routers/PublicRoute.js"],"sourcesContent":["// import { lazy, memo, useContext } from 'react';\r\n// import { AuthContext } from '../auth/authContext.js'\r\n\r\n// const DashboardRoutes = memo( lazy(() => import('./DashboardRoutes.js')) );\r\n\r\n// export const PublicRoute = ({ children }) => {\r\n//     const { user } = useContext(AuthContext);\r\n\r\n//     return user.logged ? <DashboardRoutes /> : children\r\n// }\r\n// export default memo(PublicRoute);\r\n\r\n\r\n\r\nimport { lazy, memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DashboardRoutes = memo(lazy(() => import(\"./DashboardRoutes.js\")));\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n   const user = useSelector((state) => state.auth.user);   // ðŸ‘ˆ Obtiene el usuario desde Redux\r\n\r\n   return user?.logged ? <DashboardRoutes /> : children;    // ðŸ‘ˆ Si el usuario estÃ¡ logueado, navega al Dashboard\r\n};\r\n\r\nexport default memo(PublicRoute);\r\n"],"names":["DashboardRoutes","memo","lazy","PublicRoute","_ref","children","user","useSelector","state","auth","logged","_jsx"],"sourceRoot":""}