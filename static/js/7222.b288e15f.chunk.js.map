{"version":3,"file":"static/js/7222.b288e15f.chunk.js","mappings":"wOAEO,MAyBP,EAzB6BA,IAA+C,IAA9C,MAAEC,EAAQ,GAAE,oBAAEC,EAAsB,IAAIF,EACpE,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAASH,IAC1CI,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,GAEzCG,GAAaC,EAAAA,EAAAA,SAAQ,IAAMC,KAAKC,IAAI,EAAGD,KAAKE,KAAKX,EAAMY,OAASV,IAAgB,CAACF,EAAMY,OAAQV,IAE/FW,GAAaL,EAAAA,EAAAA,SAAQ,IAAMM,MAAMC,KAAK,CAAEH,OAAQL,GAAc,CAACS,EAAGC,IAAMA,GAAI,CAACV,IAE7EW,GAAeV,EAAAA,EAAAA,SAAQ,KAC3B,MAAMW,EAAQd,EAAcH,EACtBkB,EAAMD,EAAQjB,EACpB,OAAOF,EAAMqB,MAAMF,EAAOC,IACzB,CAACpB,EAAOK,EAAaH,IAElBoB,GAAWC,EAAAA,EAAAA,aAAaC,IAC5B,MAAMC,EAAWhB,KAAKC,IAAI,EAAGD,KAAKiB,IAAIF,EAAWjB,EAAa,IAC9DD,EAAemB,IACd,CAAClB,IAEEoB,GAASJ,EAAAA,EAAAA,aAAY,IAAMD,EAASjB,EAAc,GAAI,CAACA,EAAaiB,IACpEM,GAASL,EAAAA,EAAAA,aAAY,IAAMD,EAASjB,EAAc,GAAI,CAACA,EAAaiB,IAE1E,MAAO,CAAEpB,eAAcC,kBAAiBE,cAAaE,aAAYM,aAAYK,eAAcI,WAAUK,SAAQC,W,aCuC/G,MAAMC,GAAYC,EAAAA,EAAAA,MAAK,IAAM,gCACvBC,GAAYD,EAAAA,EAAAA,MAAK,IAAM,gCACvBE,GAAgBF,EAAAA,EAAAA,MAAK,IAAM,gCAEpBG,EAAYlC,IAA8C,IAA7C,UAAEmC,EAAS,MAAEC,EAAK,MAAEC,EAAK,WAAEC,GAAYtC,EAC/D,MAAMuC,GAAaC,EAAAA,EAAAA,GAAe,CAAEL,eAC5BM,IAAKC,EAAM,KAAEC,EAAI,KAAEC,EAAI,KAAEC,GAASN,GACpC,QAAEO,EAAO,WAAEC,EAAU,cAAEC,GAAkBJ,GACzC,eAAEK,EAAc,UAAEC,GAAcL,EAEhCM,GAAQ1C,EAAAA,EAAAA,SAAQ,IAAmB,OAAbuC,QAAa,IAAbA,EAAAA,EAAiB,GAAI,CAACA,IAG5CI,EAAaC,EAAc,CAAEpD,MAAOkD,EAAOjD,oBAAqB,KAEhEoD,GAAiB7C,EAAAA,EAAAA,SACrB,IAAM,6CAA4C6B,EAAa,eAAiB,SAChF,CAACA,IAGH,OACEiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAWF,EAAeG,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAEpB,KACzCqB,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAoBC,SAAA,EACrDF,EAAAA,EAAAA,KAACzB,EAAS,CACR+B,KAAMzB,EAAMD,GAAW2B,WACvBX,MAAOR,EACPG,QAASA,EACTC,WAAYA,EACZS,UAAW,+BAA8BlB,EAAa,eAAiB,YAIzEiB,EAAAA,EAAAA,KAACvB,EAAS,CACRG,UAAWA,EACXC,MAAOA,EACPO,KAAMA,EACND,OAAQA,EACRzC,MAAOmD,EAAWjC,aAClB8B,eAAgBA,EAChBC,UAAWA,KAIbK,EAAAA,EAAAA,KAACtB,EAAa,CACZ3B,YAAa8C,EAAW9C,YACxBE,WAAY4C,EAAW5C,WACvBe,SAAU6B,EAAW7B,SACrBK,OAAQwB,EAAWxB,OACnBC,OAAQuB,EAAWvB,kBAQ/B,G","sources":["components/pagination/usePagination.js","components/crud/QueryItem.js"],"sourcesContent":["import { useState, useMemo, useCallback } from \"react\";\r\n\r\nexport const usePagination = ({ array = [], initialItemsPerPage = 10 }) => {\r\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const totalPages = useMemo(() => Math.max(1, Math.ceil(array.length / itemsPerPage)), [array.length, itemsPerPage]);\r\n\r\n  const indexPages = useMemo(() => Array.from({ length: totalPages }, (_, i) => i), [totalPages]);\r\n\r\n  const currentItems = useMemo(() => {\r\n    const start = currentPage * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return array.slice(start, end);\r\n  }, [array, currentPage, itemsPerPage]);\r\n\r\n  const goToPage = useCallback((pageIndex) => {\r\n    const safePage = Math.max(0, Math.min(pageIndex, totalPages - 1));\r\n    setCurrentPage(safePage);\r\n  }, [totalPages]);\r\n\r\n  const goPrev = useCallback(() => goToPage(currentPage - 1), [currentPage, goToPage]);\r\n  const goNext = useCallback(() => goToPage(currentPage + 1), [currentPage, goToPage]);\r\n\r\n  return { itemsPerPage, setItemsPerPage, currentPage, totalPages, indexPages, currentItems, goToPage, goPrev, goNext };\r\n};\r\n\r\nexport default usePagination;","// import { Suspense, lazy, useMemo } from 'react';\r\n// import { useCrudFactory } from '../../hooks/useCrudFactory.js';\r\n// import { usePagination } from '../pagination/usePagination.js';\r\n\r\n// const SearchBar = lazy(() => import('../search/SearchBar.js'));\r\n// const ItemsList = lazy(() => import('./items/ItemsList.js'));\r\n// const PaginationBar = lazy(() => import('../pagination/PaginationBar.js'));\r\n\r\n// export const QueryItem = ({ classType, Icons, title, isMenuOpen }) => {\r\n//   const objectHook = useCrudFactory({ classType });\r\n//   const { api: urlApi, keys, data, sort } = objectHook;\r\n//   const { queries, setQueries, arrayFiltered } = data;\r\n//   const { SortByProperty, setSortBy } = sort;\r\n\r\n//   const items = useMemo(() => arrayFiltered ?? [], [arrayFiltered]);\r\n\r\n//   const pagination = usePagination({ array: items });     // ✅ Usamos nuestro hook de paginación\r\n\r\n//   const containerClass = useMemo(\r\n//     () => `container-fluid mt-4 mt-sm-5 me-0 smooth ${isMenuOpen ? \"w-responsive\" : \"w-100\"}`,\r\n//     [isMenuOpen]\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className={containerClass}>\r\n//         <h5 className=\"main-color fs-sm-2 mb-4\">{title}</h5>\r\n//         <Suspense fallback={<div className=\"loaderSpin\"></div>}>\r\n//           <SearchBar\r\n//             Icon={Icons[classType].IconSearch}\r\n//             items={keys}\r\n//             queries={queries}\r\n//             setQueries={setQueries}\r\n//             className={`float-end pb-3 me-0 smooth ${isMenuOpen ? \"w-responsive\" : \"w-100\"}`}\r\n//           />\r\n//           <ItemsList\r\n//             classType={classType}\r\n//             Icons={Icons}\r\n//             keys={keys}\r\n//             urlApi={urlApi}\r\n//             array={items.slice(...pagination.indexPage)}\r\n//             SortByProperty={SortByProperty}\r\n//             setSortBy={setSortBy}\r\n//           />\r\n//           <PaginationBar\r\n//             indexPages={pagination.indexPages}\r\n//             activePages={pagination.activePages}\r\n//             goToPage={pagination.goToPage}\r\n//             goPrev={pagination.goPrev}\r\n//             goNext={pagination.goNext}\r\n//           />\r\n//         </Suspense>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default QueryItem;\r\n\r\nimport { Suspense, lazy, useMemo } from 'react';\r\nimport { useCrudFactory } from '../../hooks/useCrudFactory.js';\r\nimport usePagination from '../pagination/usePagination.js';\r\n\r\nconst SearchBar = lazy(() => import('../search/SearchBar.js'));\r\nconst ItemsList = lazy(() => import('./items/ItemsList.js'));\r\nconst PaginationBar = lazy(() => import('../pagination/PaginationBar.js'));\r\n\r\nexport const QueryItem = ({ classType, Icons, title, isMenuOpen }) => {\r\n  const objectHook = useCrudFactory({ classType });\r\n  const { api: urlApi, keys, data, sort } = objectHook;\r\n  const { queries, setQueries, arrayFiltered } = data;\r\n  const { SortByProperty, setSortBy } = sort;\r\n\r\n  const items = useMemo(() => arrayFiltered ?? [], [arrayFiltered]);\r\n\r\n  // --- Hook de paginación limpio ---\r\n  const pagination = usePagination({ array: items, initialItemsPerPage: 10 });\r\n\r\n  const containerClass = useMemo(\r\n    () => `container-fluid mt-4 mt-sm-5 me-0 smooth ${isMenuOpen ? \"w-responsive\" : \"w-100\"}`,\r\n    [isMenuOpen]\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={containerClass}>\r\n        <h5 className=\"main-color fs-sm-2 mb-4\">{title}</h5>\r\n        <Suspense fallback={<div className=\"loaderSpin\"></div>}>\r\n          <SearchBar\r\n            Icon={Icons[classType].IconSearch}\r\n            items={keys}\r\n            queries={queries}\r\n            setQueries={setQueries}\r\n            className={`float-end pb-3 me-0 smooth ${isMenuOpen ? \"w-responsive\" : \"w-100\"}`}\r\n          />\r\n\r\n          {/* ItemsList recibe directamente los items de la página actual */}\r\n          <ItemsList\r\n            classType={classType}\r\n            Icons={Icons}\r\n            keys={keys}\r\n            urlApi={urlApi}\r\n            array={pagination.currentItems}\r\n            SortByProperty={SortByProperty}\r\n            setSortBy={setSortBy}\r\n          />\r\n\r\n          {/* PaginationBar usando currentPage */}\r\n          <PaginationBar\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            goToPage={pagination.goToPage}\r\n            goPrev={pagination.goPrev}\r\n            goNext={pagination.goNext}\r\n          />\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryItem;\r\n"],"names":["_ref","array","initialItemsPerPage","itemsPerPage","setItemsPerPage","useState","currentPage","setCurrentPage","totalPages","useMemo","Math","max","ceil","length","indexPages","Array","from","_","i","currentItems","start","end","slice","goToPage","useCallback","pageIndex","safePage","min","goPrev","goNext","SearchBar","lazy","ItemsList","PaginationBar","QueryItem","classType","Icons","title","isMenuOpen","objectHook","useCrudFactory","api","urlApi","keys","data","sort","queries","setQueries","arrayFiltered","SortByProperty","setSortBy","items","pagination","usePagination","containerClass","_jsx","className","children","_jsxs","Suspense","fallback","Icon","IconSearch"],"sourceRoot":""}