{"version":3,"file":"static/js/5085.b17b7ae8.chunk.js","mappings":"uRAKA,MAAMA,GAAgBC,EAAAA,EAAAA,MAAK,IAAM,gCAIpBC,EAAWC,IAAuH,IAAtH,UAAEC,EAAS,OAAEC,EAAM,YAAEC,EAAY,GAAE,MAAEC,EAAM,GAAE,cAAEC,EAAc,GAAE,aAAEC,EAAY,WAAEC,EAAU,UAAEC,EAAU,GAAE,MAAEC,GAAOT,EACvI,MAAOU,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GACjC,IAAI,MAAEC,EAAK,SAAEC,GAAaZ,EAAOa,SAAS,CAAEC,aAAaX,IAKzD,OACEY,EAAAA,EAAAA,MAAA,OAAKT,UAAU,yDAAwDU,SAAA,EACrEC,EAAAA,EAAAA,KAAA,UAAQC,QAAUA,IAAuBT,GAAR,IAATD,GAAgDW,SAAWf,EAAeE,UAAYA,GAA8B,IAAjBK,EAAMS,OALtH,0EACA,4EAIwJC,KAAK,SAASC,GAAI,eAAevB,EAAW,iBAAgB,gBAAgBA,EAAW,gBAAe,eAAeA,EAAW,gBAAc,QAAQ,aAAYQ,EAAMS,SAAoB,IAAjBL,EAAMS,OAAenB,EAAcU,KACjXM,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,eAAejB,UAAU,uCAAuC,aAAYC,EAAMS,SAAoB,IAAjBL,EAAMS,OAAe,GAAKnB,KAE9Hc,EAAAA,EAAAA,MAAA,MAAIO,GAAI,eAAevB,EAAWO,UAAW,0EAA4EE,EAAO,iBAAmB,IAAKgB,MAAyB,IAAjBtB,EAAMkB,OAAe,CAAC,UAAY,QAAU,CAAC,UAAY,SAAW,kBAAgB,eAAe,aAAYb,EAAMS,SAAA,CACjRd,EAAMuB,MAAMpB,EAAWqB,UAAU,GAAGrB,EAAWqB,UAAU,IAAIC,IAAI,CAACC,EAAQC,KACxE,OAAQ9B,GACN,IAAK,WACL,IAAK,SAAUY,EAAMiB,EAAO7B,GAAW+B,OAAS,IAAMF,EAAO7B,GAAWgC,SAAU,MAClF,IAAK,cAAepB,EAAMiB,EAAO7B,GAAWiC,OAAS,IAAMJ,EAAO7B,GAAW+B,OAAQ,MACrF,IAAK,cAAenB,EAAMiB,EAAO7B,GAAWkC,aAAc,MAC1D,IAAK,MACL,IAAK,SACL,IAAK,eAAgBtB,EAAMiB,EAAO7B,GAAW+B,OAAQ,MACrD,QAASnB,EAAM,GAEjB,OAASM,EAAAA,EAAAA,KAACiB,EAAO,CAAkCvB,MAAOA,EAAOC,SAAUA,EAAUH,QAASA,EAASL,aAAcA,EAAcG,MAAOA,GAAlHR,EAAU,SAAS8B,MAG/CZ,EAAAA,EAAAA,KAACtB,EAAa,CAACO,MAAOA,EAAOiC,aAAc9B,EAAW8B,aAAcT,UAAWrB,EAAWqB,UAAWU,YAAa/B,EAAW+B,YAAaC,WAAYhC,EAAWgC,WAAYC,aAAcjC,EAAWiC,aAAcC,eAAgBlC,EAAWkC,wBAMjPL,EAAUM,IAAwD,IAAvD,MAAE7B,EAAK,SAAEC,EAAQ,QAAEH,EAAO,aAAEL,EAAY,MAACG,GAAQiC,EAChE,OAASvB,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,UAAQX,UAAU,+BAA+BK,MAAQ8B,IAAK9B,EApCxD+B,iBAoC8ExB,QAAWyB,IAAY/B,GAAUgC,EAAAA,EAAAA,GAAOD,EAAME,OAAOlC,QAAUF,GAAQ,GAAQL,EAAauC,EAAME,OAAOlC,QAAU,aAAYJ,EAAMS,SAAGL,OAG3O,G","sources":["components/forms/dropdown/Dropdown.js"],"sourcesContent":["import '../forms.css';\r\nimport { lazy, useState } from 'react';\r\nimport sign from 'jwt-encode';                                                  // Para firma con jwt\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\n\r\nconst PaginationBar = lazy(() => import('../../pagination/PaginationBar.js'));\r\n\r\nconst jwtSecretKey = process.env.REACT_APP_JWTSECRET;\r\n\r\nexport const Dropdown = ({ classType, object, placeholder='', array=[], defaultSelect='', handleChange, pagination, className='', theme }) => {\r\n  const [open, setOpen] = useState(false)\r\n  let { value, setValue } = object.getValue({ defaultValue:defaultSelect })\r\n\r\n  const class1 = ' dropdown-toggle text-start pt-2 ps-2 ps-sm-3 pe-5 w-100 bg-transparent';\r\n  const class2 = ' dropdown-toggle text-center pt-4 ps-2 ps-sm-3 pe-5 w-100 bg-transparent';\r\n\r\n  return(\r\n    <div className=\"dropdown form-floating w-100 min-width-10 py-sm-0 px-0\" >\r\n      <button onClick={ () => open === false ? setOpen(true):setOpen(false) } onChange={ handleChange } className={ className + (value.length === 0 ? class1 : class2) } type=\"button\" id={\"selectButton\"+classType} data-bs-target={\"#dropdownMenu\"+classType} aria-controls={\"dropdownMenu\"+classType} aria-expanded=\"false\" data-theme={theme}>{ value.length === 0 ? placeholder : value }</button>\r\n      <label htmlFor=\"selectButton\" className=\"form-label text-nowrap text-truncate\" data-theme={theme}>{ value.length === 0 ? '' : placeholder }</label>\r\n\r\n      <ul id={\"dropdownMenu\"+classType} className={\"dropdown-menu text-center shadow-sm w-100 overflow-auto slideIn smooth\" + (open ? \" collapse show\" : \"\")} style={ array.length === 0 ? {\"maxHeight\":\"0rem\"} : {\"maxHeight\":\"12rem\"} } aria-labelledby=\"selectButton\" data-theme={theme}>\r\n        { array.slice(pagination.indexPage[0],pagination.indexPage[1]).map((option, index) => {\r\n            switch( classType ) {\r\n              case 'paciente': value=option[classType].nombre+ \" \" + option[classType].apellido; break;\r\n              case 'doctor': value=option[classType].nombre + \" \" + option[classType].apellido; break;\r\n              case 'consultorio': value=option[classType].numero + \" \" + option[classType].nombre; break;\r\n              case 'tratamiento': value=option[classType].especialidad; break;\r\n              case 'eps': value=option[classType].nombre; break;\r\n              case 'genero': value=option[classType].nombre; break;\r\n              case 'especialidad': value=option[classType].nombre; break;\r\n              default: value=''; break;\r\n            }\r\n            return ( <Options key={ classType+'Option'+index } value={value} setValue={setValue} setOpen={setOpen} handleChange={handleChange} theme={theme} /> );\r\n          })\r\n        }\r\n        <PaginationBar array={array} itemsPerPage={pagination.itemsPerPage} indexPage={pagination.indexPage} activePages={pagination.activePages} indexPages={pagination.indexPages} setIndexPage={pagination.setIndexPage} setActivePages={pagination.setActivePages} />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Options = ({ value, setValue, setOpen, handleChange,theme  }) => {\r\n  return ( <li><button className=\"dropdown-item bg-transparent\" value={ sign(value,jwtSecretKey) } onClick={ (event) => { setValue( decode(event.target.value) ); setOpen(false); handleChange(event.target.value)} } data-theme={theme}>{ value }</button></li> );\r\n}\r\n\r\nexport default Dropdown;"],"names":["PaginationBar","lazy","Dropdown","_ref","classType","object","placeholder","array","defaultSelect","handleChange","pagination","className","theme","open","setOpen","useState","value","setValue","getValue","defaultValue","_jsxs","children","_jsx","onClick","onChange","length","type","id","htmlFor","style","slice","indexPage","map","option","index","nombre","apellido","numero","especialidad","Options","itemsPerPage","activePages","indexPages","setIndexPage","setActivePages","_ref2","sign","process","event","decode","target"],"sourceRoot":""}