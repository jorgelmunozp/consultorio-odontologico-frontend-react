{"version":3,"file":"static/js/9947.01bc9dac.chunk.js","mappings":"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WAAYA,IAG7DF,IAAQ2C,EAAAA,EAAAA,eAAclB,EAAAA,EAAAA,KAAA,OAAKmB,GAAG,QAAOb,SAAGP,EAAWxB,KAAe0B,SAASC,YAMrF,GAAekB,EAAAA,EAAAA,MAAKjD,E,iBC/GpB,IAAIkD,EAAM,CACT,mBAAoB,CACnB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,+BAAgC,CAC/B,KACA,MAED,6BAA8B,CAC7B,KACA,MAED,gCAAiC,CAChC,KACA,MAED,6BAA8B,CAC7B,KACA,MAED,+BAAgC,CAC/B,KACA,MAED,8BAA+B,CAC9B,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,yBAA0B,CACzB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,2BAA4B,CAC3B,IACA,KAED,yBAA0B,CACzB,KACA,MAED,yBAA0B,CACzB,KACA,MAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,KACA,MAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,KACA,MAED,wBAAyB,CACxB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,qBAAsB,CACrB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,iBAAkB,CACjB,MAED,sBAAuB,CACtB,KACA,MAED,2BAA4B,CAC3B,KACA,MAED,gCAAiC,CAChC,IACA,KAED,uBAAwB,CACvB,KACA,MAED,4BAA6B,CAC5B,KACA,MAED,iBAAkB,CACjB,IACA,KAED,0BAA2B,CAC1B,KACA,MAED,wBAAyB,CACxB,KACA,MAED,wBAAyB,CACxB,KACA,MAED,sBAAuB,CACtB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,iBAAkB,CACjB,KACA,MAED,uBAAwB,CACvB,KACA,MAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,KACA,MAED,wBAAyB,CACxB,KACA,MAED,sBAAuB,CACt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","sources":["helpers/getDate.js","helpers/getData.js","hooks/useFetch.js","helpers/getTime.js","components/crud/views/CrudItems.js","components/icons|lazy|/^/.*/.js$/|groupOptions: {}|namespace object","components/selectors/getCitasFiltered.js","hooks/crud/useCita.js","hooks/crud/usePaciente.js","components/selectors/getPacientesFiltered.js","hooks/crud/useDoctor.js","components/selectors/getDoctoresFiltered.js","hooks/crud/useEspecialidad.js","components/selectors/getEspecialidadesFiltered.js","hooks/crud/useConsultorio.js","components/selectors/getConsultoriosFiltered.js","hooks/crud/useTratamiento.js","components/selectors/getTratamientosFiltered.js","hooks/useCrudFactory.js"],"sourcesContent":["const date = new Date();\r\n\r\nexport const getDate = date\r\n  .toLocaleDateString(\"es-CO\", {\r\n    formatMatcher: \"basic\",\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  })\r\n  .split(\"/\");","export const getData = async( urlApi ) => {\r\n    let responseFetch = { data: {}, status: 0 };\r\n    await fetch( urlApi )\r\n        .then(response => { responseFetch.status = response.status; return response.json() })\r\n        .then(data => responseFetch.data = data)\r\n        .catch((error) =>{\r\n            if(error.message === 'Failed to fetch') { responseFetch.status = 500 }\r\n        });\r\n    \r\n    return responseFetch;\r\n}","\r\nimport { useState, useEffect } from 'react';\r\nimport { getData } from '../helpers/getData.js';\r\n\r\nexport const useFetch = ( urlApi ) => {\r\n    const [responseFetch, setResponseFetch] = useState({ data: [], status: 0 });\r\n    useEffect( () => { \r\n        getData( urlApi )\r\n            .then( datos => setResponseFetch({ data: datos.data, status: datos.status }) ) \r\n            .catch((error) => console.log(\"Error useFetch: \" + error.message));\r\n    }, []);\r\n\r\n    return responseFetch;\r\n}","const hours = new Date();\r\n\r\nexport const getTime = hours.toLocaleString(\"en-US\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hour12: false,\r\n});","import '../../../alerts/modal/modal.css';\r\nimport { Suspense, lazy, memo, useState, useEffect, useMemo } from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport { useCrudFactory } from '../../../hooks/useCrudFactory.js';\r\nimport { iconHeight, iconWidth, iconStrokeWidth } from '../../../global.js';\r\n\r\n// helper para lazy-imports, DRY\r\nconst lazyIcon = (path) => lazy(() => import(`../../icons/${path}.js`));\r\n\r\n// centralizamos imports para que sean fáciles de leer\r\nconst IconsLazy = {\r\n  calendar: {\r\n    search: lazyIcon(\"calendar/CalendarSearch\"),\r\n    create: lazyIcon(\"calendar/CalendarPlus\"),\r\n    read: lazyIcon(\"calendar/CalendarSmile\"),\r\n    update: lazyIcon(\"calendar/CalendarEdit\"),\r\n    delete: lazyIcon(\"calendar/CalendarDelete\"),\r\n  },\r\n  user: {\r\n    search: lazyIcon(\"user/UserSearch\"),\r\n    create: lazyIcon(\"user/UserPlus\"),\r\n    read: lazyIcon(\"user/User\"),\r\n    update: lazyIcon(\"user/UserEdit\"),\r\n    delete: lazyIcon(\"user/UserDelete\"),\r\n  },\r\n  home: {\r\n    search: lazyIcon(\"home/HomeSearch\"),\r\n    create: lazyIcon(\"home/HomePlus\"),\r\n    read: lazyIcon(\"home/HomeIndex\"),\r\n    update: lazyIcon(\"home/HomeEdit\"),\r\n    delete: lazyIcon(\"home/HomeDelete\"),\r\n  },\r\n  hearth: {\r\n    search: lazyIcon(\"hearth/HearthSearch\"),\r\n    create: lazyIcon(\"hearth/HearthPlus\"),\r\n    update: lazyIcon(\"hearth/HearthEdit\"),\r\n    delete: lazyIcon(\"hearth/HearthDelete\"),\r\n  },\r\n  filter: {\r\n    search: lazyIcon(\"filter/FilterSearch\"),\r\n    create: lazyIcon(\"filter/FilterPlus\"),\r\n    update: lazyIcon(\"filter/FilterEdit\"),\r\n    delete: lazyIcon(\"filter/FilterDelete\"),\r\n  },\r\n  syringe: { read:lazyIcon(\"medical/SyringeLight\") }, \r\n  especialidad: { read:lazyIcon(\"medical/StethoscopeLight\") },\r\n};\r\n\r\nconst CreateItem = lazy(() => import(\"../CreateItem.js\"));\r\nconst QueryItem = lazy(() => import(\"../QueryItem.js\"));\r\nconst SearchItem = lazy(() => import('../SearchItem.js'));\r\n\r\nexport const CrudItems = ({ classType, title = \"Registros\" }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const objectHook = useCrudFactory({ classType });\r\n  const { keys, data } = objectHook;\r\n  const { queries, setQueries } = data;\r\n\r\n  // Iconos con useMemo para no recrear este objeto en cada render\r\n  const IconsCrud = useMemo( () => ({\r\n      cita: { IconSearch:IconsLazy.calendar.search, IconCreate:IconsLazy.calendar.create, IconRead:IconsLazy.calendar.read, IconUpdate:IconsLazy.calendar.update, IconDelete:IconsLazy.calendar.delete, },\r\n      paciente:{ IconSearch:IconsLazy.user.search, IconCreate:IconsLazy.user.create, IconRead:IconsLazy.user.read, IconUpdate:IconsLazy.user.update, IconDelete:IconsLazy.user.delete, },\r\n      doctor:{ IconSearch:IconsLazy.user.search, IconCreate:IconsLazy.user.create, IconRead:IconsLazy.user.read, IconUpdate:IconsLazy.user.update, IconDelete:IconsLazy.user.delete, },\r\n      consultorio:{ IconSearch:IconsLazy.home.search, IconCreate:IconsLazy.home.create, IconRead:IconsLazy.home.read, IconUpdate:IconsLazy.home.update, IconDelete:IconsLazy.home.delete, },\r\n      tratamiento:{ IconSearch:IconsLazy.filter.search, IconCreate:IconsLazy.filter.create, IconRead:IconsLazy.syringe.read, IconUpdate:IconsLazy.filter.update, IconDelete:IconsLazy.filter.delete, },\r\n      especialidad:{ IconSearch:IconsLazy.hearth.search, IconCreate:IconsLazy.hearth.create, IconRead:IconsLazy.especialidad.read, IconUpdate:IconsLazy.hearth.update, IconDelete:IconsLazy.hearth.delete, },\r\n  }), [] );\r\n\r\n  const IconCreate = IconsCrud[classType].IconCreate;\r\n  const IconSearch = IconsCrud[classType].IconSearch;\r\n\r\n    // 👇 Props de SearchItem memorizados para que no cambien entre renders\r\n  const searchItemProps = useMemo(() => ({ classType:classType, Icon:IconSearch, items:keys, queries, setQueries, className:'float-end pb-3 me-0 smooth w-100', setOpen }), [IconSearch, classType, keys, queries, setQueries]);\r\n  const createItemProps = useMemo(() => ({ classType:classType, Icon:IconCreate, objectHook, setOpen }), [IconCreate, classType, objectHook, setOpen]);\r\n\r\n  // 👇 Componentes del CRUD memorizados\r\n  const components = useMemo(() => ({\r\n      search: <SearchItem {...searchItemProps} />,\r\n      create: <CreateItem {...createItemProps} />,\r\n  }), [createItemProps, searchItemProps]);\r\n\r\n  // 👇 Hace scroll-lock solo cuando cambia 'open'\r\n  useEffect(() => {\r\n      if (open) { document.body.classList.add('noScroll'); } \r\n      else { document.body.classList.remove('noScroll'); }\r\n      return () => document.body.classList.remove('noScroll'); // cleanup\r\n  }, [open]);\r\n  \r\n  if (process.env.NODE_ENV === 'development') console.log('[Crud Items 🟠]');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={null}>\r\n        <h5 className=\"main-color mt-4 mb-4\">{title}</h5>\r\n\r\n        {/* 👇 Buttons */}\r\n        <div className='d-flex justify-content-center mb-2 gap-2'>\r\n          <button className='form-control iconBtn py-0 py-sm-1 bg-transparent w-25' onClick={()=>setOpen('search')}><IconSearch width={iconWidth} height={iconHeight} strokeWidth={iconStrokeWidth} className={'main-color jumpHover'}/></button>\r\n          <button className='form-control iconBtn py-0 py-sm-1 bg-transparent w-25' onClick={()=>setOpen('create')}><IconCreate width={iconWidth} height={iconHeight} strokeWidth={iconStrokeWidth} className={'main-color jumpHover'}/></button>\r\n        </div>\r\n\r\n        <QueryItem classType={classType} Icons={IconsCrud} objectHook={objectHook} />\r\n        \r\n        {/* 👇 Modal con portal */}\r\n        { open && createPortal( <div id=\"modal\">{ components[open] }</div>, document.body ) }\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(CrudItems);","var map = {\n\t\"./alert/Error.js\": [\n\t\t9635,\n\t\t9635\n\t],\n\t\"./alert/Success.js\": [\n\t\t5950,\n\t\t5950\n\t],\n\t\"./alert/Warning.js\": [\n\t\t7793,\n\t\t7793\n\t],\n\t\"./calendar/CalendarDelete.js\": [\n\t\t5994,\n\t\t5994\n\t],\n\t\"./calendar/CalendarEdit.js\": [\n\t\t9461,\n\t\t9461\n\t],\n\t\"./calendar/CalendarMedical.js\": [\n\t\t7126,\n\t\t7126\n\t],\n\t\"./calendar/CalendarPlus.js\": [\n\t\t2061,\n\t\t2061\n\t],\n\t\"./calendar/CalendarSearch.js\": [\n\t\t5385,\n\t\t5385\n\t],\n\t\"./calendar/CalendarSmile.js\": [\n\t\t3365,\n\t\t3365\n\t],\n\t\"./dentist/Tooth.js\": [\n\t\t4154,\n\t\t4154\n\t],\n\t\"./filter/Filter.js\": [\n\t\t4717,\n\t\t4717\n\t],\n\t\"./filter/FilterDelete.js\": [\n\t\t4854,\n\t\t4854\n\t],\n\t\"./filter/FilterEdit.js\": [\n\t\t2505,\n\t\t2505\n\t],\n\t\"./filter/FilterPlus.js\": [\n\t\t6681,\n\t\t6681\n\t],\n\t\"./filter/FilterSearch.js\": [\n\t\t6157,\n\t\t6157\n\t],\n\t\"./hearth/HearthDelete.js\": [\n\t\t622,\n\t\t622\n\t],\n\t\"./hearth/HearthEdit.js\": [\n\t\t7729,\n\t\t7729\n\t],\n\t\"./hearth/HearthPlus.js\": [\n\t\t1073,\n\t\t1073\n\t],\n\t\"./hearth/HearthSearch.js\": [\n\t\t885,\n\t\t885\n\t],\n\t\"./home/HomeDelete.js\": [\n\t\t4208,\n\t\t4208\n\t],\n\t\"./home/HomeEdit.js\": [\n\t\t355,\n\t\t355\n\t],\n\t\"./home/HomeIndex.js\": [\n\t\t8083,\n\t\t8083\n\t],\n\t\"./home/HomeMedical.js\": [\n\t\t7340,\n\t\t7340\n\t],\n\t\"./home/HomeMenu.js\": [\n\t\t6468,\n\t\t6468\n\t],\n\t\"./home/HomePlus.js\": [\n\t\t6335,\n\t\t6335\n\t],\n\t\"./home/HomeSearch.js\": [\n\t\t2043,\n\t\t2043\n\t],\n\t\"./logo/Logo.js\": [\n\t\t7087\n\t],\n\t\"./logo/LogoTooth.js\": [\n\t\t8273,\n\t\t8273\n\t],\n\t\"./medical/Stethoscope.js\": [\n\t\t3997,\n\t\t3997\n\t],\n\t\"./medical/StethoscopeLight.js\": [\n\t\t793,\n\t\t793\n\t],\n\t\"./medical/Syringe.js\": [\n\t\t1173,\n\t\t1173\n\t],\n\t\"./medical/SyringeLight.js\": [\n\t\t4001,\n\t\t4001\n\t],\n\t\"./menu/Menu.js\": [\n\t\t783,\n\t\t783\n\t],\n\t\"./sort/SortDownAlpha.js\": [\n\t\t9501,\n\t\t9501\n\t],\n\t\"./sort/SortDownNum.js\": [\n\t\t7421,\n\t\t7421\n\t],\n\t\"./sort/SortUpAlpha.js\": [\n\t\t8330,\n\t\t8330\n\t],\n\t\"./sort/SortUpNum.js\": [\n\t\t334,\n\t\t334\n\t],\n\t\"./theme/Language.js\": [\n\t\t426,\n\t\t426\n\t],\n\t\"./theme/Moon.js\": [\n\t\t4577,\n\t\t4577\n\t],\n\t\"./theme/Sun.js\": [\n\t\t4748,\n\t\t4748\n\t],\n\t\"./user/User.js\": [\n\t\t8155,\n\t\t8155\n\t],\n\t\"./user/UserDelete.js\": [\n\t\t6396,\n\t\t6396\n\t],\n\t\"./user/UserEdit.js\": [\n\t\t439,\n\t\t439\n\t],\n\t\"./user/UserInjured.js\": [\n\t\t3026,\n\t\t3026\n\t],\n\t\"./user/UserMedical.js\": [\n\t\t5888,\n\t\t5888\n\t],\n\t\"./user/UserNurse.js\": [\n\t\t938,\n\t\t938\n\t],\n\t\"./user/UserPlus.js\": [\n\t\t5435,\n\t\t5435\n\t],\n\t\"./user/UserSearch.js\": [\n\t\t3343,\n\t\t3343\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9955;\nmodule.exports = webpackAsyncContext;","export const getCitasFiltered = ({ array=[],code='',patient='',date='',time='',consultoryRoom='',doctor='',treatment='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.cita.paciente.toLowerCase().includes(patient.toLowerCase()) && item.cita.fecha.toLowerCase().includes(date.toLowerCase()) && item.cita.hora.toLowerCase().includes(time.toLowerCase()) && item.cita.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase())  && item.cita.doctor.toLowerCase().includes(doctor.toLowerCase()) && item.cita.tratamiento.toLowerCase().includes(treatment.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getDate } from '../../helpers/getDate.js';\r\nimport { getTime } from '../../helpers/getTime.js';\r\nimport { getCitasFiltered } from '../../components/selectors/getCitasFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_CITAS;\r\n\r\nexport const useCita = ({ initialValues={ paciente:'', consultorio:'', doctor:'', tratamiento:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n  \r\n  // 👇 State ---\r\n  const [paciente, setPaciente] = useState(initialValues.paciente || '');\r\n  const [fecha, setFecha] = useState(getDate[2] + \"-\" + getDate[1] + \"-\" + getDate[0]);\r\n  const [hora, setHora] = useState(getTime);\r\n  const [consultorio, setConsultorio] = useState(initialValues.consultorio || '');\r\n  const [doctor, setDoctor] = useState(initialValues.doctor || '');\r\n  const [tratamiento, setTratamiento] = useState(initialValues.tratamiento || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setPaciente('');\r\n    setFecha(getDate[2] + \"-\" + getDate[1] + \"-\" + getDate[0]);\r\n    setHora(getTime);\r\n    setConsultorio('');\r\n    setDoctor('');\r\n    setTratamiento('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'paciente', value:paciente, type:\"dropdown\", handleChange:(value) => setPaciente(value), placeholder:'Paciente' },\r\n    { key:'fecha', value:fecha, type:\"date\", handleChange:(value) => setFecha(value), placeholder:'Fecha' },\r\n    { key:'hora', value:hora, type:\"time\", handleChange:(value) => setHora(value), placeholder:'Hora' },\r\n    { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange:(value) => setConsultorio(value), placeholder:'Consultorio' },\r\n    { key:'doctor', value:doctor, type:\"dropdown\", handleChange:(value) => setDoctor(value), placeholder:'Doctor' },\r\n    { key:'tratamiento', value:tratamiento, type:\"dropdown\", handleChange:(value) => setTratamiento(value), placeholder:'Tratamiento' }\r\n  ], [paciente, fecha, hora, consultorio, doctor, tratamiento]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { paciente:'', fecha:'', hora:'', consultorio:'', doctor:'', tratamiento:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type: \"error\", title: \"Error en la conexión con la base de datos\", buttons: 1 });\r\n    }\r\n  }, [arrayFetch.status, alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment] = queries;\r\n  \r\n  const memoFiltered = useMemo(() => {\r\n    return getCitasFiltered({ array, code:queryCode, patient:queryPatient, date:queryDate, time:queryTime, consultoryRoom:queryConsultoryRoom, doctor:queryDoctor, treatment:queryTreatment });\r\n  }, [array, queryCode, queryPatient, queryDate, queryTime, queryConsultoryRoom, queryDoctor, queryTreatment]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n\r\n  // --- Sort ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.cita[config.key];\r\n    const valueB = b.cita[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      console.log(item);\r\n      setArrayFiltered(prev => [...prev, item]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useCita;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from \"../useFetch.js\";\r\nimport { getPacientesFiltered } from \"../../components/selectors/getPacientesFiltered.js\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_PACIENTES;\r\n\r\nexport const usePaciente = ({ initialValues={ nombre:'', apellido:'', identificacion:'', genero:'', eps:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n  const [apellido, setApellido] = useState(initialValues.apellido || '');\r\n  const [identificacion, setIdentificacion] = useState(initialValues.identificacion || '');\r\n  const [genero, setGenero] = useState(initialValues.genero || '');\r\n  const [eps, setEps] = useState(initialValues.eps || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNombre('');\r\n    setApellido('');\r\n    setIdentificacion('');\r\n    setGenero('');\r\n    setEps('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:\"nombre\", value:nombre, type:\"search\", handleChange:(value) => setNombre(value), placeholder:'Nombre' },\r\n    { key:\"apellido\", value:apellido, type:\"search\", handleChange:(value) => setApellido(value), placeholder:'Apellido' },\r\n    { key:\"identificacion\", value:identificacion, type:\"number\", handleChange:(value) => setIdentificacion(value), placeholder:'Identificación' },\r\n    { key:\"genero\", value:genero, type:\"dropdown\", handleChange:(value) => setGenero(value), placeholder:'Género' },\r\n    { key:\"eps\", value:eps, type:\"dropdown\", handleChange:(value) => setEps(value), placeholder:'Eps' },\r\n  ], [nombre, apellido, identificacion, genero, eps]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'', apellido:'', identificacion:'', genero:'', eps:'' }\r\n  \r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [queryCode, queryName, queryLastname, queryIdentification, queryGender, queryEps] = queries;\r\n  \r\n  const memoFiltered = useMemo(() => {\r\n    return getPacientesFiltered({ array, code:queryCode, name:queryName, lastname:queryLastname, identification:queryIdentification, gender:queryGender, eps:queryEps });\r\n  }, [array, queryCode, queryName, queryLastname, queryIdentification, queryGender, queryEps]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.paciente[config.key];\r\n    const valueB = b.paciente[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n    const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default usePaciente;","export const getPacientesFiltered = ({ array=[],code='',name='',lastname='',identification='',gender='',eps='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.paciente.nombre.toLowerCase().includes(name.toLowerCase()) && item.paciente.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.paciente.identificacion.toLowerCase().includes(identification.toLowerCase()) && item.paciente.genero.toLowerCase().includes(gender.toLowerCase()) && item.paciente.eps.toLowerCase().includes(eps.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from \"../useFetch.js\";\r\nimport { getDoctoresFiltered } from \"../../components/selectors/getDoctoresFiltered.js\";\r\n\r\nconst urlApi = process.env.REACT_APP_API_DOCTORES;\r\n\r\nexport const useDoctor = ({ initialValues={ nombre:'', apellido:'', identificacion:'', genero:'', especialidad:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n  \r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n  const [apellido, setApellido] = useState(initialValues.apellido || '');\r\n  const [identificacion, setIdentificacion] = useState(initialValues.identificacion || '');\r\n  const [genero, setGenero] = useState(initialValues.genero || '');\r\n  const [especialidad, setEspecialidad] = useState(initialValues.especialidad || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNombre('');\r\n    setApellido('');\r\n    setIdentificacion('');\r\n    setGenero('');\r\n    setEspecialidad('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:\"nombre\", value:nombre, type:\"search\", handleChange:(value) => setNombre(value), placeholder:'Nombre' },\r\n    { key:\"apellido\", value:apellido, type:\"search\", handleChange:(value) => setApellido(value), placeholder:'Apellido' },\r\n    { key:\"identificacion\", value:identificacion, type:\"number\", handleChange:(value) => setIdentificacion(value) , placeholder:'Identificación'},\r\n    { key:\"genero\", value:genero, type:\"dropdown\", handleChange:(value) => setGenero(value), placeholder:'Género' },\r\n    { key:\"especialidad\", value:especialidad, type:\"dropdown\", handleChange:(value) => setEspecialidad(value), placeholder:'Especialidad' },\r\n  ], [nombre, apellido, identificacion, genero, especialidad]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'', apellido:'', identificacion:'', genero:'', especialidad:'' }\r\n\r\n   // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [queryCode, queryName, queryLastname, queryIdentification, queryGender, querySpeciality] = queries;\r\n\r\n  const memoFiltered = useMemo(() => {\r\n    return getDoctoresFiltered({ array, code:queryCode, name:queryName, lastname:queryLastname, identification:queryIdentification, gender:queryGender, speciality:querySpeciality });\r\n  }, [array, queryCode, queryName, queryLastname, queryIdentification, queryGender, querySpeciality]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.doctor[config.key];\r\n    const valueB = b.doctor[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n  \r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useDoctor;","export const getDoctoresFiltered = ({ array=[],code='',name='',lastname='',identification='',gender='',speciality='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.doctor.nombre.toLowerCase().includes(name.toLowerCase()) && item.doctor.apellido.toLowerCase().includes(lastname.toLowerCase()) && item.doctor.identificacion.toLowerCase().includes(identification.toLowerCase()) && item.doctor.genero.toLowerCase().includes(gender.toLowerCase()) && item.doctor.especialidad.toLowerCase().includes(speciality.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getEspecialidadesFiltered } from '../../components/selectors/getEspecialidadesFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_ESPECIALIDADES;\r\n\r\nexport const useEspecialidad = ({ initialValues={ nombre:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNombre('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'nombre', value:nombre, type:'search', handleChange:(value) => setNombre(value), placeholder:'Nombre' }\r\n  ], [nombre]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { nombre:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\"]);\r\n  const [queryCode, queryName] = queries;\r\n\r\n  const memoFiltered = useMemo(() => {\r\n    return getEspecialidadesFiltered({ array, code:queryCode, name:queryName });\r\n  }, [array, queryCode, queryName]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.especialidad[config.key];\r\n    const valueB = b.especialidad[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n  \r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n}\r\nexport default useEspecialidad;","export const getEspecialidadesFiltered = ({ array=[],code='',name='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.especialidad.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getConsultoriosFiltered } from '../../components/selectors/getConsultoriosFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_CONSULTORIOS;\r\n\r\nexport const useConsultorio = ({ initialValues={ numero:'', nombre:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [numero, setNumero] = useState(initialValues.numero || '');\r\n  const [nombre, setNombre] = useState(initialValues.nombre || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setNumero('');\r\n    setNombre('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'numero', value:numero, type:'number', handleChange:(value) => setNumero(value), placeholder:'Número' },\r\n    { key:'nombre', value:nombre, type:'search', handleChange:(value) => setNombre(value), placeholder:'Nombre' }\r\n  ], [numero, nombre]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { numero:'', nombre:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\"]);\r\n  const [queryCode, queryNumber, queryName] = queries;\r\n  \r\n  const memoFiltered = useMemo(() => {\r\n    return getConsultoriosFiltered({ array, code:queryCode, number:queryNumber, name:queryName });\r\n  }, [array, queryCode, queryNumber, queryName]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.consultorio[config.key];\r\n    const valueB = b.consultorio[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useConsultorio;","export const getConsultoriosFiltered = ({ array=[],code='',number='',name='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.consultorio.numero.toString().includes(number) && item.consultorio.nombre.toLowerCase().includes(name.toLowerCase()) );\r\n}","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { useAlertContext } from \"../../alerts/AlertContext.js\";\r\nimport { useFetch } from '../useFetch.js';\r\nimport { getTratamientosFiltered } from '../../components/selectors/getTratamientosFiltered.js';\r\n\r\nconst urlApi = process.env.REACT_APP_API_TRATAMIENTOS;\r\n\r\nexport const useTratamiento = ({ initialValues={ especialidad:'', consultorio:'', doctor:'' } }) => {\r\n  const { alert } = useAlertContext();\r\n\r\n  // --- State ---\r\n  const [especialidad, setEspecialidad] = useState(initialValues.especialidad || '');\r\n  const [consultorio, setConsultorio] = useState(initialValues.consultorio || '');\r\n  const [doctor, setDoctor] = useState(initialValues.doctor || '');\r\n\r\n  // Reset state encapsulado\r\n  const resetState = useCallback(() => {\r\n    setEspecialidad('');\r\n    setConsultorio('');\r\n    setDoctor('');\r\n  }, []);\r\n\r\n  // State unificado para inputs\r\n  const state = useMemo(() => [\r\n    { key:'especialidad', value:especialidad, type:\"dropdown\", handleChange:(value) => setEspecialidad(value), placeholder:'Especialidad' },\r\n    { key:'consultorio', value:consultorio, type:\"dropdown\", handleChange:(value) => setConsultorio(value), placeholder:'Consultorio' },\r\n    { key:'doctor', value:doctor, type:\"dropdown\", handleChange:(value) => setDoctor(value), placeholder:'Doctor' },\r\n  ], [especialidad, consultorio, doctor]);\r\n\r\n  // --- Object ---\r\n  const dataObject = { especialidad:'', consultorio:'', doctor:'' }\r\n\r\n  // --- Titles ---\r\n  const keys = useMemo(() => state.map(({ placeholder, type }) => ({ key: placeholder, type })), [state]);\r\n  const placeholders = useMemo(() => keys.map((k) => k.key), [keys]);\r\n\r\n  // 👇 Data (fetch + queries + filtering) ---\r\n  // Data fetch\r\n  const arrayFetch = useFetch(urlApi);\r\n  useEffect(() => {\r\n    if (arrayFetch.status >= 400) {\r\n      alert({ type:'error', title:'Error en la conexión con la base de datos', buttons:1 });\r\n    }\r\n  }, [arrayFetch,alert]);\r\n\r\n  const array = useMemo(() => arrayFetch.data || [], [arrayFetch.data]);\r\n\r\n  // Queries + Filtering\r\n  const [queries, setQueries] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [queryCode, querySpecialty, queryConsultoryRoom, queryDoctor] = queries;\r\n\r\n  const memoFiltered = useMemo(() => {\r\n    return getTratamientosFiltered({ array, code:queryCode, specialty:querySpecialty, consultoryRoom:queryConsultoryRoom, doctor:queryDoctor });\r\n  }, [array, queryCode, querySpecialty, queryConsultoryRoom, queryDoctor]);\r\n\r\n  const [arrayFiltered, setArrayFiltered] = useState(memoFiltered);\r\n  useEffect(() => { setArrayFiltered(memoFiltered); }, [memoFiltered]); // 👈 Sincroniza cuando cambie memoFiltered\r\n  \r\n  // --- SORT ---\r\n  const [sortBy, setSortBy] = useState(0);\r\n\r\n  const sortConfig = useMemo(() => {                // 👈 Genera la configuración de ordenamiento\r\n    const fields =  state.map(({ key }) => key);\r\n    return fields.flatMap(field => [{ key: field, order: \"asc\" }, { key: field, order: \"desc\" }]); \r\n  }, [state]);\r\n\r\n  const SortByProperty = useCallback((a, b) => {    // 👈 Función memorizada de comparación en base a sortBy\r\n    const config = sortConfig[sortBy - 1];          // 👈 -1 porque sortBy empieza en 1\r\n    if (!config) return 0;\r\n\r\n    const valueA = a.tratamiento[config.key];\r\n    const valueB = b.tratamiento[config.key];\r\n\r\n    return config.order === \"asc\" ? valueA.localeCompare(valueB) : valueB.localeCompare(valueA); \r\n  }, [sortBy, sortConfig]);\r\n\r\n  const data = useMemo(() => ({ queries, setQueries, arrayFiltered, setArrayFiltered }), [queries, arrayFiltered]);\r\n  const sort = useMemo(() => ({ SortByProperty, setSortBy }), [SortByProperty]);\r\n\r\n  const handleItems = useCallback((action, item) => {\r\n    if (action === \"create\") {\r\n      setArrayFiltered(prev => [item, ...prev]);\r\n    } else if (action === \"update\") {\r\n      setArrayFiltered(prev => prev.map(i => (i._id === item._id ? item : i)));\r\n    } else if (action === \"delete\") {\r\n      setArrayFiltered(prev => prev.filter(i => i._id !== item));\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    api:urlApi,\r\n    dataObject,\r\n    keys,\r\n    placeholders,\r\n    state,\r\n    resetState,\r\n    data,\r\n    sort,\r\n    handleItems\r\n  };\r\n};\r\nexport default useTratamiento;","export const getTratamientosFiltered = ({ array=[],code='',specialty='',consultoryRoom='',doctor='' }) => {\r\n    return array.filter( item => item._id.toString().includes(code) && item.tratamiento.especialidad.toLowerCase().includes(specialty.toLowerCase()) && item.tratamiento.consultorio.toLowerCase().includes(consultoryRoom.toLowerCase()) && item.tratamiento.doctor.toLowerCase().includes(doctor.toLowerCase()) );\r\n}","import { useCita } from './crud/useCita.js';\r\nimport { usePaciente } from './crud/usePaciente.js';\r\nimport { useDoctor } from './crud/useDoctor.js';\r\nimport { useEspecialidad } from './crud/useEspecialidad.js';\r\nimport { useConsultorio } from './crud/useConsultorio.js';\r\nimport { useTratamiento } from './crud/useTratamiento.js';\r\n\r\nconst hookMap = {\r\n  cita: useCita,\r\n  paciente: usePaciente,\r\n  doctor: useDoctor,\r\n  consultorio: useConsultorio,\r\n  tratamiento: useTratamiento,\r\n  especialidad: useEspecialidad,\r\n};\r\n\r\nexport const useCrudFactory = ({ classType, initialValues={} }) => {\r\n  const selectedHook = hookMap[classType];\r\n\r\n  return selectedHook({ initialValues });\r\n}\r\n\r\nexport default useCrudFactory;"],"names":["getDate","Date","toLocaleDateString","formatMatcher","year","month","day","split","useFetch","urlApi","responseFetch","setResponseFetch","useState","data","status","useEffect","async","fetch","then","response","json","catch","error","message","getData","datos","console","log","getTime","toLocaleString","hour","minute","hour12","lazyIcon","path","lazy","IconsLazy","calendar","search","create","read","update","delete","user","home","hearth","filter","syringe","especialidad","CreateItem","QueryItem","SearchItem","CrudItems","_ref","classType","title","open","setOpen","objectHook","useCrudFactory","keys","queries","setQueries","IconsCrud","useMemo","cita","IconSearch","IconCreate","IconRead","IconUpdate","IconDelete","paciente","doctor","consultorio","tratamiento","searchItemProps","Icon","items","className","createItemProps","components","_jsx","document","body","classList","add","remove","children","_jsxs","Suspense","fallback","onClick","width","iconWidth","height","iconHeight","strokeWidth","iconStrokeWidth","Icons","createPortal","id","memo","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","all","slice","Object","module","exports","process","useCita","initialValues","alert","useAlertContext","setPaciente","fecha","setFecha","hora","setHora","setConsultorio","setDoctor","setTratamiento","resetState","useCallback","state","key","value","type","handleChange","placeholder","_ref2","placeholders","k","arrayFetch","buttons","array","queryCode","queryPatient","queryDate","queryTime","queryConsultoryRoom","queryDoctor","queryTreatment","memoFiltered","patient","date","time","consultoryRoom","treatment","item","_id","toString","includes","toLowerCase","getCitasFiltered","arrayFiltered","setArrayFiltered","sortBy","setSortBy","sortConfig","_ref3","flatMap","field","order","SortByProperty","a","b","config","valueA","valueB","localeCompare","sort","handleItems","action","prev","i","api","dataObject","usePaciente","nombre","apellido","identificacion","genero","eps","setNombre","setApellido","setIdentificacion","setGenero","setEps","queryName","queryLastname","queryIdentification","queryGender","queryEps","name","lastname","identification","gender","getPacientesFiltered","useDoctor","setEspecialidad","querySpeciality","speciality","getDoctoresFiltered","useEspecialidad","getEspecialidadesFiltered","useConsultorio","numero","setNumero","queryNumber","number","getConsultoriosFiltered","useTratamiento","querySpecialty","specialty","getTratamientosFiltered","hookMap","selectedHook"],"sourceRoot":""}