{"version":3,"file":"static/js/2864.f00e4d6b.chunk.js","mappings":"2OAGO,MAAMA,EAAgBC,IAOtB,IAPuB,YAC5BC,EAAW,WACXC,EAAU,SACVC,EAAQ,OACRC,EAAM,OACNC,EAAM,WACNC,EAAa,GACdN,EAyBC,MAAMO,GAAaC,EAAAA,EAAAA,SAAQ,KACzB,MAAMC,EAAQ,IAAIC,IAElBD,EAAME,IAAI,GACVF,EAAME,IAAIT,EAAa,GAGvB,MAAMU,EAAQC,KAAKC,IAAIb,EAAcK,EAAY,GAC3CS,EAAMF,KAAKG,IAAIf,EAAcK,EAAYJ,EAAa,GAC5D,IAAK,IAAIe,EAAIL,EAAOK,GAAKF,EAAKE,IAAKR,EAAME,IAAIM,GAG7C,MAAMC,EAAcC,MAAMC,KAAKX,GAAOY,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GACnDC,EAAS,GACf,IAAK,IAAIP,EAAI,EAAGA,EAAIC,EAAYO,OAAQR,IAClCA,EAAI,GAAKC,EAAYD,GAAKC,EAAYD,EAAI,GAAK,GACjDO,EAAOE,KAAK,YAEdF,EAAOE,KAAKR,EAAYD,IAE1B,OAAOO,GACN,CAACvB,EAAaC,EAAYI,IAGvBqB,GAAiBC,EAAAA,EAAAA,aACpBC,GAAM,IAAM1B,EAAS0B,GACtB,CAAC1B,IAKH,OAAmB,IAAfD,EAAyB,MAG3B4B,EAAAA,EAAAA,KAAA,OAAK,aAAW,kBAAkBC,UAAU,uBAAsBC,UAChEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kDAAiDC,SAAA,EAE7DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,UACvBF,EAAAA,EAAAA,KAAA,UAAQI,QAAS9B,EAAQ+B,KAAK,SAC5BJ,UAAU,sCACV,aAAW,SAAIK,SAA0B,IAAhBnC,EAAkB+B,SAAC,aAM/CzB,EAAW8B,IAAI,CAACR,EAAGS,IACZ,aAANT,GACEC,EAAAA,EAAAA,KAAA,MAAqBC,UAAU,qBAAoBC,UACjDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,YADrB,KAAKM,MAIdR,EAAAA,EAAAA,KAAA,MAAmBC,UAAW9B,IAAgB4B,EAAI,6BAA+B,YAAYG,UAC3FF,EAAAA,EAAAA,KAAA,UAAQI,QAASP,EAAeE,GAAIM,KAAK,SAASJ,UAAU,qCAAoCC,SAC7FH,EAAI,KAFA,KAAKA,OASlBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,UACvBF,EAAAA,EAAAA,KAAA,UAAQI,QAAS7B,EAAQ8B,KAAK,SAC5BJ,UAAU,sCACV,aAAW,SAAIK,SAAUnC,IAAgBC,EAAa,EAAE8B,SAAC,mBASrE,GAAeO,EAAAA,EAAAA,MAAKxC,E","sources":["components/pagination/PaginationBar.js"],"sourcesContent":["import './pagination.css';\r\nimport { memo, useMemo, useCallback } from 'react';\r\n\r\nexport const PaginationBar = ({\r\n  currentPage,\r\n  totalPages,\r\n  goToPage,\r\n  goPrev,\r\n  goNext,\r\n  windowSize = 1, // cu√°ntas p√°ginas adyacentes mostrar alrededor del current\r\n}) => {\r\n  // if (totalPages === 0) return null;\r\n\r\n  // const pages = new Set();\r\n\r\n  // // Siempre la primera y la √∫ltima p√°gina\r\n  // pages.add(0);\r\n  // pages.add(totalPages - 1);\r\n\r\n  // // P√°gina actual y adyacentes\r\n  // const start = Math.max(currentPage - windowSize, 1);\r\n  // const end = Math.min(currentPage + windowSize, totalPages - 2);\r\n  // for (let i = start; i <= end; i++) pages.add(i);\r\n\r\n  // // Convertimos a array ordenado\r\n  // const sortedPages = Array.from(pages).sort((a, b) => a - b);\r\n\r\n  // // Insertamos ellipsis donde haya saltos\r\n  // const finalPages = [];\r\n  // for (let i = 0; i < sortedPages.length; i++) {\r\n  //   if (i > 0 && sortedPages[i] - sortedPages[i - 1] > 1) finalPages.push('ellipsis');\r\n  //   finalPages.push(sortedPages[i]);\r\n  // }\r\n\r\n  // üëá Calcula las p√°ginas solo cuando cambian currentPage, totalPages o windowSize\r\n  const finalPages = useMemo(() => {\r\n    const pages = new Set();\r\n\r\n    pages.add(0);               // Siempre la primera y la √∫ltima p√°gina\r\n    pages.add(totalPages - 1);\r\n\r\n    // Actual + adyacentes\r\n    const start = Math.max(currentPage - windowSize, 1);\r\n    const end = Math.min(currentPage + windowSize, totalPages - 2);\r\n    for (let i = start; i <= end; i++) pages.add(i);\r\n\r\n    // Orden y ellipsis\r\n    const sortedPages = Array.from(pages).sort((a, b) => a - b);\r\n    const result = [];\r\n    for (let i = 0; i < sortedPages.length; i++) {\r\n      if (i > 0 && sortedPages[i] - sortedPages[i - 1] > 1) {\r\n        result.push('ellipsis');\r\n      }\r\n      result.push(sortedPages[i]);\r\n    }\r\n    return result;\r\n  }, [currentPage, totalPages, windowSize]);\r\n\r\n  // üëá Evita recrear funciones en cada render\r\n  const handleGoToPage = useCallback(\r\n    (p) => () => goToPage(p),\r\n    [goToPage]\r\n  );\r\n\r\n  if( process.env.NODE_ENV === 'development' ) { console.log('[Pagination 1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£]') }\r\n\r\n  if (totalPages === 0) return null;\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation\" className=\"container-fluid mt-3\">\r\n      <ul className=\"pagination pagination-sm justify-content-center\">\r\n        {/* Bot√≥n anterior */}\r\n        <li className=\"page-item\">\r\n          <button onClick={goPrev} type=\"button\"\r\n            className=\"page-link rounded-circle page-arrow\"\r\n            aria-label=\"‚óÇ\" disabled={currentPage === 0}>\r\n            ‚óÇ\r\n          </button>\r\n        </li>\r\n\r\n        {/* P√°ginas */}\r\n        {finalPages.map((p, idx) =>\r\n          p === 'ellipsis' ? (\r\n            <li key={`e-${idx}`} className=\"page-item disabled\">\r\n              <span className=\"page-link\">‚Ä¶</span>\r\n            </li>\r\n          ) : (\r\n            <li key={`p-${p}`} className={currentPage === p ? 'page-item active fw-bolder' : 'page-item'}>\r\n              <button onClick={handleGoToPage(p)} type=\"button\" className=\"page-link rounded-circle fw-bolder\">\r\n                {p + 1}\r\n              </button>\r\n            </li>\r\n          )\r\n        )}\r\n\r\n        {/* Bot√≥n siguiente */}\r\n        <li className=\"page-item\">\r\n          <button onClick={goNext} type=\"button\"\r\n            className=\"page-link rounded-circle page-arrow\"\r\n            aria-label=\"‚ñ∏\" disabled={currentPage === totalPages - 1}>\r\n            ‚ñ∏\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default memo(PaginationBar);\r\n"],"names":["PaginationBar","_ref","currentPage","totalPages","goToPage","goPrev","goNext","windowSize","finalPages","useMemo","pages","Set","add","start","Math","max","end","min","i","sortedPages","Array","from","sort","a","b","result","length","push","handleGoToPage","useCallback","p","_jsx","className","children","_jsxs","onClick","type","disabled","map","idx","memo"],"sourceRoot":""}