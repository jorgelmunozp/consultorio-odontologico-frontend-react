{"version":3,"file":"static/js/1831.7b5ca47a.chunk.js","mappings":"2PAGA,MAAMA,GAASC,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAC1BC,GAAiBF,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAClCE,GAAcH,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAC/BG,GAAkBJ,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCACnCI,GAAeL,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAChCK,GAAaN,EAAAA,EAAAA,OAAMC,EAAAA,EAAAA,MAAK,IAAM,iCAE9BM,EAAkBC,0CAEXC,EAAYA,KACvB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAI7C,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAACC,OAAQ,CAAEC,sBAAsB,EAAMC,oBAAoB,GAAQC,SAAA,EACxEC,EAAAA,EAAAA,KAACpB,EAAM,CAACY,cAAeA,KAEvBQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDF,UACrEL,EAAAA,EAAAA,MAACQ,EAAAA,GAAM,CAAAH,SAAA,EACLC,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,KAAMhB,GAAmB,IAAMA,GAAmB,EAAMiB,SAAUL,EAAAA,EAAAA,KAAChB,EAAW,CAAAe,UAACC,EAAAA,EAAAA,KAACjB,EAAc,CAACQ,WAAYA,SAClHS,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,KAAMhB,GAAmBA,EAAkB,QAASiB,SAAUL,EAAAA,EAAAA,KAACd,EAAY,CAAAa,UAACC,EAAAA,EAAAA,KAACb,EAAU,SAC9Fa,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,KAAK,KAAKC,SAAUL,EAAAA,EAAAA,KAACd,EAAY,CAAAa,UAACC,EAAAA,EAAAA,KAACf,EAAe,iBAOnE,GAAeJ,EAAAA,EAAAA,MAAKS,E","sources":["routers/AppRouter.js"],"sourcesContent":["import { lazy, memo, useState } from 'react';\r\nimport { Routes, Route, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nconst Navbar = memo( lazy(() => import('../components/menu/Navbar.js')) );\r\nconst TemplateScreen = memo( lazy(() => import('../components/views/TemplateScreen.js')) );\r\nconst PublicRoute = memo( lazy(() => import('./PublicRoute.js')) );\r\nconst DashboardRoutes = memo( lazy(() => import('./DashboardRoutes.js')) );\r\nconst PrivateRoute = memo( lazy(() => import('./PrivateRoute.js')) );\r\nconst HomeScreen = memo( lazy(() => import('../components/views/home/HomeScreen.js')) );\r\n\r\nconst urlBaseFrontend = process.env.REACT_APP_URL_BASE_FRONTEND;\r\n\r\nexport const AppRouter = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  \r\n  if( process.env.NODE_ENV === 'development' ) { console.log('[App Router]') }\r\n\r\n  return (\r\n    <Router future={{ v7_relativeSplatPath: true, v7_startTransition: true, }}>\r\n      <Navbar setIsMenuOpen={setIsMenuOpen} />\r\n\r\n      <div className=\"container-fluid mt-5 px-0 text-center user-select-none\">\r\n        <Routes>\r\n          <Route path={urlBaseFrontend || \"/\" + urlBaseFrontend || \"/*\"} element={ <PublicRoute><TemplateScreen isMenuOpen={isMenuOpen} /></PublicRoute> } />\r\n          <Route path={urlBaseFrontend || urlBaseFrontend + \"/home\"} element={ <PrivateRoute><HomeScreen /></PrivateRoute> } />\r\n          <Route path=\"/*\" element={ <PrivateRoute><DashboardRoutes /></PrivateRoute> } />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default memo(AppRouter);"],"names":["Navbar","memo","lazy","TemplateScreen","PublicRoute","DashboardRoutes","PrivateRoute","HomeScreen","urlBaseFrontend","process","AppRouter","isMenuOpen","setIsMenuOpen","useState","_jsxs","Router","future","v7_relativeSplatPath","v7_startTransition","children","_jsx","className","Routes","Route","path","element"],"sourceRoot":""}