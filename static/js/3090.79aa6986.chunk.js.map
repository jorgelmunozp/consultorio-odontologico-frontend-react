{"version":3,"file":"static/js/3090.79aa6986.chunk.js","mappings":"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","sources":["components/crud/create/CreateTratamiento.js","helpers/fetchCreate.js","components/forms/buttons/BotonFetch.js","components/crud/CreateItem.js"],"sourcesContent":["import { CreateItem } from '../CreateItem';\r\n\r\nexport const CreateTratamiento = ({ Icon, isMenuOpen }) => {\r\n  return ( <CreateItem classType={'tratamiento'} Icon={Icon} isMenuOpen={isMenuOpen} /> )\r\n}\r\n\r\nexport default CreateTratamiento;","export const fetchCreate = ( urlApi,dataApi,setResponseStatus ) => {\r\n    fetch(urlApi, {\r\n      method: \"POST\",\r\n      body: eval( dataApi ),\r\n      headers: { \"Content-type\": \"application/json\" }\r\n    }).then((response) => {\r\n      response.json();\r\n      if(200 <= response.status && response.status <= 299){\r\n        console.log('POST ' + response.status + ' Registro exitoso')\r\n        setResponseStatus(response.status);\r\n      } else if(400 <= response.status && response.status <= 499){\r\n        console.log('POST ' + response.status + ' Registro fallido: ' + 'Error en el envío de datos')\r\n        setResponseStatus(response.status);\r\n      } else if(500 <= response.status && response.status <= 599){\r\n        console.log('POST ' + response.status + ' Registro fallido: ' + 'Error en el servidor remoto')\r\n        setResponseStatus(response.status);\r\n      }\r\n    }).catch((error) => {\r\n      const errorMessage = error.toString().split(':')[1].trim();\r\n      if(errorMessage === 'Failed to fetch') {\r\n        console.log(error.status +' Registro fallido')\r\n        setResponseStatus('Registro fallido: ' + 'No hay conexión con la base de datos');\r\n      } else {\r\n        setResponseStatus('Registro fallido: ' + errorMessage);\r\n      }     \r\n    });\r\n}","import { Alert } from '../../alert/Alert';\r\nimport { fetchCreate } from '../../../helpers/fetchCreate';\r\n\r\nexport const BotonFetch = ({ endIcon,title,urlApi,dataApi,setResponseStatus,className }) => {\r\n  const handleClick = () => {\r\n    if( dataApi.length === 0 ) { Alert({ type:'warning', title:'Debes ingresar todos los datos' }).launch() }\r\n    else { fetchCreate(urlApi,dataApi,setResponseStatus) }\r\n  }\r\n\r\n  return ( <button onClick={ handleClick } className={ className }> { title } { endIcon } </button> )\r\n}\r\n","import { useEffect, useState }  from \"react\";\r\nimport { createRoot } from 'react-dom/client';\r\n\r\nimport { Alert } from '../alert/Alert';\r\nimport { Dropdown as DropdownClass } from '../../classes/Dropdown';\r\nimport { Cita } from '../../classes/Cita';\r\nimport { Paciente, Doctor } from '../../classes/User';\r\nimport { Especialidad } from '../../classes/Especialidad';\r\nimport { Consultorio } from '../../classes/Consultorio';\r\nimport { Tratamiento } from '../../classes/Tratamiento';\r\nimport { Dropdown } from '../forms/dropdown/Dropdown';\r\nimport { Input } from '../forms/inputs/Input';\r\nimport { BotonFetch } from \"../forms/buttons/BotonFetch\";\r\n\r\nimport sign from 'jwt-encode';                                              // Para firma con jwt\r\nimport { jwtDecode as decode } from \"jwt-decode\";\r\nconst jwtSecretKey = process.env.REACT_APP_JWTSECRET;\r\n\r\nexport const CreateItem = ({ classType, Icon, isMenuOpen }) => {\r\n  const [responseStatus, setResponseStatus] = useState(0);\r\n  \r\n  const classes = { cita: { Classe: Cita },\r\n                    paciente: { Classe: Paciente },\r\n                    doctor: { Classe: Doctor },\r\n                    consultorio: { Classe: Consultorio },\r\n                    tratamiento: { Classe: Tratamiento },\r\n                    especialidad: { Classe: Especialidad }\r\n  }\r\n\r\n  // --- Clase Item\r\n  const objectClass = new classes[classType].Classe('');                    // Objeto instanciado con la Class correspondiente\r\n  const state = objectClass.state;\r\n  const urlApi = objectClass.api;\r\n  let item = \"\";\r\n\r\n  if(state.filter( property => property.value === '').length === 0 ) {      // Check for emtpy fields to avoid any empty item\r\n    state.forEach( property => objectClass[property.key] = property.value );// Carga los valores ingresados por el usuario en el objeto\r\n    \r\n    item = `JSON.stringify({                           \r\n      ${classes[classType].Classe.name.toLowerCase()}: ${JSON.stringify(objectClass)}\r\n    })`; \r\n  } \r\n\r\n  if( 200 <= responseStatus && responseStatus <= 299 ) {\r\n    console.log(\"state CreateItem 1: \", state)\r\n//************ SI FUNCIONA PERO NO RENDERIZA: -->\r\n    state.forEach( property => property.setState('') );                    // Reinicia todas las variables  \r\n    // state.forEach( \r\n    //   property => { property.setState('');\r\n    //   const myDropdown = new DropdownClass({ classType:property.key });\r\n    //   const { array, pagination } = myDropdown.getData();\r\n\r\n    //   const row = createRoot(document.getElementById( 'row'+property.key ));\r\n    //   row.render(\r\n    //     <>\r\n    //       { property.type === 'dropdown' ? <div className='col'><Dropdown classType={property.key} object={myDropdown} array={array} handleChange={property.handleChange} placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)} pagination={pagination} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"} /></div>\r\n    //                                      : <div className='col'><Input type={property.type} defaultValue={property.value} handleChange={property.handleChange} placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)} className={'input form-control rounded border-muted border-1 text-muted text-center shadow-sm'} /></div>\r\n    //       }\r\n    //     </>\r\n    //   )}\r\n    // );                     // Reinicia todas las variables  \r\n    \r\n\r\n\r\n    console.log(\"state CreateItem 2: \", state)\r\n\r\n    Alert({ type:'success', title:'Registro exitoso' }).launch();\r\n    setResponseStatus(0);\r\n  } else if( 400 <= responseStatus && responseStatus <= 499 ) {\r\n    Alert({ type:'error', title:'Error en el registro' }).launch();\r\n    setResponseStatus(0);\r\n  } else if( 500 <= responseStatus && responseStatus <= 599 ) {\r\n    Alert({ type:'error', title:'Error en el registro' }).launch();\r\n    setResponseStatus(0);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='mt-4 mt-sm-5'>\r\n        <center>\r\n          <h5 className='century-gothic main-color fs-sm-2'>Registrar { classType.charAt(0).toUpperCase() + classType.slice(1) }</h5>\r\n        </center>\r\n        <div className={'container-fluid mt-2 mt-sm-5 pe-0 pe-md-5 px-0 me-0 smooth ' + (isMenuOpen ? ' w-responsive':' px-sm-5 w-100' )}>\r\n          {\r\n            state.map((property) => {\r\n              const myDropdown = new DropdownClass({ classType:property.key });\r\n              const { array, pagination } = myDropdown.data;\r\n\r\n              return (\r\n                <div key={'row'+property.key} id={'row'+property.key} className='row'>\r\n                  <>\r\n                  { property.type === 'dropdown' ? <div className='col'><Dropdown classType={property.key} object={myDropdown} array={array} handleChange={property.handleChange} placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)} pagination={pagination} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"} /></div>\r\n                                                 : <div className='col'><Input type={property.type} defaultValue={property.value} handleChange={property.handleChange} placeholder={property.key.charAt(0).toUpperCase() + property.key.slice(1)} className={'input form-control rounded border-muted border-1 text-muted text-center shadow-sm'} /></div>\r\n                  }\r\n                  </>\r\n                </div>\r\n              )})\r\n          }\r\n          <div className='row mt-4 mt-sm-5'>\r\n            <div className='col'>\r\n              <BotonFetch endIcon={<Icon />} title={'Registrar'} urlApi={urlApi} dataApi={item} setResponseStatus={setResponseStatus} className={'button rounded border-0 py-3 shadow-sm'} ></BotonFetch>\r\n            </div>\r\n          </div>              \r\n\t\t\t  </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":["CreateTratamiento","_ref","Icon","isMenuOpen","_jsx","CreateItem","classType","fetchCreate","urlApi","dataApi","setResponseStatus","fetch","method","body","eval","headers","then","response","json","status","console","log","catch","error","errorMessage","toString","split","trim","BotonFetch","endIcon","title","className","_jsxs","onClick","handleClick","length","Alert","type","launch","children","responseStatus","useState","classes","cita","Classe","Cita","paciente","Paciente","doctor","Doctor","consultorio","Consultorio","tratamiento","Tratamiento","especialidad","Especialidad","objectClass","state","api","item","filter","property","value","forEach","key","name","toLowerCase","JSON","stringify","setState","charAt","toUpperCase","slice","map","myDropdown","DropdownClass","array","pagination","data","id","_Fragment","Dropdown","object","handleChange","placeholder","Input","defaultValue"],"sourceRoot":""}